2025-02-21 14:44:19 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 8635 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-21 14:44:19 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-21 14:44:19 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-21 14:44:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-21 14:44:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 8 JPA repository interfaces.
2025-02-21 14:44:20 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-21 14:44:20 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-21 14:44:20 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-21 14:44:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-21 14:44:20 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-21 14:44:20 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-21 14:44:20 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-21 14:44:20 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1163 ms
2025-02-21 14:44:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-21 14:44:24 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4aba7617
2025-02-21 14:44:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-21 14:44:24 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-21 14:44:29 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-21 14:44:29 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-21 14:44:29 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-21 14:44:29 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-21 14:44:31 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-21 14:44:31 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-21 14:44:31 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-21 14:44:31 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-21 14:44:31 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-21 14:44:32 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-21 14:44:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists benefit_cards cascade
2025-02-21 14:44:33 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faq cascade
2025-02-21 14:44:33 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faqs cascade
2025-02-21 14:44:33 [main] DEBUG org.hibernate.SQL - 
    drop table if exists support_logos cascade
2025-02-21 14:44:33 [main] DEBUG org.hibernate.SQL - 
    drop table if exists testimonials cascade
2025-02-21 14:44:34 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-02-21 14:44:34 [main] DEBUG org.hibernate.SQL - 
    drop table if exists visitors cascade
2025-02-21 14:44:34 [main] DEBUG org.hibernate.SQL - 
    create table benefit_cards (
        active boolean not null,
        display_order integer check ((display_order<=4) and (display_order>=1)),
        created_at timestamp(6),
        id bigserial not null,
        description TEXT,
        icon_url varchar(255),
        title varchar(255),
        primary key (id)
    )
2025-02-21 14:44:34 [main] DEBUG org.hibernate.SQL - 
    create table faq (
        id bigserial not null,
        answer TEXT,
        category varchar(255),
        question varchar(255),
        primary key (id)
    )
2025-02-21 14:44:35 [main] DEBUG org.hibernate.SQL - 
    create table faqs (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        updated_at timestamp(6),
        answer TEXT not null,
        question varchar(255) not null,
        primary key (id)
    )
2025-02-21 14:44:35 [main] DEBUG org.hibernate.SQL - 
    create table support_logos (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        image_url varchar(255),
        name varchar(255),
        website_url varchar(255),
        primary key (id)
    )
2025-02-21 14:44:35 [main] DEBUG org.hibernate.SQL - 
    create table testimonials (
        display_order integer,
        is_active boolean,
        rating integer not null,
        created_at timestamp(6),
        id bigserial not null,
        comment varchar(1000) not null,
        avatar_url varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-02-21 14:44:35 [main] DEBUG org.hibernate.SQL - 
    create table users (
        is_active boolean,
        login_count integer,
        created_at timestamp(6),
        id bigserial not null,
        last_activity timestamp(6),
        last_login timestamp(6),
        email varchar(255) not null unique,
        full_name varchar(255),
        password varchar(255) not null,
        phone_number varchar(255),
        role varchar(255) check (role in ('USER','ADMIN')),
        source varchar(255),
        primary key (id)
    )
2025-02-21 14:44:36 [main] DEBUG org.hibernate.SQL - 
    create table visitors (
        bounced boolean not null,
        is_active boolean not null,
        is_downloaded boolean not null,
        page_visit_count integer not null,
        first_visit_time timestamp(6) not null,
        id bigserial not null,
        last_active_time timestamp(6) not null,
        session_duration bigint,
        ip_address varchar(255) not null,
        last_page_visited varchar(255),
        session_id varchar(255) not null,
        user_agent varchar(255),
        primary key (id)
    )
2025-02-21 14:44:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_session_id 
       on visitors (session_id)
2025-02-21 14:44:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_last_active 
       on visitors (last_active_time)
2025-02-21 14:44:36 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-21 14:44:37 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-21 14:44:38 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-21 14:44:38 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-21 14:44:39 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@23ece5f3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d4767be, org.springframework.security.web.context.SecurityContextHolderFilter@4d75dba3, org.springframework.security.web.header.HeaderWriterFilter@132b11f8, org.springframework.web.filter.CorsFilter@6b475c1e, org.springframework.security.web.authentication.logout.LogoutFilter@287bdaf3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7a2e996c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@790446ea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ef43e17, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21df4367, org.springframework.security.web.access.ExceptionTranslationFilter@5193cb13, org.springframework.security.web.access.intercept.AuthorizationFilter@590ed52d]
2025-02-21 14:44:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-21 14:44:39 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 20.045 seconds (process running for 20.468)
2025-02-21 14:44:40 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-21 14:44:40 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-21 14:44:40 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-24 21:34:42 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 270821 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-24 21:34:42 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.4.3, Spring v6.2.3
2025-02-24 21:34:42 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-24 21:34:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-24 21:34:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45 ms. Found 8 JPA repository interfaces.
2025-02-24 21:34:43 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 21:34:43 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 21:34:43 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-24 21:34:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-24 21:34:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-24 21:34:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.36]
2025-02-24 21:34:43 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-24 21:34:43 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1136 ms
2025-02-24 21:34:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-24 21:34:46 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@516b84d1
2025-02-24 21:34:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-24 21:34:47 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-24 21:34:51 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-24 21:34:51 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-24 21:34:51 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-24 21:34:51 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-24 21:34:53 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-24 21:34:53 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-02-24 21:34:53 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-24 21:34:53 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-24 21:34:53 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-24 21:34:54 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 16.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-02-24 21:34:55 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-24 21:34:57 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 21:34:57 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-24 21:35:00 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-02-24 21:35:00 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-24 21:35:01 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-02-24 21:35:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-02-24 21:35:01 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 19.731 seconds (process running for 20.115)
2025-02-24 21:35:02 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-24 21:35:02 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-24 21:35:02 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-24 21:35:05 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 21:35:05 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [76, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@546cb43a]
2025-02-24 21:35:05 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-24 21:35:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-24 21:35:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:35:05 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-24 21:35:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:35:05 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 21:35:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 21:35:05 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [142, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@4cd794c7]
2025-02-24 21:35:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:35:05 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5ab69cc7]]
2025-02-24 21:35:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:35:05 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-24 21:35:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 21:35:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:35:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:35:06 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page session-update
2025-02-24 21:35:06 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1028ms | Result: <200 OK OK,[]>
2025-02-24 21:35:06 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page session-update
2025-02-24 21:35:06 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 932ms | Result: <200 OK OK,[]>
2025-02-24 21:35:07 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-24 21:35:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:35:07 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 1 benefits for homepage
2025-02-24 21:35:07 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Привет (Order: 1)
2025-02-24 21:35:07 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 21:35:07 [http-nio-8080-exec-1] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 21:35:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 21:35:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:35:07 [http-nio-8080-exec-1] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 21:35:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:35:07 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 21:35:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 21:35:08 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page benefitsPage
2025-02-24 21:35:08 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 2454ms | Result: admin/content/benefits
2025-02-24 21:35:08 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 0 FAQs for homepage
2025-02-24 21:35:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:35:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:35:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:35:09 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page home
2025-02-24 21:35:09 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 4023ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Привет, description=Привет, displayOrder=1, active=true)], testimonials=[], faqs=[]}]
2025-02-24 21:35:18 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 21:35:18 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T21:35:18.662381214, endDate: 2025-02-24T21:35:18.662381214
2025-02-24 21:35:18 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 21:35:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 21:35:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:35:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:35:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:35:19 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 21:35:19 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T21:35:19.080430151, endDate: 2025-02-24T21:35:19.080430151
2025-02-24 21:35:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:35:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:35:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:35:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:35:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:35:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:35:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:35:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:35:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:35:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:35:19 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getActivityHeatmap
2025-02-24 21:35:19 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1258ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=1}, {dayOfWeek=1, hour=21, count=2}],[]>
2025-02-24 21:35:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:35:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:35:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:35:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:35:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:35:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:35:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:35:20 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-24 21:35:20 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-24 21:35:20 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=330.0, previous=0.0, change=100.0
2025-02-24 21:35:20 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:35:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:35:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:35:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:35:21 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-24 21:35:21 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-24 21:35:21 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=330.0, previous=0.0, change=100.0
2025-02-24 21:35:21 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:35:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:35:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:35:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:35:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:35:21 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:35:21 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3066ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=3}], bounceChange=0.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=330.0, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=0.0},[]>
2025-02-24 21:35:22 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:35:22 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3000ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=3}], bounceChange=0.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=330.0, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=0.0},[]>
2025-02-24 21:35:23 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 21:35:23 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T21:35:23.156491504, endDate: 2025-02-24T21:35:23.156491504
2025-02-24 21:35:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:35:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:35:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:35:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:35:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:35:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:35:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:35:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:35:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:35:25 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-24 21:35:25 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-24 21:35:25 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=331.0, previous=0.0, change=100.0
2025-02-24 21:35:25 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:35:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:35:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:35:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:35:26 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:35:26 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3022ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=3}], bounceChange=0.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=331.0, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=0.0},[]>
2025-02-24 21:35:27 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [13, false, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@41d6adad]
2025-02-24 21:35:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:35:27 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 21:35:27 [http-nio-8080-exec-5] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-24 21:35:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-24 21:35:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:35:28 [http-nio-8080-exec-5] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-24 21:35:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:35:28 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 21:35:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 21:35:28 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page session-update
2025-02-24 21:35:28 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 923ms | Result: <200 OK OK,[]>
2025-02-24 21:35:29 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 1 benefits for homepage
2025-02-24 21:35:29 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Salom (Order: 1)
2025-02-24 21:35:29 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 21:35:29 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 21:35:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 21:35:29 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 21:35:29 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 21:35:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 21:35:30 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 0 FAQs for homepage
2025-02-24 21:35:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:35:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:35:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:35:31 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page home
2025-02-24 21:35:31 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 3309ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Salom, description=Salom, displayOrder=1, active=true)], testimonials=[], faqs=[]}]
2025-02-24 21:38:41 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 21:38:41 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-24 21:38:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-24 21:38:41 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [187, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@1f520cad]
2025-02-24 21:38:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:38:41 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-24 21:38:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:38:42 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 21:38:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 21:38:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:38:42 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [209, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@1e6a9493]
2025-02-24 21:38:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:38:42 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page session-update
2025-02-24 21:38:42 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 936ms | Result: <200 OK OK,[]>
2025-02-24 21:38:42 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5d6c2f00]]
2025-02-24 21:38:42 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-24 21:38:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 21:38:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:38:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:38:43 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 1 benefits for homepage
2025-02-24 21:38:43 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Salom (Order: 1)
2025-02-24 21:38:43 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 21:38:43 [http-nio-8080-exec-1] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 21:38:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 21:38:43 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page session-update
2025-02-24 21:38:43 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 924ms | Result: <200 OK OK,[]>
2025-02-24 21:38:43 [http-nio-8080-exec-1] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 21:38:43 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-24 21:38:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:38:43 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 21:38:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 21:38:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:38:44 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 0 FAQs for homepage
2025-02-24 21:38:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:38:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:38:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:38:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:38:44 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page benefitsPage
2025-02-24 21:38:44 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 2136ms | Result: admin/content/benefits
2025-02-24 21:38:45 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page home
2025-02-24 21:38:45 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 3474ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Salom, description=Salom, displayOrder=1, active=true)], testimonials=[], faqs=[]}]
2025-02-24 21:38:55 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 21:38:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 21:38:55 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 21:38:55 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T21:38:55.364172358, endDate: 2025-02-24T21:38:55.364172358
2025-02-24 21:38:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:38:55 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 21:38:55 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T21:38:55.561191135, endDate: 2025-02-24T21:38:55.561191135
2025-02-24 21:38:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:38:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:38:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:38:55 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 21:38:55 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T21:38:55.637428113, endDate: 2025-02-24T21:38:55.637428113
2025-02-24 21:38:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:38:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:38:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:38:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:38:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:38:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:38:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:38:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:38:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:38:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:38:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:38:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:38:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:38:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:38:56 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getActivityHeatmap
2025-02-24 21:38:56 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1182ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=1}, {dayOfWeek=1, hour=21, count=2}],[]>
2025-02-24 21:38:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:38:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:38:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:38:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:38:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:38:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:38:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:38:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:38:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:38:57 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-24 21:38:57 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-24 21:38:57 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=402.3333333333333, previous=0.0, change=100.0
2025-02-24 21:38:57 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:38:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:38:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:38:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:38:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:38:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:38:57 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-24 21:38:57 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-24 21:38:57 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=402.3333333333333, previous=0.0, change=100.0
2025-02-24 21:38:57 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:38:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:38:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:38:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:38:58 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-24 21:38:58 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-24 21:38:58 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=402.3333333333333, previous=0.0, change=100.0
2025-02-24 21:38:58 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:38:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:38:58 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:38:58 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 2980ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=3}], bounceChange=0.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=402.3333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=0.0},[]>
2025-02-24 21:38:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:38:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:38:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:38:58 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:38:58 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3188ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=3}], bounceChange=0.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=402.3333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=0.0},[]>
2025-02-24 21:38:59 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:38:59 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3491ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=3}], bounceChange=0.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=402.3333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=0.0},[]>
2025-02-24 21:43:55 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 21:43:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 21:43:55 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 21:43:55 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T21:43:55.936868850, endDate: 2025-02-24T21:43:55.936868850
2025-02-24 21:43:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:43:55 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 21:43:55 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T21:43:55.940789539, endDate: 2025-02-24T21:43:55.940789539
2025-02-24 21:43:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:43:55 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 21:43:55 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T21:43:55.992403903, endDate: 2025-02-24T21:43:55.992403903
2025-02-24 21:43:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:43:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:43:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:43:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:43:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:43:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:43:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:43:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:43:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:43:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:43:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:43:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:43:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:43:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:43:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:43:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:43:57 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getActivityHeatmap
2025-02-24 21:43:57 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1160ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=1}, {dayOfWeek=1, hour=21, count=2}],[]>
2025-02-24 21:43:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:43:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:43:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:43:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:43:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:43:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:43:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:43:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:43:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:43:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:43:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:43:58 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-24 21:43:58 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-24 21:43:58 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=502.6666666666667, previous=0.0, change=100.0
2025-02-24 21:43:58 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:43:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:43:58 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-24 21:43:58 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-24 21:43:58 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=502.6666666666667, previous=0.0, change=100.0
2025-02-24 21:43:58 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:43:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:43:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
            end)*100.0)/count(*)) 
    end, 0.0) 
from
    visitors v1_0 
where
    v1_0.first_visit_time between ? and ?
2025-02-24 21:43:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:43:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:43:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:43:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:43:58 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-24 21:43:58 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-24 21:43:58 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=502.6666666666667, previous=0.0, change=100.0
2025-02-24 21:43:58 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:43:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:43:59 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:43:59 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3271ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=3}], bounceChange=0.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=502.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=0.0},[]>
2025-02-24 21:43:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:43:59 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:43:59 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3564ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=3}], bounceChange=0.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=502.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=0.0},[]>
2025-02-24 21:43:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:44:00 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:44:00 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 4134ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=3}], bounceChange=0.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=502.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=0.0},[]>
2025-02-24 21:44:46 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-02-24 21:44:46 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-02-24 21:44:46 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 21:44:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-24 21:44:47 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-24 21:45:04 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 323170 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-24 21:45:04 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-02-24 21:45:04 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-24 21:45:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-24 21:45:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 8 JPA repository interfaces.
2025-02-24 21:45:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 21:45:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 21:45:05 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-24 21:45:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-24 21:45:05 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-24 21:45:05 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-02-24 21:45:05 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-24 21:45:05 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1296 ms
2025-02-24 21:45:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-24 21:45:08 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3a116ca6
2025-02-24 21:45:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-24 21:45:09 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-24 21:45:13 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-24 21:45:13 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-24 21:45:13 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-24 21:45:14 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-24 21:45:15 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-24 21:45:15 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-02-24 21:45:15 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-24 21:45:15 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-24 21:45:16 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-24 21:45:17 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-24 21:45:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 21:45:18 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-24 21:45:20 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-24 21:45:21 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-24 21:45:21 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@c202a19, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4bc1f06d, org.springframework.security.web.context.SecurityContextHolderFilter@31962524, org.springframework.security.web.header.HeaderWriterFilter@5f6e202, org.springframework.web.filter.CorsFilter@2afb361c, org.springframework.security.web.authentication.logout.LogoutFilter@d94e783, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5af56d01, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@9caa933, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27a705e8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@52073425, org.springframework.security.web.access.ExceptionTranslationFilter@696fbbdf, org.springframework.security.web.access.intercept.AuthorizationFilter@cf79a7]
2025-02-24 21:45:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-24 21:45:21 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 17.511 seconds (process running for 17.961)
2025-02-24 21:45:22 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-24 21:45:22 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-24 21:45:22 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-02-24 21:45:26 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 21:45:26 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [397, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@73f22384]
2025-02-24 21:45:26 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-24 21:45:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:45:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-24 21:45:27 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-24 21:45:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:45:27 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@17d303de]]
2025-02-24 21:45:27 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-24 21:45:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 21:45:27 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [394, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@6ad7568b]
2025-02-24 21:45:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:45:27 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 21:45:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 21:45:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:45:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:45:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:45:27 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page session-update
2025-02-24 21:45:27 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1046ms | Result: <200 OK OK,[]>
2025-02-24 21:45:28 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page session-update
2025-02-24 21:45:28 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 946ms | Result: <200 OK OK,[]>
2025-02-24 21:45:28 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 1 benefits for homepage
2025-02-24 21:45:28 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Salom (Order: 1)
2025-02-24 21:45:28 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 21:45:28 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 21:45:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 21:45:28 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-24 21:45:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:45:28 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 21:45:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:45:29 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 21:45:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 21:45:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:45:29 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 0 FAQs for homepage
2025-02-24 21:45:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:45:29 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page benefitsPage
2025-02-24 21:45:29 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 2443ms | Result: admin/content/benefits
2025-02-24 21:45:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:45:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:45:30 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page home
2025-02-24 21:45:30 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 3701ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Salom, description=Salom, displayOrder=1, active=true)], testimonials=[], faqs=[]}]
2025-02-24 21:45:36 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 21:45:36 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T21:45:36.454196514, endDate: 2025-02-24T21:45:36.454196514
2025-02-24 21:45:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:45:36 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 21:45:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 21:45:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:45:36 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 21:45:36 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T21:45:36.872794331, endDate: 2025-02-24T21:45:36.872794331
2025-02-24 21:45:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:45:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:45:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:45:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:45:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:45:37 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 21:45:37 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T21:45:37.189168169, endDate: 2025-02-24T21:45:37.189168169
2025-02-24 21:45:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:45:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:45:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:45:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:45:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:45:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:45:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:45:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:45:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:45:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:45:37 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getActivityHeatmap
2025-02-24 21:45:37 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1174ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}],[]>
2025-02-24 21:45:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:45:37 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler processing failed: java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'] with root cause
java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'
	at io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.doResolveHandlerMethodException(HtmxExceptionHandlerExceptionResolver.java:31)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-24 21:45:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:45:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:45:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:45:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:45:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:45:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:45:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:45:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:45:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:45:38 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=4, previous=0, change=100.0
2025-02-24 21:45:38 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=4, previous=0, change=100.0
2025-02-24 21:45:38 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=402.0, previous=0.0, change=100.0
2025-02-24 21:45:38 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=25.0, previous=0.0, change=100.0
2025-02-24 21:45:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:45:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:45:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:45:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:45:38 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=4, previous=0, change=100.0
2025-02-24 21:45:38 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=4, previous=0, change=100.0
2025-02-24 21:45:38 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=402.0, previous=0.0, change=100.0
2025-02-24 21:45:38 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=25.0, previous=0.0, change=100.0
2025-02-24 21:45:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:45:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:45:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:45:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:45:39 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=4, previous=0, change=100.0
2025-02-24 21:45:39 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=4, previous=0, change=100.0
2025-02-24 21:45:39 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=402.0, previous=0.0, change=100.0
2025-02-24 21:45:39 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=25.0, previous=0.0, change=100.0
2025-02-24 21:45:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:45:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:45:39 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:45:39 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3093ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=4}], bounceChange=100.0, totalVisitors=4, activeChange=100.0, avgSessionDuration=402.0, durationChange=100.0, visitorChange=100.0, activeUsers=4, bounceRate=25.0},[]>
2025-02-24 21:45:39 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler processing failed: java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'] with root cause
java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'
	at io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.doResolveHandlerMethodException(HtmxExceptionHandlerExceptionResolver.java:31)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-24 21:45:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:45:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:45:39 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:45:39 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3027ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=4}], bounceChange=100.0, totalVisitors=4, activeChange=100.0, avgSessionDuration=402.0, durationChange=100.0, visitorChange=100.0, activeUsers=4, bounceRate=25.0},[]>
2025-02-24 21:45:40 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:45:40 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3084ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=4}], bounceChange=100.0, totalVisitors=4, activeChange=100.0, avgSessionDuration=402.0, durationChange=100.0, visitorChange=100.0, activeUsers=4, bounceRate=25.0},[]>
2025-02-24 21:46:57 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 21:46:57 [http-nio-8080-exec-8] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 21:46:57 [http-nio-8080-exec-8] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 1 benefits for homepage
2025-02-24 21:46:57 [http-nio-8080-exec-8] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Salom (Order: 1)
2025-02-24 21:46:57 [http-nio-8080-exec-8] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 21:46:57 [http-nio-8080-exec-8] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 21:46:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 21:46:57 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [80, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@6e1e97cb]
2025-02-24 21:46:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:46:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:46:57 [http-nio-8080-exec-8] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 21:46:58 [http-nio-8080-exec-8] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 21:46:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 21:46:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:46:58 [http-nio-8080-exec-8] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 0 FAQs for homepage
2025-02-24 21:46:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:46:58 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page session-update
2025-02-24 21:46:58 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1050ms | Result: <200 OK OK,[]>
2025-02-24 21:46:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:46:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:46:59 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page home
2025-02-24 21:46:59 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 1898ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Salom, description=Salom, displayOrder=1, active=true)], testimonials=[], faqs=[]}]
2025-02-24 21:47:06 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler processing failed: java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'] with root cause
java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'
	at io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.doResolveHandlerMethodException(HtmxExceptionHandlerExceptionResolver.java:31)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-24 21:47:20 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 21:47:20 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-24 21:47:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-24 21:47:24 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 334905 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-24 21:47:24 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-02-24 21:47:24 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-24 21:47:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-24 21:47:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 8 JPA repository interfaces.
2025-02-24 21:47:24 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 21:47:24 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 21:47:24 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-24 21:47:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-24 21:47:25 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-24 21:47:25 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-02-24 21:47:25 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-24 21:47:25 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 981 ms
2025-02-24 21:47:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-24 21:47:27 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2066e897
2025-02-24 21:47:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-24 21:47:28 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-24 21:47:32 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-24 21:47:32 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-24 21:47:32 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-24 21:47:33 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-24 21:47:34 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-24 21:47:34 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-02-24 21:47:34 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-24 21:47:34 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-24 21:47:35 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-24 21:47:37 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-24 21:47:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 21:47:38 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-24 21:47:39 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-24 21:47:40 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-24 21:47:40 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1abf7c9d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15f2b65, org.springframework.security.web.context.SecurityContextHolderFilter@3fabd4e2, org.springframework.security.web.header.HeaderWriterFilter@1c140c7c, org.springframework.web.filter.CorsFilter@c202a19, org.springframework.security.web.authentication.logout.LogoutFilter@15c64ca8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@25847567, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6a18bbeb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@290ab243, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4bc1f06d, org.springframework.security.web.access.ExceptionTranslationFilter@d449064, org.springframework.security.web.access.intercept.AuthorizationFilter@76e5f0ea]
2025-02-24 21:47:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-24 21:47:40 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 16.972 seconds (process running for 17.36)
2025-02-24 21:47:41 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-24 21:47:41 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-24 21:47:41 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-02-24 21:47:44 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [41, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@2c33643e]
2025-02-24 21:47:44 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 21:47:44 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-24 21:47:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-24 21:47:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:47:44 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-24 21:47:45 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [131, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@79e3b59e]
2025-02-24 21:47:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:47:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:47:45 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 21:47:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 21:47:45 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@4da517e4]]
2025-02-24 21:47:45 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-24 21:47:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 21:47:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:47:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:47:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:47:45 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page session-update
2025-02-24 21:47:45 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1248ms | Result: <200 OK OK,[]>
2025-02-24 21:47:46 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page session-update
2025-02-24 21:47:46 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 957ms | Result: <200 OK OK,[]>
2025-02-24 21:47:46 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-24 21:47:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:47:46 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 1 benefits for homepage
2025-02-24 21:47:46 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Salom (Order: 1)
2025-02-24 21:47:46 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 21:47:46 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 21:47:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 21:47:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:47:47 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 21:47:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:47:47 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 21:47:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 21:47:47 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page benefitsPage
2025-02-24 21:47:47 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 2211ms | Result: admin/content/benefits
2025-02-24 21:47:47 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 0 FAQs for homepage
2025-02-24 21:47:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:47:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:47:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:47:48 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page home
2025-02-24 21:47:48 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 4072ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Salom, description=Salom, displayOrder=1, active=true)], testimonials=[], faqs=[]}]
2025-02-24 21:47:54 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 21:47:54 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T21:47:54.598804340, endDate: 2025-02-24T21:47:54.598804340
2025-02-24 21:47:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:47:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:47:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:47:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:47:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:47:55 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler processing failed: java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'] with root cause
java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'
	at io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.doResolveHandlerMethodException(HtmxExceptionHandlerExceptionResolver.java:31)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-24 21:47:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:47:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:47:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:47:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:47:56 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=4, previous=0, change=100.0
2025-02-24 21:47:56 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=4, previous=0, change=100.0
2025-02-24 21:47:56 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=439.25, previous=0.0, change=100.0
2025-02-24 21:47:56 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:47:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:47:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:47:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:47:57 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:47:57 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3081ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=4}], bounceChange=0.0, totalVisitors=4, activeChange=100.0, avgSessionDuration=439.25, durationChange=100.0, visitorChange=100.0, activeUsers=4, bounceRate=0.0},[]>
2025-02-24 21:47:58 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 21:47:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 21:47:58 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 21:47:58 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T21:47:58.956919739, endDate: 2025-02-24T21:47:58.956919739
2025-02-24 21:47:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:47:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:47:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:47:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:47:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:47:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:47:59 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 21:47:59 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T21:47:59.720724063, endDate: 2025-02-24T21:47:59.720724063
2025-02-24 21:47:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:47:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:47:59 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getActivityHeatmap
2025-02-24 21:47:59 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1176ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}],[]>
2025-02-24 21:47:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:48:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:48:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:48:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:48:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:48:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:48:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:48:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:48:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:48:01 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=4, previous=0, change=100.0
2025-02-24 21:48:01 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=4, previous=0, change=100.0
2025-02-24 21:48:01 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=442.0, previous=0.0, change=100.0
2025-02-24 21:48:01 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:48:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:48:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:48:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:48:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:48:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:48:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:48:01 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:48:01 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 2953ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=4}], bounceChange=0.0, totalVisitors=4, activeChange=100.0, avgSessionDuration=442.0, durationChange=100.0, visitorChange=100.0, activeUsers=4, bounceRate=0.0},[]>
2025-02-24 21:48:01 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=4, previous=0, change=100.0
2025-02-24 21:48:01 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=4, previous=0, change=100.0
2025-02-24 21:48:01 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=442.0, previous=0.0, change=100.0
2025-02-24 21:48:01 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:48:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:48:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:48:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:48:02 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:48:02 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3189ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=4}], bounceChange=0.0, totalVisitors=4, activeChange=100.0, avgSessionDuration=442.0, durationChange=100.0, visitorChange=100.0, activeUsers=4, bounceRate=0.0},[]>
2025-02-24 21:52:54 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 21:52:54 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T21:52:54.516254486, endDate: 2025-02-24T21:52:54.516254486
2025-02-24 21:52:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:52:54 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 21:52:54 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T21:52:54.529027673, endDate: 2025-02-24T21:52:54.529027673
2025-02-24 21:52:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:52:54 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 21:52:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 21:52:54 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 21:52:54 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T21:52:54.578989684, endDate: 2025-02-24T21:52:54.578989684
2025-02-24 21:52:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 21:52:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:52:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:52:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:52:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:52:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:52:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:52:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:52:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:52:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:52:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:52:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:52:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:52:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:52:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:52:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 21:52:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:52:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:52:55 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getActivityHeatmap
2025-02-24 21:52:55 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1164ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}],[]>
2025-02-24 21:52:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:52:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:52:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:52:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 21:52:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:52:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:52:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:52:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:52:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:52:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 21:52:56 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=4, previous=0, change=100.0
2025-02-24 21:52:56 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=4, previous=0, change=100.0
2025-02-24 21:52:56 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=516.0, previous=0.0, change=100.0
2025-02-24 21:52:56 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:52:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:52:56 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=4, previous=0, change=100.0
2025-02-24 21:52:56 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=4, previous=0, change=100.0
2025-02-24 21:52:56 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=516.0, previous=0.0, change=100.0
2025-02-24 21:52:56 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:52:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:52:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:52:56 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=4, previous=0, change=100.0
2025-02-24 21:52:56 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=4, previous=0, change=100.0
2025-02-24 21:52:56 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=516.0, previous=0.0, change=100.0
2025-02-24 21:52:56 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-24 21:52:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 21:52:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:52:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:52:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 21:52:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:52:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 21:52:57 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:52:57 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3001ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=4}], bounceChange=0.0, totalVisitors=4, activeChange=100.0, avgSessionDuration=516.0, durationChange=100.0, visitorChange=100.0, activeUsers=4, bounceRate=0.0},[]>
2025-02-24 21:52:57 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:52:57 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3243ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=4}], bounceChange=0.0, totalVisitors=4, activeChange=100.0, avgSessionDuration=516.0, durationChange=100.0, visitorChange=100.0, activeUsers=4, bounceRate=0.0},[]>
2025-02-24 21:52:57 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 23293834-6235-40c7-919b-c42165e35cd9 on page getVisitorStats
2025-02-24 21:52:57 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3417ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=4}], bounceChange=0.0, totalVisitors=4, activeChange=100.0, avgSessionDuration=516.0, durationChange=100.0, visitorChange=100.0, activeUsers=4, bounceRate=0.0},[]>
2025-02-24 21:55:30 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 21:55:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-24 21:55:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-24 22:01:08 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 406797 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-24 22:01:08 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-24 22:01:08 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-24 22:01:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-24 22:01:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 8 JPA repository interfaces.
2025-02-24 22:01:09 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:01:09 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:01:09 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-24 22:01:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-24 22:01:09 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-24 22:01:09 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-24 22:01:09 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-24 22:01:09 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1273 ms
2025-02-24 22:01:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-24 22:01:12 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57f725b8
2025-02-24 22:01:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-24 22:01:13 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-24 22:01:17 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-24 22:01:17 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-24 22:01:17 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-24 22:01:18 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-24 22:01:19 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-24 22:01:19 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-24 22:01:19 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-24 22:01:19 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-24 22:01:19 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-24 22:01:20 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-24 22:01:22 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:01:22 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-24 22:01:23 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-24 22:01:24 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-24 22:01:24 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-24 22:01:24 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3cd39478, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@407fda21, org.springframework.security.web.context.SecurityContextHolderFilter@6f54230a, org.springframework.security.web.header.HeaderWriterFilter@73c29540, org.springframework.web.filter.CorsFilter@1a312c51, org.springframework.security.web.authentication.logout.LogoutFilter@6ff36ec8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7c59fe87, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@798e786d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cc1ddad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6aabe0c6, org.springframework.security.web.access.ExceptionTranslationFilter@2c9d7ede, org.springframework.security.web.access.intercept.AuthorizationFilter@64ed174]
2025-02-24 22:01:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-24 22:01:24 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 16.542 seconds (process running for 17.05)
2025-02-24 22:01:25 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-24 22:01:25 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-24 22:01:25 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-24 22:01:45 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [834, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@2c4045dc]
2025-02-24 22:01:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:01:46 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [831, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@1197660f]
2025-02-24 22:01:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:01:46 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:01:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-24 22:01:46 [http-nio-8080-exec-4] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-24 22:01:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-24 22:01:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-24 22:01:46 [http-nio-8080-exec-4] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-24 22:01:46 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session 43d5f01c-a296-43f7-876a-dcae66f70408 on page session-update
2025-02-24 22:01:46 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1030ms | Result: <200 OK OK,[]>
2025-02-24 22:01:47 [http-nio-8080-exec-4] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:01:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 22:01:47 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session 0a96e250-d26a-4f1d-8e97-33113ab1928d on page session-update
2025-02-24 22:01:47 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 935ms | Result: <200 OK OK,[]>
2025-02-24 22:01:47 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/login | Class: uz.pdp.ilmpay.Controller.AdminController | Method: login | Args: []
2025-02-24 22:01:47 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - 🔑 Admin login page requested
2025-02-24 22:01:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:01:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-24 22:01:48 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session 997ff05a-37af-4bb1-a363-ac8782470e97 on page login
2025-02-24 22:01:48 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/login | Time: 687ms | Result: admin/login
2025-02-24 22:01:48 [http-nio-8080-exec-4] ERROR uz.pdp.ilmpay.aspect.LoggingAspect - ❌ Error in GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Error: API key expired. Please renew the API key.
2025-02-24 22:01:53 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:01:53 [http-nio-8080-exec-9] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:01:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 22:01:53 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5558f916]]
2025-02-24 22:01:53 [http-nio-8080-exec-10] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-24 22:01:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-24 22:01:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-24 22:01:54 [http-nio-8080-exec-9] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 1 benefits for homepage
2025-02-24 22:01:54 [http-nio-8080-exec-9] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Salom (Order: 1)
2025-02-24 22:01:54 [http-nio-8080-exec-9] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 22:01:54 [http-nio-8080-exec-9] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 22:01:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 22:01:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-24 22:01:54 [http-nio-8080-exec-9] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 22:01:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-24 22:01:54 [http-nio-8080-exec-9] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 22:01:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:01:54 [http-nio-8080-exec-10] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 22:01:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 22:01:55 [http-nio-8080-exec-10] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 22:01:55 [http-nio-8080-exec-9] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 0 FAQs for homepage
2025-02-24 22:01:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:01:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:01:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-24 22:01:55 [http-nio-8080-exec-10] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-24 22:01:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:01:55 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session 73583d97-0ac6-412b-b67d-40f49ed9657d on page home
2025-02-24 22:01:55 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 2562ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Salom, description=Salom, displayOrder=1, active=true)], testimonials=[], faqs=[]}]
2025-02-24 22:01:55 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:01:55 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:01:55 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 1 benefits for homepage
2025-02-24 22:01:55 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Salom (Order: 1)
2025-02-24 22:01:55 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 22:01:55 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 22:01:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 22:01:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-24 22:01:56 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 22:01:56 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 22:01:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:01:56 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page dashboard
2025-02-24 22:01:56 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 2560ms | Result: admin/dashboard
2025-02-24 22:01:56 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 0 FAQs for homepage
2025-02-24 22:01:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:01:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:01:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:01:57 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page home
2025-02-24 22:01:57 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 1823ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Salom, description=Salom, displayOrder=1, active=true)], testimonials=[], faqs=[]}]
2025-02-24 22:02:00 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:02:00 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:02:00.301404396, endDate: 2025-02-24T22:02:00.301404396
2025-02-24 22:02:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:02:00 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:02:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:02:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:02:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:02:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:01 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:02:01 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1143ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:02:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:02:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:02:02 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:02:02 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:02:02 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=330.44444444444446, previous=0.0, change=100.0
2025-02-24 22:02:02 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:02:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:03 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:02:03 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3031ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=330.44444444444446, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:02:04 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:02:04 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:02:04.635840889, endDate: 2025-02-24T22:02:04.635840889
2025-02-24 22:02:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:02:04 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:02:04 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:02:04 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 1 benefits for homepage
2025-02-24 22:02:04 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Salom (Order: 1)
2025-02-24 22:02:04 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 22:02:04 [http-nio-8080-exec-1] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 22:02:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 22:02:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:05 [http-nio-8080-exec-1] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 22:02:05 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:02:05 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:02:05.113489986, endDate: 2025-02-24T22:02:05.113489986
2025-02-24 22:02:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:02:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:05 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 22:02:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:02:05 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:02:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:02:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:02:05 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [3, false, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@1439647a]
2025-02-24 22:02:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:05 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:02:05 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:02:05.570258312, endDate: 2025-02-24T22:02:05.570258312
2025-02-24 22:02:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:02:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:02:05 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 0 FAQs for homepage
2025-02-24 22:02:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:02:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:02:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:02:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:02:06 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:02:06 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 914ms | Result: <200 OK OK,[]>
2025-02-24 22:02:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:02:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:02:06 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:02:06 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1366ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:02:06 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:02:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:02:06 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:02:06 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=330.6666666666667, previous=0.0, change=100.0
2025-02-24 22:02:06 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:02:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:06 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page home
2025-02-24 22:02:06 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 2128ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Salom, description=Salom, displayOrder=1, active=true)], testimonials=[], faqs=[]}]
2025-02-24 22:02:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:02:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:07 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:02:07 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:02:07 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=331.0, previous=0.0, change=100.0
2025-02-24 22:02:07 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:02:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:02:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:02:07 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:02:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:07 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 2992ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=330.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:02:07 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:02:07 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:02:07 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=331.0, previous=0.0, change=100.0
2025-02-24 22:02:07 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:02:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:08 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:02:08 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 2967ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=331.0, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:02:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:08 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:02:08 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3045ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=331.0, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:02:16 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [17, false, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@1194c950]
2025-02-24 22:02:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:16 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@2a2e7c58]]
2025-02-24 22:02:16 [http-nio-8080-exec-10] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-24 22:02:16 [http-nio-8080-exec-10] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-24 22:02:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:17 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:02:17 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 921ms | Result: <200 OK OK,[]>
2025-02-24 22:02:17 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page benefitsPage
2025-02-24 22:02:17 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 1126ms | Result: admin/content/benefits
2025-02-24 22:02:23 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:02:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:02:23 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:02:23 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:02:23.352838974, endDate: 2025-02-24T22:02:23.352838974
2025-02-24 22:02:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:02:23 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:02:23 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:02:23.497375577, endDate: 2025-02-24T22:02:23.497375577
2025-02-24 22:02:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:02:23 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:02:23 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:02:23.533440764, endDate: 2025-02-24T22:02:23.533440764
2025-02-24 22:02:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:02:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:02:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:02:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:02:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:02:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:02:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:02:24 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:02:24 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1160ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:02:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:02:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:02:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:02:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:02:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:02:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:02:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:02:25 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:02:25 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:02:25 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=333.0, previous=0.0, change=100.0
2025-02-24 22:02:25 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:02:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:25 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:02:25 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:02:25 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=333.0, previous=0.0, change=100.0
2025-02-24 22:02:25 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:02:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:25 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:02:25 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:02:25 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=333.0, previous=0.0, change=100.0
2025-02-24 22:02:25 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:02:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:26 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:02:26 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3022ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=333.0, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:02:26 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:02:26 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3106ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=333.0, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:02:26 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:02:26 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3293ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=333.0, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:02:53 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/admin/benefits | Class: uz.pdp.ilmpay.Controller.AdminRestController | Method: createBenefit | Args: [BenefitCardDTO(id=null, title=Hello, description=Hello, displayOrder=2, active=true)]
2025-02-24 22:02:53 [http-nio-8080-exec-10] INFO  u.p.i.service.BenefitCardService - Creating new benefit card: Hello
2025-02-24 22:02:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        benefit_cards
        (active, created_at, description, display_order, icon_url, title) 
    values
        (?, ?, ?, ?, ?, ?)
2025-02-24 22:02:54 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/admin/benefits | Time: 458ms | Result: <200 OK OK,EntityResponse(success=true, message=Benefit created successfully, errorCode=null, data=BenefitCardDTO(id=2, title=Hello, description=Hello, displayOrder=2, active=true), errors=null, funnyMessage=A new benefit emerges!),[]>
2025-02-24 22:02:55 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [34, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@44b217d0]
2025-02-24 22:02:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:55 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@2187e81e]]
2025-02-24 22:02:55 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-24 22:02:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 22:02:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:56 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-24 22:02:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:56 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:02:56 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 916ms | Result: <200 OK OK,[]>
2025-02-24 22:02:56 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [46, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@347fe0ee]
2025-02-24 22:02:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:56 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:02:56 [http-nio-8080-exec-8] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:02:56 [http-nio-8080-exec-8] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 2 benefits for homepage
2025-02-24 22:02:56 [http-nio-8080-exec-8] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Hello (Order: 1)
2025-02-24 22:02:56 [http-nio-8080-exec-8] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Hello (Order: 2)
2025-02-24 22:02:56 [http-nio-8080-exec-8] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 22:02:56 [http-nio-8080-exec-8] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 22:02:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 22:02:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:56 [http-nio-8080-exec-8] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 22:02:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:57 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page benefitsPage
2025-02-24 22:02:57 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 1400ms | Result: admin/content/benefits
2025-02-24 22:02:57 [http-nio-8080-exec-8] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 22:02:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:02:57 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:02:57 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 918ms | Result: <200 OK OK,[]>
2025-02-24 22:02:57 [http-nio-8080-exec-8] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 0 FAQs for homepage
2025-02-24 22:02:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:02:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:02:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:02:58 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page home
2025-02-24 22:02:58 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 1846ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Hello, description=Hello, displayOrder=1, active=true), BenefitCardDTO(id=2, title=Hello, description=Hello, displayOrder=2, active=true)], testimonials=[], faqs=[]}]
2025-02-24 22:03:04 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:03:04 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:03:04.878219480, endDate: 2025-02-24T22:03:04.878219480
2025-02-24 22:03:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:03:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:05 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:03:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:03:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:05 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:03:05 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:03:05.347416347, endDate: 2025-02-24T22:03:05.347416347
2025-02-24 22:03:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:03:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:03:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:03:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:05 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:03:05 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:03:05.611267091, endDate: 2025-02-24T22:03:05.611267091
2025-02-24 22:03:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:03:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:03:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:03:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:03:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:03:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:03:06 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:03:06 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1146ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:03:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:03:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:03:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:03:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:03:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:03:06 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:03:06 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:03:06 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=336.77777777777777, previous=0.0, change=100.0
2025-02-24 22:03:06 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:03:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:03:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:03:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:03:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:03:07 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:03:07 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:03:07 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=337.6666666666667, previous=0.0, change=100.0
2025-02-24 22:03:07 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:03:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:03:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:03:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:03:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:03:07 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:03:07 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:03:07 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=337.6666666666667, previous=0.0, change=100.0
2025-02-24 22:03:07 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:03:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:03:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:03:07 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:03:07 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3052ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=336.77777777777777, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:03:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:03:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:03:08 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:03:08 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3005ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=337.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:03:08 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:03:08 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3077ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=337.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:03:21 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [16, false, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@5ce86f1b]
2025-02-24 22:03:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:03:21 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:03:21 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:03:21 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 2 benefits for homepage
2025-02-24 22:03:21 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Hello (Order: 1)
2025-02-24 22:03:21 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Hello (Order: 2)
2025-02-24 22:03:21 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 22:03:21 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 22:03:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 22:03:21 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 22:03:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:03:21 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 22:03:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:03:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:03:22 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 0 FAQs for homepage
2025-02-24 22:03:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:03:22 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:03:22 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1169ms | Result: <200 OK OK,[]>
2025-02-24 22:03:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:03:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:03:23 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page home
2025-02-24 22:03:23 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 2080ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Hello, description=Hello, displayOrder=1, active=true), BenefitCardDTO(id=2, title=Hello, description=Hello, displayOrder=2, active=true)], testimonials=[], faqs=[]}]
2025-02-24 22:03:36 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [34, false, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@7ecdb714]
2025-02-24 22:03:36 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/faqs | Class: uz.pdp.ilmpay.Controller.AdminController | Method: faqsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6a643e47]]
2025-02-24 22:03:36 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - 📚 Loading faqs management page
2025-02-24 22:03:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:03:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:03:37 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - ✨ Faqs page loaded successfully
2025-02-24 22:03:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:03:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:03:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:03:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:03:38 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:03:38 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1147ms | Result: <200 OK OK,[]>
2025-02-24 22:03:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:03:38 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page faqsPage
2025-02-24 22:03:38 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/faqs | Time: 1607ms | Result: admin/content/faqs
2025-02-24 22:03:43 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:03:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:03:43 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:03:43 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:03:43.530434435, endDate: 2025-02-24T22:03:43.530434435
2025-02-24 22:03:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:03:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:03:43 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:03:43 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:03:43.566309595, endDate: 2025-02-24T22:03:43.566309595
2025-02-24 22:03:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:03:43 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:03:43 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:03:43.753157469, endDate: 2025-02-24T22:03:43.753157469
2025-02-24 22:03:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:03:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:03:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:03:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:03:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:03:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:03:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:03:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:03:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:03:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:44 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:03:44 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1404ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:03:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:03:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:03:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:03:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:03:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:03:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:03:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:03:45 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:03:45 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:03:45 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=341.8888888888889, previous=0.0, change=100.0
2025-02-24 22:03:45 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:03:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:03:46 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:03:46 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:03:46 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=341.8888888888889, previous=0.0, change=100.0
2025-02-24 22:03:46 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:03:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:03:46 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:03:46 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:03:46 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=341.8888888888889, previous=0.0, change=100.0
2025-02-24 22:03:46 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:03:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:03:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:03:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:03:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:03:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:03:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:03:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:03:46 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:03:46 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3218ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=341.8888888888889, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:03:47 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:03:47 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3630ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=341.8888888888889, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:03:47 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:03:47 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3897ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=341.8888888888889, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:03:58 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/admin/faqs | Class: uz.pdp.ilmpay.Controller.FaqController | Method: create | Args: [FaqDTO(id=null, question=How to create?, answer=Simple, displayOrder=1, active=true, createdAt=null, updatedAt=null)]
2025-02-24 22:03:58 [http-nio-8080-exec-4] INFO  u.p.ilmpay.Controller.FaqController - ✨ Creating new FAQ: How to create?
2025-02-24 22:03:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    order by
        f1_0.display_order desc 
    fetch
        first ? rows only
2025-02-24 22:03:58 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.service.FaqService - ✨ Creating new FAQ: How to create?
2025-02-24 22:03:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        faqs
        (active, answer, created_at, display_order, question, updated_at) 
    values
        (?, ?, ?, ?, ?, ?)
2025-02-24 22:03:59 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/admin/faqs | Time: 1527ms | Result: <200 OK OK,EntityResponse(success=true, message=FAQ created successfully, errorCode=null, data=FaqDTO(id=1, question=Как создать?, answer=Простой, displayOrder=0, active=true, createdAt=2025-02-24T22:03:58.263512966, updatedAt=null), errors=null, funnyMessage=null),[]>
2025-02-24 22:04:01 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [19, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@4958f813]
2025-02-24 22:04:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:04:01 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/faqs | Class: uz.pdp.ilmpay.Controller.AdminController | Method: faqsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@49e50cfc]]
2025-02-24 22:04:01 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 📚 Loading faqs management page
2025-02-24 22:04:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:04:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:04:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:04:02 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Faqs page loaded successfully
2025-02-24 22:04:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:04:02 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:04:02 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1155ms | Result: <200 OK OK,[]>
2025-02-24 22:04:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:04:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:04:03 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page faqsPage
2025-02-24 22:04:03 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/faqs | Time: 1983ms | Result: admin/content/faqs
2025-02-24 22:04:08 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:04:08 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:04:08.159806808, endDate: 2025-02-24T22:04:08.159806808
2025-02-24 22:04:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:04:08 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:04:08 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:04:08.376250937, endDate: 2025-02-24T22:04:08.376250937
2025-02-24 22:04:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:04:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:04:08 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:04:08 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:04:08.390055614, endDate: 2025-02-24T22:04:08.390055614
2025-02-24 22:04:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:04:08 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:04:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:04:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:04:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:04:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:04:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:04:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:04:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:04:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:04:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:04:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:04:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:04:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:04:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:04:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:04:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:04:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:04:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:04:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:04:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:04:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:04:09 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:04:09 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1366ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:04:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:04:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:04:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:04:10 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:04:10 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:04:10 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=344.0, previous=0.0, change=100.0
2025-02-24 22:04:10 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:04:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:04:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:04:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:04:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:04:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:04:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:04:11 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:04:11 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:04:11 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=344.6666666666667, previous=0.0, change=100.0
2025-02-24 22:04:11 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:04:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:04:11 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:04:11 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3208ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=344.0, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:04:11 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:04:11 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:04:11 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=344.6666666666667, previous=0.0, change=100.0
2025-02-24 22:04:11 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:04:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:04:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:04:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:04:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:04:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:04:12 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:04:12 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 4102ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=344.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:04:12 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:04:12 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:04:12 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 2 benefits for homepage
2025-02-24 22:04:12 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Hello (Order: 1)
2025-02-24 22:04:12 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Hello (Order: 2)
2025-02-24 22:04:12 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 22:04:12 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 22:04:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 22:04:12 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [46, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@12489122]
2025-02-24 22:04:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:04:12 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:04:12 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 4322ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=344.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:04:12 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 22:04:13 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 22:04:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:04:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:04:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:04:13 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:04:13 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1143ms | Result: <200 OK OK,[]>
2025-02-24 22:04:14 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 1 FAQs for homepage
2025-02-24 22:04:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:04:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:04:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:04:15 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page home
2025-02-24 22:04:15 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 2546ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Hello, description=Hello, displayOrder=1, active=true), BenefitCardDTO(id=2, title=Hello, description=Hello, displayOrder=2, active=true)], testimonials=[], faqs=[FaqDTO(id=1, question=Как создать?, answer=Простой, displayOrder=0, active=true, createdAt=2025-02-24T22:03:58.263513, updatedAt=null)]}]
2025-02-24 22:04:29 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [11, false, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@bfdeea4]
2025-02-24 22:04:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:04:29 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:04:29 [http-nio-8080-exec-7] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:04:29 [http-nio-8080-exec-7] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 2 benefits for homepage
2025-02-24 22:04:29 [http-nio-8080-exec-7] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Hello (Order: 1)
2025-02-24 22:04:29 [http-nio-8080-exec-7] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Hello (Order: 2)
2025-02-24 22:04:29 [http-nio-8080-exec-7] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 22:04:29 [http-nio-8080-exec-7] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 22:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 22:04:29 [http-nio-8080-exec-7] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 22:04:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:04:30 [http-nio-8080-exec-7] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 22:04:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:04:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:04:30 [http-nio-8080-exec-7] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 1 FAQs for homepage
2025-02-24 22:04:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:04:30 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:04:30 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1153ms | Result: <200 OK OK,[]>
2025-02-24 22:04:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:04:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:04:31 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page home
2025-02-24 22:04:31 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 2101ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Hello, description=Hello, displayOrder=1, active=true), BenefitCardDTO(id=2, title=Hello, description=Hello, displayOrder=2, active=true)], testimonials=[], faqs=[FaqDTO(id=1, question=How to create?, answer=Simple, displayOrder=0, active=true, createdAt=2025-02-24T22:03:58.263513, updatedAt=null)]}]
2025-02-24 22:04:41 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [6, false, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@31d153f3]
2025-02-24 22:04:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:04:41 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:04:41 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:04:41 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 2 benefits for homepage
2025-02-24 22:04:41 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Hello (Order: 1)
2025-02-24 22:04:41 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Hello (Order: 2)
2025-02-24 22:04:41 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 22:04:41 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 22:04:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 22:04:41 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 22:04:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:04:41 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 22:04:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:04:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:04:42 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:04:42 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1131ms | Result: <200 OK OK,[]>
2025-02-24 22:04:43 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 1 FAQs for homepage
2025-02-24 22:04:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:04:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:04:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:04:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page home
2025-02-24 22:04:44 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 2823ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Hello, description=Hello, displayOrder=1, active=true), BenefitCardDTO(id=2, title=Hello, description=Hello, displayOrder=2, active=true)], testimonials=[], faqs=[FaqDTO(id=1, question=Qanday yaratish kerak?, answer=Oddiy, displayOrder=0, active=true, createdAt=2025-02-24T22:03:58.263513, updatedAt=null)]}]
2025-02-24 22:05:50 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:05:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-24 22:05:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-24 22:05:55 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 430516 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-24 22:05:55 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-24 22:05:55 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-24 22:05:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-24 22:05:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 8 JPA repository interfaces.
2025-02-24 22:05:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:05:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:05:56 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-24 22:05:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-24 22:05:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-24 22:05:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-24 22:05:57 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-24 22:05:57 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2408 ms
2025-02-24 22:05:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-24 22:06:01 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@57f725b8
2025-02-24 22:06:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-24 22:06:01 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-24 22:06:06 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-24 22:06:06 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-24 22:06:06 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-24 22:06:06 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-24 22:06:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-24 22:06:08 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-24 22:06:08 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-24 22:06:08 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-24 22:06:08 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-24 22:06:09 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-24 22:06:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:06:11 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-24 22:06:12 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-24 22:06:13 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-24 22:06:13 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-24 22:06:13 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1f0d5d7b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@401e5e83, org.springframework.security.web.context.SecurityContextHolderFilter@7fb8eff8, org.springframework.security.web.header.HeaderWriterFilter@48e98688, org.springframework.web.filter.CorsFilter@34648b8d, org.springframework.security.web.authentication.logout.LogoutFilter@17c10601, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@76871b39, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@29613b2c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a9d5a73, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38106bc4, org.springframework.security.web.access.ExceptionTranslationFilter@5fc3aed0, org.springframework.security.web.access.intercept.AuthorizationFilter@476fb241]
2025-02-24 22:06:13 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-24 22:06:13 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 19.164 seconds (process running for 19.918)
2025-02-24 22:06:14 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-24 22:06:14 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-24 22:06:14 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-24 22:06:17 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:06:17 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [89, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@cff759d]
2025-02-24 22:06:17 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-24 22:06:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-24 22:06:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:06:17 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-24 22:06:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:06:17 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [130, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@50aa6c34]
2025-02-24 22:06:17 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/faqs | Class: uz.pdp.ilmpay.Controller.AdminController | Method: faqsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@11773418]]
2025-02-24 22:06:17 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - 📚 Loading faqs management page
2025-02-24 22:06:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:06:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:06:17 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:06:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 22:06:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:06:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:06:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:06:18 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:06:18 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1045ms | Result: <200 OK OK,[]>
2025-02-24 22:06:18 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Hello -> Salom
2025-02-24 22:06:18 [http-nio-8080-exec-4] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: How to create? -> Qanday yaratish kerak?
2025-02-24 22:06:18 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:06:18 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 960ms | Result: <200 OK OK,[]>
2025-02-24 22:06:18 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Hello -> Salom
2025-02-24 22:06:18 [http-nio-8080-exec-4] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Simple -> Oddiy
2025-02-24 22:06:18 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Hello -> Salom
2025-02-24 22:06:18 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - ✨ Faqs page loaded successfully
2025-02-24 22:06:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:06:19 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Hello -> Salom
2025-02-24 22:06:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:06:19 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 2 benefits for homepage
2025-02-24 22:06:19 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Salom (Order: 1)
2025-02-24 22:06:19 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Salom (Order: 2)
2025-02-24 22:06:19 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 22:06:19 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 22:06:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 22:06:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:06:19 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 22:06:19 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 22:06:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:06:19 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page faqsPage
2025-02-24 22:06:19 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/faqs | Time: 2251ms | Result: admin/content/faqs
2025-02-24 22:06:20 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: How to create? -> Qanday yaratish kerak?
2025-02-24 22:06:20 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Simple -> Oddiy
2025-02-24 22:06:20 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 1 FAQs for homepage
2025-02-24 22:06:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:06:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:06:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:06:21 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page home
2025-02-24 22:06:21 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 4561ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Salom, description=Salom, displayOrder=1, active=true), BenefitCardDTO(id=2, title=Salom, description=Salom, displayOrder=2, active=true)], testimonials=[], faqs=[FaqDTO(id=1, question=Qanday yaratish kerak?, answer=Oddiy, displayOrder=0, active=true, createdAt=2025-02-24T22:03:58.263513, updatedAt=null)]}]
2025-02-24 22:06:29 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:06:29 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:06:29.406652451, endDate: 2025-02-24T22:06:29.406652451
2025-02-24 22:06:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:06:29 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:06:29 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:06:29.535146741, endDate: 2025-02-24T22:06:29.535146741
2025-02-24 22:06:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:06:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:29 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:06:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:06:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:30 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:06:30 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:06:30.084849926, endDate: 2025-02-24T22:06:30.084849926
2025-02-24 22:06:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:06:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:06:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:06:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:06:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:06:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:06:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:06:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:06:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:06:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:06:31 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:06:31 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1212ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:06:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:06:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:06:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:06:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:06:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:31 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:06:31 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:06:31 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=359.3333333333333, previous=0.0, change=100.0
2025-02-24 22:06:31 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:06:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:06:31 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:06:31 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:06:31 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=359.3333333333333, previous=0.0, change=100.0
2025-02-24 22:06:31 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:06:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:06:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:06:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:06:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:06:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:06:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:06:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:06:32 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:06:32 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:06:32 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=360.44444444444446, previous=0.0, change=100.0
2025-02-24 22:06:32 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:06:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:06:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:06:32 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:06:32 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3133ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=359.3333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:06:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:06:32 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:06:32 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3227ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=359.3333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:06:33 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:06:33 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3011ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=360.44444444444446, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:06:46 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [21, false, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@5fd8cce8]
2025-02-24 22:06:46 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@41e9469c]]
2025-02-24 22:06:46 [http-nio-8080-exec-9] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-24 22:06:46 [http-nio-8080-exec-9] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-24 22:06:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:06:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:06:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:06:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:06:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:06:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:06:47 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page benefitsPage
2025-02-24 22:06:47 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 927ms | Result: admin/content/benefits
2025-02-24 22:06:47 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:06:47 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1201ms | Result: <200 OK OK,[]>
2025-02-24 22:06:53 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:06:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:06:53 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:06:53 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:06:53.116747926, endDate: 2025-02-24T22:06:53.116747926
2025-02-24 22:06:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:06:53 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:06:53 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:06:53.289505722, endDate: 2025-02-24T22:06:53.289505722
2025-02-24 22:06:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:06:53 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:06:53 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:06:53.330096125, endDate: 2025-02-24T22:06:53.330096125
2025-02-24 22:06:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:06:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:06:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:06:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:06:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:06:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:06:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:06:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:06:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:06:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:06:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:54 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:06:54 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1200ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:06:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:06:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:06:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:06:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:06:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:06:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:06:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:06:55 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:06:55 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:06:55 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=401.6666666666667, previous=0.0, change=100.0
2025-02-24 22:06:55 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:06:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:06:55 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:06:55 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:06:55 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=401.6666666666667, previous=0.0, change=100.0
2025-02-24 22:06:55 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:06:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:06:55 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:06:55 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:06:55 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=401.6666666666667, previous=0.0, change=100.0
2025-02-24 22:06:55 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:06:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:06:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:06:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:06:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:06:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:06:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:06:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:06:56 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:06:56 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3070ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=401.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:06:56 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:06:56 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3140ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=401.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:06:56 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:06:56 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3333ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=401.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:07:25 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:07:25 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:07:25 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 2 benefits for homepage
2025-02-24 22:07:25 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Salom (Order: 1)
2025-02-24 22:07:25 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Salom (Order: 2)
2025-02-24 22:07:25 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 22:07:25 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 22:07:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 22:07:25 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [59, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@75caedf5]
2025-02-24 22:07:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:25 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 22:07:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:25 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 22:07:25 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:07:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:25 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [34, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@1439647a]
2025-02-24 22:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:25 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@63e5bfbc]]
2025-02-24 22:07:25 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-24 22:07:25 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-24 22:07:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:26 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:07:26 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 955ms | Result: <200 OK OK,[]>
2025-02-24 22:07:26 [http-nio-8080-exec-5] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: How to create? -> Qanday yaratish kerak?
2025-02-24 22:07:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:26 [http-nio-8080-exec-5] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Simple -> Oddiy
2025-02-24 22:07:26 [http-nio-8080-exec-5] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 1 FAQs for homepage
2025-02-24 22:07:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:26 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:07:26 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 942ms | Result: <200 OK OK,[]>
2025-02-24 22:07:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:27 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page benefitsPage
2025-02-24 22:07:27 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 1130ms | Result: admin/content/benefits
2025-02-24 22:07:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:27 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page home
2025-02-24 22:07:27 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 2353ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Salom, description=Salom, displayOrder=1, active=true), BenefitCardDTO(id=2, title=Salom, description=Salom, displayOrder=2, active=true)], testimonials=[], faqs=[FaqDTO(id=1, question=Qanday yaratish kerak?, answer=Oddiy, displayOrder=0, active=true, createdAt=2025-02-24T22:03:58.263513, updatedAt=null)]}]
2025-02-24 22:07:33 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:07:33 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:07:33.451522393, endDate: 2025-02-24T22:07:33.451522393
2025-02-24 22:07:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:07:33 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:07:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:07:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:33 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:07:33 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:07:33.894429531, endDate: 2025-02-24T22:07:33.894429531
2025-02-24 22:07:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:07:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:34 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:07:34 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:07:34.129999347, endDate: 2025-02-24T22:07:34.129999347
2025-02-24 22:07:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:07:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:34 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:07:34 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1133ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:07:34 [http-nio-8080-exec-11] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/faqs | Class: uz.pdp.ilmpay.Controller.AdminController | Method: faqsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6552f31e]]
2025-02-24 22:07:34 [http-nio-8080-exec-11] INFO  u.p.i.Controller.AdminController - 📚 Loading faqs management page
2025-02-24 22:07:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:34 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:07:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:35 [http-nio-8080-exec-11] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: How to create? -> Qanday yaratish kerak?
2025-02-24 22:07:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:35 [http-nio-8080-exec-11] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Simple -> Oddiy
2025-02-24 22:07:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:35 [http-nio-8080-exec-11] INFO  u.p.i.Controller.AdminController - ✨ Faqs page loaded successfully
2025-02-24 22:07:35 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:35 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:07:35 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:07:35 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=406.22222222222223, previous=0.0, change=100.0
2025-02-24 22:07:35 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:07:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:36 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:36 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:07:36 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:07:36 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=406.22222222222223, previous=0.0, change=100.0
2025-02-24 22:07:36 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:07:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:36 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:36 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:07:36 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:07:36 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=406.22222222222223, previous=0.0, change=100.0
2025-02-24 22:07:36 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:07:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:36 [http-nio-8080-exec-11] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page faqsPage
2025-02-24 22:07:36 [http-nio-8080-exec-11] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/faqs | Time: 2040ms | Result: admin/content/faqs
2025-02-24 22:07:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:37 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:07:37 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3681ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=406.22222222222223, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:07:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:37 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:07:37 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3469ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=406.22222222222223, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:07:37 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:07:37 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3687ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=406.22222222222223, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:07:37 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [3, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@1f30a658]
2025-02-24 22:07:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:38 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:07:38 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 950ms | Result: <200 OK OK,[]>
2025-02-24 22:07:43 [http-nio-8080-exec-11] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:07:43 [http-nio-8080-exec-11] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:07:43.154412045, endDate: 2025-02-24T22:07:43.154412045
2025-02-24 22:07:43 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:07:43 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:07:43 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:07:43.167720038, endDate: 2025-02-24T22:07:43.167720038
2025-02-24 22:07:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:07:43 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:07:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:07:43 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:43 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:07:43 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:07:43.404193960, endDate: 2025-02-24T22:07:43.404193960
2025-02-24 22:07:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:07:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:43 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:43 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:44 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:44 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:44 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:07:44 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1168ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:07:44 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:44 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:44 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:45 [http-nio-8080-exec-11] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:07:45 [http-nio-8080-exec-11] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:07:45 [http-nio-8080-exec-11] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=407.22222222222223, previous=0.0, change=100.0
2025-02-24 22:07:45 [http-nio-8080-exec-11] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:07:45 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:45 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:07:45 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:07:45 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=407.22222222222223, previous=0.0, change=100.0
2025-02-24 22:07:45 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:07:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:45 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:45 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:07:45 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=8, previous=0, change=100.0
2025-02-24 22:07:45 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=407.22222222222223, previous=0.0, change=100.0
2025-02-24 22:07:45 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:07:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:45 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:46 [http-nio-8080-exec-11] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:07:46 [http-nio-8080-exec-11] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 2979ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=407.22222222222223, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:07:46 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:07:46 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3198ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=407.22222222222223, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:07:46 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:07:46 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3201ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=407.22222222222223, durationChange=100.0, visitorChange=100.0, activeUsers=8, bounceRate=44.44444444444444},[]>
2025-02-24 22:07:46 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [5, false, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@1abe0cc0]
2025-02-24 22:07:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:46 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@16fc4e6e]]
2025-02-24 22:07:46 [http-nio-8080-exec-1] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-24 22:07:46 [http-nio-8080-exec-1] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-24 22:07:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:47 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page benefitsPage
2025-02-24 22:07:47 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 915ms | Result: admin/content/benefits
2025-02-24 22:07:47 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:07:47 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1165ms | Result: <200 OK OK,[]>
2025-02-24 22:07:53 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:07:53 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:07:53.938596647, endDate: 2025-02-24T22:07:53.938596647
2025-02-24 22:07:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:07:54 [http-nio-8080-exec-11] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:07:54 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:07:54 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:07:54 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:07:54.137778160, endDate: 2025-02-24T22:07:54.137778160
2025-02-24 22:07:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:07:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:54 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:07:54 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:07:54.340886264, endDate: 2025-02-24T22:07:54.340886264
2025-02-24 22:07:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:07:54 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:54 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:55 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:07:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:55 [http-nio-8080-exec-11] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:07:55 [http-nio-8080-exec-11] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1353ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:07:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:07:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:56 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:07:56 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:07:56 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=407.6666666666667, previous=0.0, change=100.0
2025-02-24 22:07:56 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:07:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:07:56 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:07:56 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:07:56 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=408.44444444444446, previous=0.0, change=100.0
2025-02-24 22:07:56 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:07:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:56 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:07:56 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:07:56 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=408.44444444444446, previous=0.0, change=100.0
2025-02-24 22:07:56 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:07:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:07:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:07:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:07:56 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:07:56 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3032ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=407.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:07:57 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:07:57 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3100ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=408.44444444444446, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:07:57 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:07:57 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3148ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=408.44444444444446, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:08:13 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [21, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@5e45695d]
2025-02-24 22:08:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:08:13 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@60959745]]
2025-02-24 22:08:13 [http-nio-8080-exec-1] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-24 22:08:13 [http-nio-8080-exec-1] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-24 22:08:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:08:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:08:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:08:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:08:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:08:14 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page benefitsPage
2025-02-24 22:08:14 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 956ms | Result: admin/content/benefits
2025-02-24 22:08:14 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:08:14 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1207ms | Result: <200 OK OK,[]>
2025-02-24 22:08:20 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:08:20 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:08:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:08:20 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:08:20.484907192, endDate: 2025-02-24T22:08:20.484907192
2025-02-24 22:08:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:08:20 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:08:20 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:08:20.713418753, endDate: 2025-02-24T22:08:20.713418753
2025-02-24 22:08:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:08:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:08:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:08:20 [http-nio-8080-exec-11] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:08:20 [http-nio-8080-exec-11] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:08:20.905732858, endDate: 2025-02-24T22:08:20.905732858
2025-02-24 22:08:20 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:08:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:08:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:08:21 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:08:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:08:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:08:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:08:21 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:08:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:08:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:08:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:08:21 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:08:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:08:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:08:21 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:08:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:08:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:08:21 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:08:21 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1394ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:08:22 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:08:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:08:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:08:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:08:22 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:08:22 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:08:22 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:08:22 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=410.55555555555554, previous=0.0, change=100.0
2025-02-24 22:08:22 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:08:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:08:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:08:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:08:22 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:08:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:08:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:08:23 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:08:23 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:08:23 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 2987ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=410.55555555555554, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:08:23 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:08:23 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:08:23 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=411.3333333333333, previous=0.0, change=100.0
2025-02-24 22:08:23 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:08:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:08:23 [http-nio-8080-exec-11] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:08:23 [http-nio-8080-exec-11] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:08:23 [http-nio-8080-exec-11] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=411.3333333333333, previous=0.0, change=100.0
2025-02-24 22:08:23 [http-nio-8080-exec-11] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:08:23 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:08:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:08:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:08:24 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:08:24 [http-nio-8080-exec-11] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:08:24 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:08:24 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3694ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=411.3333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:08:24 [http-nio-8080-exec-11] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:08:24 [http-nio-8080-exec-11] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3909ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=411.3333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:08:31 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:08:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-24 22:08:32 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-24 22:08:34 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 444561 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-24 22:08:34 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-24 22:08:34 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-24 22:08:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-24 22:08:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 8 JPA repository interfaces.
2025-02-24 22:08:34 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:08:34 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:08:34 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-24 22:08:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-24 22:08:35 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-24 22:08:35 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-24 22:08:35 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-24 22:08:35 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1054 ms
2025-02-24 22:08:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-24 22:08:38 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@579dde54
2025-02-24 22:08:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-24 22:08:38 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-24 22:08:42 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-24 22:08:42 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-24 22:08:42 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-24 22:08:43 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-24 22:08:44 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-24 22:08:44 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-24 22:08:44 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-24 22:08:44 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-24 22:08:44 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-24 22:08:45 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-24 22:08:46 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:08:47 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-24 22:08:48 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-24 22:08:48 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-24 22:08:48 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-24 22:08:48 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7b0be268, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@48adcadf, org.springframework.security.web.context.SecurityContextHolderFilter@49ecd74f, org.springframework.security.web.header.HeaderWriterFilter@5adca23c, org.springframework.web.filter.CorsFilter@2ff7685, org.springframework.security.web.authentication.logout.LogoutFilter@2fd2cf1f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4d031f38, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5e3cc41e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57885885, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f01e723, org.springframework.security.web.access.ExceptionTranslationFilter@765cfcbd, org.springframework.security.web.access.intercept.AuthorizationFilter@401e5e83]
2025-02-24 22:08:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-24 22:08:49 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 15.588 seconds (process running for 15.986)
2025-02-24 22:08:49 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-24 22:08:49 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-24 22:08:49 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-02-24 22:09:01 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5205fe99]]
2025-02-24 22:09:01 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-24 22:09:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 22:09:01 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [42, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@1e2c2892]
2025-02-24 22:09:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:09:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:09:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:09:02 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Hello -> Salom
2025-02-24 22:09:02 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Hello -> Salom
2025-02-24 22:09:02 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Hello -> Salom
2025-02-24 22:09:02 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:09:02 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 986ms | Result: <200 OK OK,[]>
2025-02-24 22:09:02 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Hello -> Salom
2025-02-24 22:09:02 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-24 22:09:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:09:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:09:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:09:03 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page benefitsPage
2025-02-24 22:09:03 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 2394ms | Result: admin/content/benefits
2025-02-24 22:09:09 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:09:09 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:09:09.757219254, endDate: 2025-02-24T22:09:09.757219254
2025-02-24 22:09:09 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:09:09 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:09:09.757354477, endDate: 2025-02-24T22:09:09.757354477
2025-02-24 22:09:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:09:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:09:09 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:09:09 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:09:09 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:09:09.983051036, endDate: 2025-02-24T22:09:09.983051036
2025-02-24 22:09:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:09:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:09:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:09:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:09:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:09:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:09:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:09:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:09:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:09:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:09:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:09:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:11 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:09:11 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1217ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:09:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:09:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:09:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:09:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:09:11 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:09:11 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:09:11 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=416.1111111111111, previous=0.0, change=100.0
2025-02-24 22:09:11 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:09:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:09:11 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:09:11 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:09:11 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=416.1111111111111, previous=0.0, change=100.0
2025-02-24 22:09:11 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:09:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:09:12 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:09:12 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:09:12 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=416.8888888888889, previous=0.0, change=100.0
2025-02-24 22:09:12 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:09:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:09:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:09:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:09:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:09:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:09:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:09:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:09:12 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:09:12 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3033ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=416.1111111111111, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:09:13 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:09:13 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3258ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=416.1111111111111, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:09:13 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:09:13 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3271ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=416.8888888888889, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:09:18 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [10, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@36530348]
2025-02-24 22:09:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:09:18 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@29611dd5]]
2025-02-24 22:09:18 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-24 22:09:18 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-24 22:09:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:09:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:09:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:09:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:09:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:09:19 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:09:19 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 913ms | Result: <200 OK OK,[]>
2025-02-24 22:09:19 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page benefitsPage
2025-02-24 22:09:19 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 1066ms | Result: admin/content/benefits
2025-02-24 22:09:24 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:09:24 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:09:24 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:09:24.931637406, endDate: 2025-02-24T22:09:24.931637406
2025-02-24 22:09:24 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:09:24.931637506, endDate: 2025-02-24T22:09:24.931637506
2025-02-24 22:09:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:09:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:09:25 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:09:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:09:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:09:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:09:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:09:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:09:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:09:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:09:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:09:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:26 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:09:26 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1167ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:09:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:09:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:09:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:09:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:09:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:09:27 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:09:27 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:09:27 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=418.55555555555554, previous=0.0, change=100.0
2025-02-24 22:09:27 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:09:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:09:27 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:09:27 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:09:27 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=418.55555555555554, previous=0.0, change=100.0
2025-02-24 22:09:27 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:09:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:09:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:09:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:09:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:09:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:09:27 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:09:27 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3001ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=418.55555555555554, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:09:28 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:09:28 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3240ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=418.55555555555554, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:09:29 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:09:29 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-24 22:09:29 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-24 22:09:31 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 449484 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-24 22:09:31 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-24 22:09:31 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-24 22:09:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-24 22:09:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 8 JPA repository interfaces.
2025-02-24 22:09:32 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:09:32 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:09:32 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-24 22:09:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-24 22:09:32 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-24 22:09:32 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-24 22:09:32 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-24 22:09:32 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1289 ms
2025-02-24 22:09:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-24 22:09:35 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@28bc9749
2025-02-24 22:09:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-24 22:09:35 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-24 22:09:40 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-24 22:09:40 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-24 22:09:40 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-24 22:09:40 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-24 22:09:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-24 22:09:42 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-24 22:09:42 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-24 22:09:42 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-24 22:09:42 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-24 22:09:43 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-24 22:09:44 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:09:44 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-24 22:09:46 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-24 22:09:46 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-24 22:09:46 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-24 22:09:46 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5bbcd407, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d85f217, org.springframework.security.web.context.SecurityContextHolderFilter@1f0d5d7b, org.springframework.security.web.header.HeaderWriterFilter@4cc05212, org.springframework.web.filter.CorsFilter@19b4787c, org.springframework.security.web.authentication.logout.LogoutFilter@213eeb34, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4b7cc75b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4d031f38, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@548666b9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6db22fce, org.springframework.security.web.access.ExceptionTranslationFilter@58a7aeca, org.springframework.security.web.access.intercept.AuthorizationFilter@21f77c80]
2025-02-24 22:09:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-24 22:09:47 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 16.268 seconds (process running for 16.58)
2025-02-24 22:09:47 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-24 22:09:47 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-24 22:09:47 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-24 22:09:53 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@30c11449]]
2025-02-24 22:09:53 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [30, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@77c54904]
2025-02-24 22:09:53 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-24 22:09:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:09:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 22:09:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:09:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:09:54 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Hello -> Salom
2025-02-24 22:09:54 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Hello -> Salom
2025-02-24 22:09:54 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Hello -> Salom
2025-02-24 22:09:54 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:09:54 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 995ms | Result: <200 OK OK,[]>
2025-02-24 22:09:54 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Hello -> Salom
2025-02-24 22:09:55 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-24 22:09:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:09:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:09:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:09:56 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page benefitsPage
2025-02-24 22:09:56 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 2247ms | Result: admin/content/benefits
2025-02-24 22:10:02 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:10:02 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:10:02.353869221, endDate: 2025-02-24T22:10:02.353869221
2025-02-24 22:10:02 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:10:02 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:10:02.356075522, endDate: 2025-02-24T22:10:02.356075522
2025-02-24 22:10:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:10:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:10:02 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:10:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:10:02 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:10:02 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:10:02.603866395, endDate: 2025-02-24T22:10:02.603866395
2025-02-24 22:10:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:10:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:10:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:10:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:10:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:10:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:10:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:10:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:10:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:10:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:10:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:10:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:10:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:10:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:10:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:10:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:10:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:10:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:10:03 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:10:03 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1155ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:10:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:10:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:10:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:10:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:10:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:10:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:10:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:10:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:10:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:10:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:10:04 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:10:04 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:10:04 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=422.6666666666667, previous=0.0, change=100.0
2025-02-24 22:10:04 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:10:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:10:04 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:10:04 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:10:04 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=422.6666666666667, previous=0.0, change=100.0
2025-02-24 22:10:04 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:10:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:10:04 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=9, previous=0, change=100.0
2025-02-24 22:10:04 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=9, previous=0, change=100.0
2025-02-24 22:10:04 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=422.6666666666667, previous=0.0, change=100.0
2025-02-24 22:10:04 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=44.44444444444444, previous=0.0, change=100.0
2025-02-24 22:10:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:10:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:10:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:10:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:10:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:10:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:10:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:10:05 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:10:05 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3066ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=422.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:10:05 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:10:05 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3315ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=422.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:10:05 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:10:05 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3289ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=9}], bounceChange=100.0, totalVisitors=9, activeChange=100.0, avgSessionDuration=422.6666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=9, bounceRate=44.44444444444444},[]>
2025-02-24 22:10:58 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:10:58 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-24 22:10:59 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-24 22:11:00 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 457078 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-24 22:11:00 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-24 22:11:00 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-24 22:11:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-24 22:11:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 8 JPA repository interfaces.
2025-02-24 22:11:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:11:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:11:01 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-24 22:11:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-24 22:11:02 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-24 22:11:02 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-24 22:11:02 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-24 22:11:02 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1242 ms
2025-02-24 22:11:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-24 22:11:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3a116ca6
2025-02-24 22:11:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-24 22:11:05 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-24 22:11:09 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-24 22:11:09 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-24 22:11:09 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-24 22:11:10 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-24 22:11:11 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-24 22:11:11 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-24 22:11:11 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-24 22:11:11 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-24 22:11:11 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-24 22:11:13 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-24 22:11:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:11:14 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-24 22:11:15 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-24 22:11:16 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-24 22:11:16 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-24 22:11:16 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@73c29540, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@61b0d0e6, org.springframework.security.web.context.SecurityContextHolderFilter@72211dc8, org.springframework.security.web.header.HeaderWriterFilter@67dab898, org.springframework.web.filter.CorsFilter@1bf22938, org.springframework.security.web.authentication.logout.LogoutFilter@56598517, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@293b7870, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3dade0d4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5cc1c780, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@253caf40, org.springframework.security.web.access.ExceptionTranslationFilter@12f20b92, org.springframework.security.web.access.intercept.AuthorizationFilter@366668a9]
2025-02-24 22:11:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-24 22:11:17 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 16.592 seconds (process running for 16.935)
2025-02-24 22:11:17 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-24 22:11:17 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-24 22:11:17 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-02-24 22:19:33 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:19:33 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-24 22:19:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-24 22:19:38 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 500049 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-24 22:19:38 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-24 22:19:38 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-24 22:19:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-24 22:19:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 8 JPA repository interfaces.
2025-02-24 22:19:39 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:19:39 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:19:39 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-24 22:19:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-24 22:19:39 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-24 22:19:39 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-24 22:19:39 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-24 22:19:39 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1183 ms
2025-02-24 22:19:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-24 22:19:42 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5909285b
2025-02-24 22:19:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-24 22:19:43 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-24 22:19:47 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-24 22:19:47 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-24 22:19:47 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-24 22:19:47 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-24 22:19:49 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-24 22:19:49 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-24 22:19:49 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-24 22:19:49 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-24 22:19:49 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-24 22:19:50 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-24 22:19:51 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:19:52 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-24 22:19:53 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-24 22:19:53 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-24 22:19:53 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-24 22:19:53 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2bc0b7dd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@72bb0967, org.springframework.security.web.context.SecurityContextHolderFilter@ed1bc80, org.springframework.security.web.header.HeaderWriterFilter@775e5694, org.springframework.web.filter.CorsFilter@602397ef, org.springframework.security.web.authentication.logout.LogoutFilter@34be49c0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@58986d6c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@696fbbdf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@569731e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72ef05e4, org.springframework.security.web.access.ExceptionTranslationFilter@3c1aede3, org.springframework.security.web.access.intercept.AuthorizationFilter@7f3d5d54]
2025-02-24 22:19:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-24 22:19:54 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 15.98 seconds (process running for 16.424)
2025-02-24 22:19:54 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-24 22:19:54 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-24 22:19:54 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-02-24 22:20:04 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/support-logos | Class: uz.pdp.ilmpay.Controller.SupportLogoController | Method: getSupportLogosPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@c67be4e]]
2025-02-24 22:20:04 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-24 22:20:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-24 22:20:05 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-24 22:20:05 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:20:05 [http-nio-8080-exec-3] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-24 22:20:05 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [750, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@5a1c8acf]
2025-02-24 22:20:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-24 22:20:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:20:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:20:05 [http-nio-8080-exec-3] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-24 22:20:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:20:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:20:05 [http-nio-8080-exec-3] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:20:05 [http-nio-8080-exec-3] ERROR uz.pdp.ilmpay.aspect.LoggingAspect - ❌ Error in GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Error: Cannot find cache named 'benefitCards' for Builder[public java.util.List uz.pdp.ilmpay.service.BenefitCardService.findAllActive()] caches=[benefitCards] | key=''allActive'' | keyGenerator='' | cacheManager='' | cacheResolver='' | condition='' | unless='' | sync='false'
2025-02-24 22:20:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:20:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:20:06 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:20:06 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1026ms | Result: <200 OK OK,[]>
2025-02-24 22:20:06 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getSupportLogosPage
2025-02-24 22:20:06 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/support-logos | Time: 1658ms | Result: admin/content/support-logos
2025-02-24 22:20:11 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:20:12 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:20:12 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:20:12.016958340, endDate: 2025-02-24T22:20:12.016958340
2025-02-24 22:20:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:20:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:20:12 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:20:12 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:20:12.221892316, endDate: 2025-02-24T22:20:12.221892316
2025-02-24 22:20:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:20:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:20:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:20:12 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:20:12 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:20:12.441268177, endDate: 2025-02-24T22:20:12.441268177
2025-02-24 22:20:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:20:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:20:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:20:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:20:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:20:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:20:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:20:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:20:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:20:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:20:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:20:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:20:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:20:13 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:20:13 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1191ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:20:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:20:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:20:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:20:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:20:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:20:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:20:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:20:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:20:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:20:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:20:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:20:14 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=11, previous=0, change=100.0
2025-02-24 22:20:14 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=11, previous=0, change=100.0
2025-02-24 22:20:14 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=421.3636363636364, previous=0.0, change=100.0
2025-02-24 22:20:14 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=45.45454545454545, previous=0.0, change=100.0
2025-02-24 22:20:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:20:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:20:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:20:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:20:14 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=11, previous=0, change=100.0
2025-02-24 22:20:14 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=11, previous=0, change=100.0
2025-02-24 22:20:14 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=421.3636363636364, previous=0.0, change=100.0
2025-02-24 22:20:14 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=45.45454545454545, previous=0.0, change=100.0
2025-02-24 22:20:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:20:14 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=11, previous=0, change=100.0
2025-02-24 22:20:14 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=11, previous=0, change=100.0
2025-02-24 22:20:14 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=421.3636363636364, previous=0.0, change=100.0
2025-02-24 22:20:14 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=45.45454545454545, previous=0.0, change=100.0
2025-02-24 22:20:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:20:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:20:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:20:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:20:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:20:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:20:15 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:20:15 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3010ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=11}], bounceChange=100.0, totalVisitors=11, activeChange=100.0, avgSessionDuration=421.3636363636364, durationChange=100.0, visitorChange=100.0, activeUsers=11, bounceRate=45.45454545454545},[]>
2025-02-24 22:20:15 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:20:15 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3040ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=11}], bounceChange=100.0, totalVisitors=11, activeChange=100.0, avgSessionDuration=421.3636363636364, durationChange=100.0, visitorChange=100.0, activeUsers=11, bounceRate=45.45454545454545},[]>
2025-02-24 22:20:15 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:20:15 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3050ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=11}], bounceChange=100.0, totalVisitors=11, activeChange=100.0, avgSessionDuration=421.3636363636364, durationChange=100.0, visitorChange=100.0, activeUsers=11, bounceRate=45.45454545454545},[]>
2025-02-24 22:20:33 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:20:33 [http-nio-8080-exec-4] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:20:33 [http-nio-8080-exec-4] ERROR uz.pdp.ilmpay.aspect.LoggingAspect - ❌ Error in GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Error: Cannot find cache named 'benefitCards' for Builder[public java.util.List uz.pdp.ilmpay.service.BenefitCardService.findAllActive()] caches=[benefitCards] | key=''allActive'' | keyGenerator='' | cacheManager='' | cacheResolver='' | condition='' | unless='' | sync='false'
2025-02-24 22:23:15 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:23:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-24 22:23:16 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-24 22:23:19 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 518649 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-24 22:23:19 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-24 22:23:19 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-24 22:23:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-24 22:23:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 8 JPA repository interfaces.
2025-02-24 22:23:20 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:23:20 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:23:20 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-24 22:23:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-24 22:23:20 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-24 22:23:20 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-24 22:23:20 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-24 22:23:20 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1346 ms
2025-02-24 22:23:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-24 22:23:23 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2066e897
2025-02-24 22:23:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-24 22:23:24 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-24 22:23:28 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-24 22:23:28 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-24 22:23:28 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-24 22:23:28 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-24 22:23:30 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-24 22:23:30 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-24 22:23:30 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-24 22:23:30 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-24 22:23:30 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-24 22:23:31 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-24 22:23:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:23:33 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-24 22:23:34 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-24 22:23:34 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-24 22:23:34 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-24 22:23:34 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@43023c0d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6716d006, org.springframework.security.web.context.SecurityContextHolderFilter@5754d0ba, org.springframework.security.web.header.HeaderWriterFilter@3c21f35b, org.springframework.web.filter.CorsFilter@13b73714, org.springframework.security.web.authentication.logout.LogoutFilter@2afb361c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@535b24b5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3c7a94c7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1fa8d14b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@476bf67d, org.springframework.security.web.access.ExceptionTranslationFilter@61c7234e, org.springframework.security.web.access.intercept.AuthorizationFilter@3316536f]
2025-02-24 22:23:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-24 22:23:35 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 16.345 seconds (process running for 16.696)
2025-02-24 22:23:35 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:23:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-24 22:23:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-24 22:23:39 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 520400 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-24 22:23:39 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-24 22:23:39 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-24 22:23:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-24 22:23:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 8 JPA repository interfaces.
2025-02-24 22:23:39 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:23:39 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:23:39 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-24 22:23:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-24 22:23:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-24 22:23:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-24 22:23:40 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-24 22:23:40 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1175 ms
2025-02-24 22:23:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-24 22:23:43 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3dbbed3e
2025-02-24 22:23:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-24 22:23:43 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-24 22:23:48 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-24 22:23:48 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-24 22:23:48 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-24 22:23:48 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-24 22:23:49 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-24 22:23:49 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-24 22:23:49 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-24 22:23:50 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-24 22:23:50 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-24 22:23:51 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-24 22:23:52 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:23:52 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-24 22:23:53 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-24 22:23:54 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-24 22:23:54 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-24 22:23:54 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1b254f9b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c21f35b, org.springframework.security.web.context.SecurityContextHolderFilter@bc25046, org.springframework.security.web.header.HeaderWriterFilter@4093f9c3, org.springframework.web.filter.CorsFilter@6f310f6a, org.springframework.security.web.authentication.logout.LogoutFilter@7046ce6a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@9b29cd4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3c1aede3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@40b01c90, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@453355f0, org.springframework.security.web.access.ExceptionTranslationFilter@f8f9ce0, org.springframework.security.web.access.intercept.AuthorizationFilter@2054183c]
2025-02-24 22:23:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-24 22:23:54 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 15.84 seconds (process running for 16.244)
2025-02-24 22:23:55 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-24 22:23:55 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-24 22:23:55 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-24 22:24:35 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:24:35 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-24 22:24:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-24 22:24:36 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-24 22:24:36 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [265, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@218fb9da]
2025-02-24 22:24:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:24:36 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/support-logos | Class: uz.pdp.ilmpay.Controller.SupportLogoController | Method: getSupportLogosPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@68a2ffb]]
2025-02-24 22:24:36 [http-nio-8080-exec-3] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-24 22:24:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-24 22:24:36 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:24:36 [http-nio-8080-exec-1] ERROR uz.pdp.ilmpay.aspect.LoggingAspect - ❌ Error in GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Error: Cannot find cache named 'benefitCards' for Builder[public java.util.List uz.pdp.ilmpay.service.BenefitCardService.findAllActive()] caches=[benefitCards] | key=''allActive'' | keyGenerator='' | cacheManager='' | cacheResolver='' | condition='' | unless='' | sync='false'
2025-02-24 22:24:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:24:36 [http-nio-8080-exec-3] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-24 22:24:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:24:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:24:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:24:37 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:24:37 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1003ms | Result: <200 OK OK,[]>
2025-02-24 22:24:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:24:37 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getSupportLogosPage
2025-02-24 22:24:37 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/support-logos | Time: 1384ms | Result: admin/content/support-logos
2025-02-24 22:24:43 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:24:43 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:24:43.443149646, endDate: 2025-02-24T22:24:43.443149646
2025-02-24 22:24:43 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:24:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:24:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:24:43 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:24:43 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:24:43.651831498, endDate: 2025-02-24T22:24:43.651831498
2025-02-24 22:24:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:24:43 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:24:43 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:24:43.696207048, endDate: 2025-02-24T22:24:43.696207048
2025-02-24 22:24:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:24:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:24:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:24:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:24:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:24:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:24:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:24:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:24:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:24:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:24:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:24:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:24:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:24:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:24:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:24:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:24:44 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:24:44 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1197ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:24:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:24:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:24:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:24:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:24:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:24:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:24:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:24:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:24:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:24:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:24:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:24:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:24:45 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=11, previous=0, change=100.0
2025-02-24 22:24:45 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=11, previous=0, change=100.0
2025-02-24 22:24:45 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=446.0, previous=0.0, change=100.0
2025-02-24 22:24:45 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=45.45454545454545, previous=0.0, change=100.0
2025-02-24 22:24:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:24:45 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=11, previous=0, change=100.0
2025-02-24 22:24:45 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=11, previous=0, change=100.0
2025-02-24 22:24:45 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=446.0, previous=0.0, change=100.0
2025-02-24 22:24:45 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=45.45454545454545, previous=0.0, change=100.0
2025-02-24 22:24:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:24:45 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=11, previous=0, change=100.0
2025-02-24 22:24:45 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=11, previous=0, change=100.0
2025-02-24 22:24:45 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=446.0, previous=0.0, change=100.0
2025-02-24 22:24:45 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=45.45454545454545, previous=0.0, change=100.0
2025-02-24 22:24:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:24:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:24:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:24:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:24:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:24:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:24:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:24:46 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:24:46 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3077ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=11}], bounceChange=100.0, totalVisitors=11, activeChange=100.0, avgSessionDuration=446.0, durationChange=100.0, visitorChange=100.0, activeUsers=11, bounceRate=45.45454545454545},[]>
2025-02-24 22:24:46 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:24:46 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3109ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=11}], bounceChange=100.0, totalVisitors=11, activeChange=100.0, avgSessionDuration=446.0, durationChange=100.0, visitorChange=100.0, activeUsers=11, bounceRate=45.45454545454545},[]>
2025-02-24 22:24:46 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:24:46 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3292ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=11}], bounceChange=100.0, totalVisitors=11, activeChange=100.0, avgSessionDuration=446.0, durationChange=100.0, visitorChange=100.0, activeUsers=11, bounceRate=45.45454545454545},[]>
2025-02-24 22:24:50 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [7, false, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@5529d9d0]
2025-02-24 22:24:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:24:50 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@19a5e5d4]]
2025-02-24 22:24:50 [http-nio-8080-exec-9] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-24 22:24:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-24 22:24:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:24:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-24 22:24:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:24:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-24 22:24:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-24 22:24:51 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page session-update
2025-02-24 22:24:51 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 911ms | Result: <200 OK OK,[]>
2025-02-24 22:24:51 [http-nio-8080-exec-9] ERROR uz.pdp.ilmpay.aspect.LoggingAspect - ❌ Error in GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Error: Cannot find cache named 'benefitCards' for Builder[public java.util.List uz.pdp.ilmpay.service.BenefitCardService.findAllActive()] caches=[benefitCards] | key=''allActive'' | keyGenerator='' | cacheManager='' | cacheResolver='' | condition='' | unless='' | sync='false'
2025-02-24 22:26:40 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:26:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-24 22:26:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-24 22:26:42 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 535532 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-24 22:26:42 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-24 22:26:42 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-24 22:26:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-24 22:26:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 8 JPA repository interfaces.
2025-02-24 22:26:43 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:26:43 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:26:43 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-24 22:26:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-24 22:26:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-24 22:26:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-24 22:26:43 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-24 22:26:43 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1111 ms
2025-02-24 22:26:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-24 22:26:46 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@22368ddc
2025-02-24 22:26:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-24 22:26:47 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-24 22:26:51 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-24 22:26:51 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-24 22:26:51 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-24 22:26:52 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-24 22:26:53 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-24 22:26:53 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-24 22:26:53 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-24 22:26:53 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-24 22:26:53 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-24 22:26:54 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-24 22:26:56 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:26:56 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-24 22:26:57 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-24 22:26:58 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-24 22:26:58 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-24 22:26:58 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@40e4dda7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@d449064, org.springframework.security.web.context.SecurityContextHolderFilter@2d85f217, org.springframework.security.web.header.HeaderWriterFilter@27846106, org.springframework.web.filter.CorsFilter@6ad92fb8, org.springframework.security.web.authentication.logout.LogoutFilter@423b3ef5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@775e5694, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@528497cc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a30a3b6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@696fbbdf, org.springframework.security.web.access.ExceptionTranslationFilter@19d27788, org.springframework.security.web.access.intercept.AuthorizationFilter@2bae9490]
2025-02-24 22:26:58 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-24 22:26:58 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 16.121 seconds (process running for 16.7)
2025-02-24 22:26:59 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-24 22:26:59 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-24 22:26:59 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-24 22:27:01 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:27:01 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-24 22:27:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-24 22:27:02 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-24 22:27:02 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6681c121]]
2025-02-24 22:27:02 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-24 22:27:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-24 22:27:02 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:27:02 [http-nio-8080-exec-1] ERROR uz.pdp.ilmpay.aspect.LoggingAspect - ❌ Error in GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Error: Cannot find cache named 'benefitCards' for Builder[public java.util.List uz.pdp.ilmpay.service.BenefitCardService.findAllActive()] caches=[benefitCards] | key=''allActive'' | keyGenerator='' | cacheManager='' | cacheResolver='' | condition='' | unless='' | sync='false'
2025-02-24 22:27:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-24 22:27:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-24 22:27:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-24 22:27:03 [http-nio-8080-exec-2] ERROR uz.pdp.ilmpay.aspect.LoggingAspect - ❌ Error in GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Error: Cannot find cache named 'benefitCards' for Builder[public java.util.List uz.pdp.ilmpay.service.BenefitCardService.findAllActive()] caches=[benefitCards] | key=''allActive'' | keyGenerator='' | cacheManager='' | cacheResolver='' | condition='' | unless='' | sync='false'
2025-02-24 22:29:50 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:29:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-24 22:29:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-24 22:29:53 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 551945 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-24 22:29:53 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-24 22:29:53 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-24 22:29:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-24 22:29:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 8 JPA repository interfaces.
2025-02-24 22:29:54 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:29:54 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-24 22:29:54 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-24 22:29:55 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-24 22:29:55 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-24 22:29:55 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-24 22:29:55 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-24 22:29:55 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1296 ms
2025-02-24 22:29:55 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-24 22:29:58 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@54a5496f
2025-02-24 22:29:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-24 22:29:58 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-24 22:30:02 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-24 22:30:02 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-24 22:30:02 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-24 22:30:03 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-24 22:30:04 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-24 22:30:04 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-24 22:30:04 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-24 22:30:04 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-24 22:30:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-24 22:30:06 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-24 22:30:07 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-24 22:30:07 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-24 22:30:08 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-24 22:30:09 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-24 22:30:09 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-24 22:30:09 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4b8c6dbc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7958703d, org.springframework.security.web.context.SecurityContextHolderFilter@674d102c, org.springframework.security.web.header.HeaderWriterFilter@14f9fce0, org.springframework.web.filter.CorsFilter@3fabd4e2, org.springframework.security.web.authentication.logout.LogoutFilter@3ec616af, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@26ee3c94, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1b8f56cd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a78c7f7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@195f4a3e, org.springframework.security.web.access.ExceptionTranslationFilter@5bbcd407, org.springframework.security.web.access.intercept.AuthorizationFilter@6ad92fb8]
2025-02-24 22:30:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-24 22:30:10 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 16.691 seconds (process running for 17.231)
2025-02-24 22:30:10 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-24 22:30:10 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-24 22:30:10 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-24 22:30:12 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-24 22:30:12 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-24 22:30:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-24 22:30:13 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-24 22:30:13 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@99716de]]
2025-02-24 22:30:13 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-24 22:30:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-24 22:30:13 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-24 22:30:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 22:30:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-24 22:30:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-24 22:30:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-24 22:30:14 [http-nio-8080-exec-1] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Hello -> Salom
2025-02-24 22:30:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-24 22:30:14 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 2 benefits for homepage
2025-02-24 22:30:14 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Salom (Order: 1)
2025-02-24 22:30:14 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Salom (Order: 2)
2025-02-24 22:30:14 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-24 22:30:14 [http-nio-8080-exec-1] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 22:30:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 22:30:14 [http-nio-8080-exec-1] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 22:30:14 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-24 22:30:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-24 22:30:14 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-24 22:30:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:30:14 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-24 22:30:15 [http-nio-8080-exec-1] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: How to create? -> Qanday yaratish kerak?
2025-02-24 22:30:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-24 22:30:15 [http-nio-8080-exec-1] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Simple -> Oddiy
2025-02-24 22:30:15 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 1 FAQs for homepage
2025-02-24 22:30:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:30:15 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-24 22:30:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:30:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:30:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:30:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:30:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:30:16 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page home
2025-02-24 22:30:16 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 3769ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[BenefitCardDTO(id=1, title=Salom, description=Salom, displayOrder=1, active=true), BenefitCardDTO(id=2, title=Salom, description=Salom, displayOrder=2, active=true)], testimonials=[], faqs=[FaqDTO(id=1, question=Qanday yaratish kerak?, answer=Oddiy, displayOrder=0, active=true, createdAt=2025-02-24T22:03:58.263513, updatedAt=null)]}]
2025-02-24 22:30:16 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page dashboard
2025-02-24 22:30:16 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 3520ms | Result: admin/dashboard
2025-02-24 22:30:24 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:30:24 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:30:24.501084059, endDate: 2025-02-24T22:30:24.501084059
2025-02-24 22:30:24 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:30:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:30:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:30:24 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:30:24 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:30:24.712005338, endDate: 2025-02-24T22:30:24.712005338
2025-02-24 22:30:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:30:24 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-24 22:30:24 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-23T22:30:24.727681775, endDate: 2025-02-24T22:30:24.727681775
2025-02-24 22:30:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:30:24 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-24 22:30:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-24 22:30:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:30:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:24 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-24 22:30:24 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-25T22:30:24.931615850, endDate: 2025-02-24T22:30:24.931615850
2025-02-24 22:30:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-24 22:30:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:30:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:30:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:30:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:30:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:30:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:30:25 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1177ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:30:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:25 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getActivityHeatmap
2025-02-24 22:30:25 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1194ms | Result: <200 OK OK,[{dayOfWeek=1, hour=16, count=2}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=1, hour=22, count=5}],[]>
2025-02-24 22:30:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:30:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:30:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-24 22:30:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:30:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:30:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:30:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:30:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:30:26 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=11, previous=0, change=100.0
2025-02-24 22:30:26 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=11, previous=0, change=100.0
2025-02-24 22:30:26 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=477.09090909090907, previous=0.0, change=100.0
2025-02-24 22:30:26 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=45.45454545454545, previous=0.0, change=100.0
2025-02-24 22:30:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:30:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-24 22:30:26 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=11, previous=0, change=100.0
2025-02-24 22:30:26 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=11, previous=0, change=100.0
2025-02-24 22:30:26 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=477.09090909090907, previous=0.0, change=100.0
2025-02-24 22:30:26 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=45.45454545454545, previous=0.0, change=100.0
2025-02-24 22:30:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:30:26 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=11, previous=0, change=100.0
2025-02-24 22:30:26 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=11, previous=0, change=100.0
2025-02-24 22:30:26 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=477.09090909090907, previous=0.0, change=100.0
2025-02-24 22:30:26 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=45.45454545454545, previous=0.0, change=100.0
2025-02-24 22:30:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:30:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:30:27 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=11, previous=0, change=100.0
2025-02-24 22:30:27 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=11, previous=0, change=100.0
2025-02-24 22:30:27 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=477.09090909090907, previous=0.0, change=100.0
2025-02-24 22:30:27 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=45.45454545454545, previous=0.0, change=100.0
2025-02-24 22:30:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-24 22:30:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:30:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:30:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-24 22:30:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:30:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:30:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-24 22:30:27 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:30:27 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3054ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=11}], bounceChange=100.0, totalVisitors=11, activeChange=100.0, avgSessionDuration=477.09090909090907, durationChange=100.0, visitorChange=100.0, activeUsers=11, bounceRate=45.45454545454545},[]>
2025-02-24 22:30:27 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:30:27 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3050ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=11}], bounceChange=100.0, totalVisitors=11, activeChange=100.0, avgSessionDuration=477.09090909090907, durationChange=100.0, visitorChange=100.0, activeUsers=11, bounceRate=45.45454545454545},[]>
2025-02-24 22:30:28 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:30:28 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3296ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=11}], bounceChange=100.0, totalVisitors=11, activeChange=100.0, avgSessionDuration=477.09090909090907, durationChange=100.0, visitorChange=100.0, activeUsers=11, bounceRate=45.45454545454545},[]>
2025-02-24 22:30:28 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session c53514f7-85cf-4f09-a79e-b84cf87eb08f on page getVisitorStats
2025-02-24 22:30:28 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3332ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=11}], bounceChange=100.0, totalVisitors=11, activeChange=100.0, avgSessionDuration=477.09090909090907, durationChange=100.0, visitorChange=100.0, activeUsers=11, bounceRate=45.45454545454545},[]>
2025-02-26 17:41:56 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 171361 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-26 17:41:56 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-26 17:41:56 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-26 17:41:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-26 17:41:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 8 JPA repository interfaces.
2025-02-26 17:41:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 17:41:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 17:41:57 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-26 17:41:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-26 17:41:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-26 17:41:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-26 17:41:57 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-26 17:41:57 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1222 ms
2025-02-26 17:41:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-26 17:42:01 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@64540344
2025-02-26 17:42:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-26 17:42:01 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-26 17:42:06 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-26 17:42:06 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-26 17:42:06 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-26 17:42:06 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-26 17:42:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-26 17:42:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-26 17:42:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-26 17:42:07 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-26 17:42:08 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-26 17:42:09 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-26 17:42:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 17:42:10 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-26 17:42:12 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-26 17:42:12 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-26 17:42:12 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-26 17:42:12 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4bc1f06d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2afb361c, org.springframework.security.web.context.SecurityContextHolderFilter@bf562b3, org.springframework.security.web.header.HeaderWriterFilter@7046ce6a, org.springframework.web.filter.CorsFilter@52073425, org.springframework.security.web.authentication.logout.LogoutFilter@1b254f9b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@218c25b9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@290ab243, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b78a31e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f7abc9e, org.springframework.security.web.access.ExceptionTranslationFilter@f805ab0, org.springframework.security.web.access.intercept.AuthorizationFilter@25847567]
2025-02-26 17:42:13 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-26 17:42:13 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 17.266 seconds (process running for 17.541)
2025-02-26 17:42:13 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-26 17:42:13 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-26 17:42:13 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-02-26 17:42:22 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/testimonials | Class: uz.pdp.ilmpay.Controller.AdminController | Method: testimonialsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@7fcd6b16]]
2025-02-26 17:42:22 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [76, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@77b78d0d]
2025-02-26 17:42:22 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 🎭 Loading testimonials management page
2025-02-26 17:42:22 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-26 17:42:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-26 17:42:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:42:22 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 3 active testimonials
2025-02-26 17:42:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:42:22 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Testimonials page loaded successfully
2025-02-26 17:42:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:42:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:42:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:42:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:42:23 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page session-update
2025-02-26 17:42:23 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1004ms | Result: <200 OK OK,[]>
2025-02-26 17:42:23 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page testimonialsPage
2025-02-26 17:42:23 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/testimonials | Time: 1458ms | Result: admin/content/testimonials
2025-02-26 17:42:29 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 17:42:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-26 17:42:30 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-26 17:42:30 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-25T17:42:30.041743448, endDate: 2025-02-26T17:42:30.041743448
2025-02-26 17:42:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:42:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:42:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:42:30 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-26 17:42:30 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:42:30.341223275, endDate: 2025-02-26T17:42:30.341223275
2025-02-26 17:42:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:42:30 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-26 17:42:30 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-25T17:42:30.512503664, endDate: 2025-02-26T17:42:30.512503664
2025-02-26 17:42:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:42:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:42:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:42:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:42:31 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getActivityHeatmap
2025-02-26 17:42:31 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1179ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=2}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:42:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:42:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:42:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:42:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:42:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:42:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:42:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:42:32 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:42:32 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:42:32 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=557.6470588235294, previous=346.1190476190476, change=61.11423588490222
2025-02-26 17:42:32 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=52.94117647058823, previous=61.904761904761905, change=-14.479638009049781
2025-02-26 17:42:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:42:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:42:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:42:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:42:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:42:32 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=63, previous=0, change=100.0
2025-02-26 17:42:32 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=63, previous=0, change=100.0
2025-02-26 17:42:32 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=410.04761904761904, previous=0.0, change=100.0
2025-02-26 17:42:32 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=57.142857142857146, previous=0.0, change=100.0
2025-02-26 17:42:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:42:32 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:42:32 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:42:32 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=557.6470588235294, previous=346.1190476190476, change=61.11423588490222
2025-02-26 17:42:32 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=52.94117647058823, previous=61.904761904761905, change=-14.479638009049781
2025-02-26 17:42:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:42:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:42:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:42:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:42:33 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getVisitorStats
2025-02-26 17:42:33 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3014ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-25, visitors=7}, {date=2025-02-26, visitors=10}], bounceChange=-14.479638009049781, totalVisitors=17, activeChange=-59.523809523809526, avgSessionDuration=557.6470588235294, durationChange=61.11423588490222, visitorChange=-59.523809523809526, activeUsers=17, bounceRate=52.94117647058823},[]>
2025-02-26 17:42:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:42:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:42:33 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getVisitorStats
2025-02-26 17:42:33 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3079ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-25, visitors=7}, {date=2025-02-26, visitors=10}], bounceChange=-14.479638009049781, totalVisitors=17, activeChange=-59.523809523809526, avgSessionDuration=557.6470588235294, durationChange=61.11423588490222, visitorChange=-59.523809523809526, activeUsers=17, bounceRate=52.94117647058823},[]>
2025-02-26 17:42:33 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getVisitorStats
2025-02-26 17:42:33 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3493ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=10}], bounceChange=100.0, totalVisitors=63, activeChange=100.0, avgSessionDuration=410.04761904761904, durationChange=100.0, visitorChange=100.0, activeUsers=63, bounceRate=57.142857142857146},[]>
2025-02-26 17:42:41 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [13, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@cad7dca]
2025-02-26 17:42:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:42:41 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/testimonials | Class: uz.pdp.ilmpay.Controller.AdminController | Method: testimonialsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@75e5c2a6]]
2025-02-26 17:42:41 [http-nio-8080-exec-10] INFO  u.p.i.Controller.AdminController - 🎭 Loading testimonials management page
2025-02-26 17:42:41 [http-nio-8080-exec-10] INFO  u.p.i.Controller.AdminController - ✨ Testimonials page loaded successfully
2025-02-26 17:42:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:42:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:42:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:42:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:42:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:42:42 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page session-update
2025-02-26 17:42:42 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 968ms | Result: <200 OK OK,[]>
2025-02-26 17:42:42 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page testimonialsPage
2025-02-26 17:42:42 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/testimonials | Time: 1185ms | Result: admin/content/testimonials
2025-02-26 17:42:48 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 17:42:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-26 17:42:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:42:48 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-26 17:42:48 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:42:48.427400123, endDate: 2025-02-26T17:42:48.427400123
2025-02-26 17:42:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:42:48 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-26 17:42:48 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-25T17:42:48.594713860, endDate: 2025-02-26T17:42:48.594713860
2025-02-26 17:42:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:42:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:42:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:42:48 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-26 17:42:48 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-25T17:42:48.860747850, endDate: 2025-02-26T17:42:48.860747850
2025-02-26 17:42:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:42:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:42:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:42:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:49 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getActivityHeatmap
2025-02-26 17:42:49 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1199ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=2}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:42:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:42:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:42:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:42:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:42:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:42:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:42:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:42:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:42:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:42:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:42:50 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=63, previous=0, change=100.0
2025-02-26 17:42:50 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=63, previous=0, change=100.0
2025-02-26 17:42:50 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=410.3333333333333, previous=0.0, change=100.0
2025-02-26 17:42:50 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=57.142857142857146, previous=0.0, change=100.0
2025-02-26 17:42:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:42:50 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:42:50 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:42:50 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=558.7058823529412, previous=346.1190476190476, change=61.420148991012816
2025-02-26 17:42:50 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=52.94117647058823, previous=61.904761904761905, change=-14.479638009049781
2025-02-26 17:42:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:42:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:42:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:42:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:42:50 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:42:50 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:42:50 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=558.7058823529412, previous=346.1190476190476, change=61.420148991012816
2025-02-26 17:42:50 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=52.94117647058823, previous=61.904761904761905, change=-14.479638009049781
2025-02-26 17:42:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:42:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:42:51 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:42:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:42:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:42:51 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getVisitorStats
2025-02-26 17:42:51 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 2988ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-25, visitors=7}, {date=2025-02-26, visitors=10}], bounceChange=-14.479638009049781, totalVisitors=17, activeChange=-59.523809523809526, avgSessionDuration=558.7058823529412, durationChange=61.420148991012816, visitorChange=-59.523809523809526, activeUsers=17, bounceRate=52.94117647058823},[]>
2025-02-26 17:42:51 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getVisitorStats
2025-02-26 17:42:51 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3397ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=10}], bounceChange=100.0, totalVisitors=63, activeChange=100.0, avgSessionDuration=410.3333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=63, bounceRate=57.142857142857146},[]>
2025-02-26 17:42:52 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getVisitorStats
2025-02-26 17:42:52 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3188ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-25, visitors=7}, {date=2025-02-26, visitors=10}], bounceChange=-14.479638009049781, totalVisitors=17, activeChange=-59.523809523809526, avgSessionDuration=558.7058823529412, durationChange=61.420148991012816, visitorChange=-59.523809523809526, activeUsers=17, bounceRate=52.94117647058823},[]>
2025-02-26 17:43:34 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [48, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@3b73aead]
2025-02-26 17:43:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:43:34 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/testimonials | Class: uz.pdp.ilmpay.Controller.AdminController | Method: testimonialsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@7ae1e93d]]
2025-02-26 17:43:34 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - 🎭 Loading testimonials management page
2025-02-26 17:43:34 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - ✨ Testimonials page loaded successfully
2025-02-26 17:43:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:43:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:43:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:43:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:43:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:43:36 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page session-update
2025-02-26 17:43:36 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 1591ms | Result: <200 OK OK,[]>
2025-02-26 17:43:36 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page testimonialsPage
2025-02-26 17:43:36 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/testimonials | Time: 1753ms | Result: admin/content/testimonials
2025-02-26 17:43:42 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-26 17:43:42 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:43:42.777099118, endDate: 2025-02-26T17:43:42.777099118
2025-02-26 17:43:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:43:42 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 17:43:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-26 17:43:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:43:43 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-26 17:43:43 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-25T17:43:43.103258052, endDate: 2025-02-26T17:43:43.103258052
2025-02-26 17:43:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:43:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:43:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:43:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:43:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:43:43 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-26 17:43:43 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-25T17:43:43.352448039, endDate: 2025-02-26T17:43:43.352448039
2025-02-26 17:43:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:43:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:43:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:43:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:43:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:43:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:43:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:43:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:43:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:43:44 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getActivityHeatmap
2025-02-26 17:43:44 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1136ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=2}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:43:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:43:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:43:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:43:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:43:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:43:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:43:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:43:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:43:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:43:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:43:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:43:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:43:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:43:45 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:43:45 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:43:45 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=561.9411764705883, previous=346.1190476190476, change=62.35488348190624
2025-02-26 17:43:45 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=52.94117647058823, previous=61.904761904761905, change=-14.479638009049781
2025-02-26 17:43:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:43:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:43:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:43:45 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:43:45 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:43:45 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=561.9411764705883, previous=346.1190476190476, change=62.35488348190624
2025-02-26 17:43:45 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=52.94117647058823, previous=61.904761904761905, change=-14.479638009049781
2025-02-26 17:43:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:43:45 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=63, previous=0, change=100.0
2025-02-26 17:43:45 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=63, previous=0, change=100.0
2025-02-26 17:43:45 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=411.2063492063492, previous=0.0, change=100.0
2025-02-26 17:43:45 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=57.142857142857146, previous=0.0, change=100.0
2025-02-26 17:43:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:43:45 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/testimonials/3 | Class: uz.pdp.ilmpay.Controller.AdminController | Method: getTestimonial | Args: [3]
2025-02-26 17:43:45 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - 🔍 Getting testimonial id: 3
2025-02-26 17:43:45 [http-nio-8080-exec-7] INFO  u.p.i.service.TestimonialService - 🔍 Finding testimonial by id: 3
2025-02-26 17:43:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.id=?
2025-02-26 17:43:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:43:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:43:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:43:45 [http-nio-8080-exec-7] INFO  u.p.i.service.TestimonialService - ✅ Found testimonial: Behruz
2025-02-26 17:43:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:43:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:43:45 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - ✅ Successfully retrieved testimonial id: 3
2025-02-26 17:43:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:43:46 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getVisitorStats
2025-02-26 17:43:46 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 2986ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-25, visitors=7}, {date=2025-02-26, visitors=10}], bounceChange=-14.479638009049781, totalVisitors=17, activeChange=-59.523809523809526, avgSessionDuration=561.9411764705883, durationChange=62.35488348190624, visitorChange=-59.523809523809526, activeUsers=17, bounceRate=52.94117647058823},[]>
2025-02-26 17:43:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:43:46 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getVisitorStats
2025-02-26 17:43:46 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3040ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-25, visitors=7}, {date=2025-02-26, visitors=10}], bounceChange=-14.479638009049781, totalVisitors=17, activeChange=-59.523809523809526, avgSessionDuration=561.9411764705883, durationChange=62.35488348190624, visitorChange=-59.523809523809526, activeUsers=17, bounceRate=52.94117647058823},[]>
2025-02-26 17:43:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:43:46 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getVisitorStats
2025-02-26 17:43:46 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3858ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=10}], bounceChange=100.0, totalVisitors=63, activeChange=100.0, avgSessionDuration=411.2063492063492, durationChange=100.0, visitorChange=100.0, activeUsers=63, bounceRate=57.142857142857146},[]>
2025-02-26 17:43:46 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getTestimonial
2025-02-26 17:43:46 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/testimonials/3 | Time: 1410ms | Result: <200 OK OK,EntityResponse(success=true, message=Success, errorCode=null, data=TestimonialDTO(id=3, name=Behruz, comment=The best dev, rating=5, imageFile=null, avatarUrl=null, order=null, isActive=true), errors=null, funnyMessage=Keep calm and code on!),[]>
2025-02-26 17:43:53 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> PUT /admin/testimonials/3 | Class: uz.pdp.ilmpay.Controller.AdminController | Method: updateTestimonial | Args: [3, Behruz, The best developer, 5, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@9d70d0c]
2025-02-26 17:43:53 [http-nio-8080-exec-10] INFO  u.p.i.Controller.AdminController - 🔄 Updating testimonial id: 3
2025-02-26 17:43:53 [http-nio-8080-exec-10] INFO  u.p.i.service.TestimonialService - 🔄 Updating testimonial id: 3
2025-02-26 17:43:53 [http-nio-8080-exec-10] DEBUG u.p.i.service.TestimonialService - 🔍 Validating testimonial data
2025-02-26 17:43:53 [http-nio-8080-exec-10] DEBUG u.p.i.service.TestimonialService - ✅ Testimonial validation passed
2025-02-26 17:43:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.id=?
2025-02-26 17:43:53 [http-nio-8080-exec-10] DEBUG u.p.i.service.TestimonialService - 📝 Updated testimonial details - Name: Behruz, Rating: 5, Comment length: 18
2025-02-26 17:43:53 [http-nio-8080-exec-10] INFO  u.p.i.service.TestimonialService - ✅ Successfully updated testimonial id: 3
2025-02-26 17:43:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        testimonials 
    set
        avatar_url=?,
        comment=?,
        created_at=?,
        is_active=?,
        name=?,
        display_order=?,
        rating=? 
    where
        id=?
2025-02-26 17:43:53 [http-nio-8080-exec-10] INFO  u.p.i.Controller.AdminController - ✅ Successfully updated testimonial id: 3
2025-02-26 17:43:53 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> PUT /admin/testimonials/3 | Time: 702ms | Result: <200 OK OK,EntityResponse(success=true, message=Success, errorCode=null, data=TestimonialDTO(id=3, name=Behruz, comment=The best developer, rating=5, imageFile=null, avatarUrl=null, order=null, isActive=true), errors=null, funnyMessage=Keep calm and code on!),[]>
2025-02-26 17:43:55 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [14, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@1bbb867]
2025-02-26 17:43:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:43:55 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/testimonials | Class: uz.pdp.ilmpay.Controller.AdminController | Method: testimonialsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@379b6eef]]
2025-02-26 17:43:55 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - 🎭 Loading testimonials management page
2025-02-26 17:43:55 [http-nio-8080-exec-4] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-26 17:43:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-26 17:43:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:43:55 [http-nio-8080-exec-4] INFO  u.p.i.service.TestimonialService - ✨ Found 3 active testimonials
2025-02-26 17:43:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:43:55 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - ✨ Testimonials page loaded successfully
2025-02-26 17:43:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:43:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:43:56 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page session-update
2025-02-26 17:43:56 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 980ms | Result: <200 OK OK,[]>
2025-02-26 17:43:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:43:56 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page testimonialsPage
2025-02-26 17:43:56 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/testimonials | Time: 1483ms | Result: admin/content/testimonials
2025-02-26 17:44:02 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-26 17:44:02 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:44:02.936031859, endDate: 2025-02-26T17:44:02.936031859
2025-02-26 17:44:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:44:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:44:03 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 17:44:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-26 17:44:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:44:03 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-26 17:44:03 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-25T17:44:03.409201891, endDate: 2025-02-26T17:44:03.409201891
2025-02-26 17:44:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:44:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:44:03 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-26 17:44:03 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-25T17:44:03.614119667, endDate: 2025-02-26T17:44:03.614119667
2025-02-26 17:44:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:44:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:44:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:44:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:44:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:44:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:44:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:44:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:44:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:44:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:44:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:44:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:44:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:44:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:44:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:44:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:44:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:44:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:44:04 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getActivityHeatmap
2025-02-26 17:44:04 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1546ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=2}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:44:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:44:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:44:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:44:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:44:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:44:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:44:05 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=63, previous=0, change=100.0
2025-02-26 17:44:05 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=63, previous=0, change=100.0
2025-02-26 17:44:05 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=411.41269841269843, previous=0.0, change=100.0
2025-02-26 17:44:05 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=57.142857142857146, previous=0.0, change=100.0
2025-02-26 17:44:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:44:05 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:44:05 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:44:05 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=563.1176470588235, previous=346.1190476190476, change=62.6947869331402
2025-02-26 17:44:05 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=52.94117647058823, previous=61.904761904761905, change=-14.479638009049781
2025-02-26 17:44:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:44:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:44:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:44:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:44:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:44:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:44:06 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:44:06 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:44:06 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=563.1176470588235, previous=346.1190476190476, change=62.6947869331402
2025-02-26 17:44:06 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=52.94117647058823, previous=61.904761904761905, change=-14.479638009049781
2025-02-26 17:44:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:44:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 17:44:06 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getVisitorStats
2025-02-26 17:44:06 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3077ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-25, visitors=7}, {date=2025-02-26, visitors=10}], bounceChange=-14.479638009049781, totalVisitors=17, activeChange=-59.523809523809526, avgSessionDuration=563.1176470588235, durationChange=62.6947869331402, visitorChange=-59.523809523809526, activeUsers=17, bounceRate=52.94117647058823},[]>
2025-02-26 17:44:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 17:44:06 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getVisitorStats
2025-02-26 17:44:06 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3779ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=10}], bounceChange=100.0, totalVisitors=63, activeChange=100.0, avgSessionDuration=411.41269841269843, durationChange=100.0, visitorChange=100.0, activeUsers=63, bounceRate=57.142857142857146},[]>
2025-02-26 17:44:07 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 82c614f1-f86a-41d5-89eb-d17b89753c7a on page getVisitorStats
2025-02-26 17:44:07 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 3518ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-25, visitors=7}, {date=2025-02-26, visitors=10}], bounceChange=-14.479638009049781, totalVisitors=17, activeChange=-59.523809523809526, avgSessionDuration=563.1176470588235, durationChange=62.6947869331402, visitorChange=-59.523809523809526, activeUsers=17, bounceRate=52.94117647058823},[]>
2025-02-26 17:45:44 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-26 17:45:44 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 17:45:44 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:45:44.625047154, endDate: 2025-02-26T17:45:44.625047154
2025-02-26 17:45:44 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-26 17:45:44 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-25T17:45:44.625702426, endDate: 2025-02-26T17:45:44.625702426
2025-02-26 17:45:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:45:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-26 17:45:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:45:44 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-26 17:45:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-25T17:45:44.626717444, endDate: 2025-02-26T17:45:44.626717444
2025-02-26 17:45:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:45:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:45:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:45:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:45:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:45:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:45:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:45:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-26 17:45:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:45:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:45:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:45:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:45:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:45:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:45:45 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session d699b9a2-5807-44cb-aa64-2528a737cd26 on page getActivityHeatmap
2025-02-26 17:45:45 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1150ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=2}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:45:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:45:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:45:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:45:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:45:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:45:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:45:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:45:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:45:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:45:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:45:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:45:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:45:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:45:47 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:45:47 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:45:47 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=563.2941176470588, previous=346.1190476190476, change=62.74577245082528
2025-02-26 17:45:47 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=52.94117647058823, previous=61.904761904761905, change=-14.479638009049781
2025-02-26 17:45:47 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:45:47 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=17, previous=42, change=-59.523809523809526
2025-02-26 17:45:47 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=563.2941176470588, previous=346.1190476190476, change=62.74577245082528
2025-02-26 17:45:47 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=52.94117647058823, previous=61.904761904761905, change=-14.479638009049781
2025-02-26 17:45:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:45:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:45:48 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=63, previous=0, change=100.0
2025-02-26 17:45:48 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=63, previous=0, change=100.0
2025-02-26 17:45:48 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=411.57142857142856, previous=0.0, change=100.0
2025-02-26 17:45:48 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=57.142857142857146, previous=0.0, change=100.0
2025-02-26 17:45:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 17:45:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-26 17:45:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-26 17:45:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-26 17:45:48 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session 18678777-61cd-40b6-a88b-637eb3deea12 on page getVisitorStats
2025-02-26 17:45:48 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 4116ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-25, visitors=7}, {date=2025-02-26, visitors=10}], bounceChange=-14.479638009049781, totalVisitors=17, activeChange=-59.523809523809526, avgSessionDuration=563.2941176470588, durationChange=62.74577245082528, visitorChange=-59.523809523809526, activeUsers=17, bounceRate=52.94117647058823},[]>
2025-02-26 17:45:48 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session e6bae9c7-7fef-4557-983a-c5afdb8b2086 on page getVisitorStats
2025-02-26 17:45:48 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 4135ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-25, visitors=7}, {date=2025-02-26, visitors=10}], bounceChange=-14.479638009049781, totalVisitors=17, activeChange=-59.523809523809526, avgSessionDuration=563.2941176470588, durationChange=62.74577245082528, visitorChange=-59.523809523809526, activeUsers=17, bounceRate=52.94117647058823},[]>
2025-02-26 17:45:49 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session f13533ff-dbe2-49c3-8951-69d3e320ad58 on page getVisitorStats
2025-02-26 17:45:49 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 4413ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=10}], bounceChange=100.0, totalVisitors=63, activeChange=100.0, avgSessionDuration=411.57142857142856, durationChange=100.0, visitorChange=100.0, activeUsers=63, bounceRate=57.142857142857146},[]>
2025-02-26 17:47:16 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 17:47:16 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-26 17:47:17 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-26 17:47:20 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 198279 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-26 17:47:20 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-26 17:47:20 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-26 17:47:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-26 17:47:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 8 JPA repository interfaces.
2025-02-26 17:47:20 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 17:47:20 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 17:47:20 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-26 17:47:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-26 17:47:21 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-26 17:47:21 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-26 17:47:21 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-26 17:47:21 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1023 ms
2025-02-26 17:47:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-26 17:47:24 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6b899971
2025-02-26 17:47:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-26 17:47:24 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-26 17:47:28 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-26 17:47:28 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-26 17:47:28 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-26 17:47:29 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-26 17:47:30 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-26 17:47:30 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-26 17:47:30 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-26 17:47:30 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-26 17:47:31 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-26 17:47:32 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-26 17:47:33 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 17:47:33 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-26 17:47:34 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-26 17:47:35 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-26 17:47:35 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-26 17:47:35 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3894400, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@91d86a3, org.springframework.security.web.context.SecurityContextHolderFilter@27a705e8, org.springframework.security.web.header.HeaderWriterFilter@31962524, org.springframework.web.filter.CorsFilter@71f55a59, org.springframework.security.web.authentication.logout.LogoutFilter@20fe006e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@15f2b65, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ae06bd1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f4c8611, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3ee7e2bd, org.springframework.security.web.access.ExceptionTranslationFilter@5f6e202, org.springframework.security.web.access.intercept.AuthorizationFilter@57eb5324]
2025-02-26 17:47:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-26 17:47:35 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 16.042 seconds (process running for 16.376)
2025-02-26 17:47:36 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-26 17:47:36 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-26 17:47:36 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-26 17:47:59 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/login | Class: uz.pdp.ilmpay.Controller.AdminController | Method: login | Args: []
2025-02-26 17:47:59 [http-nio-8080-exec-3] INFO  u.p.i.Controller.AdminController - 🔑 Admin login page requested
2025-02-26 17:47:59 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/login | Time: 1ms | Result: admin/login
2025-02-26 17:48:06 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/testimonials | Class: uz.pdp.ilmpay.Controller.AdminController | Method: testimonialsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.savedrequest.SavedRequestAwareWrapper@11aa5c12]]
2025-02-26 17:48:06 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - 🎭 Loading testimonials management page
2025-02-26 17:48:06 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-26 17:48:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-26 17:48:06 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - ✨ Found 3 active testimonials
2025-02-26 17:48:06 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - ✨ Testimonials page loaded successfully
2025-02-26 17:48:06 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/testimonials | Time: 524ms | Result: admin/content/testimonials
2025-02-26 17:48:13 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:48:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:48:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:48:13 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 17:48:13 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:48:13.673358162, endDate: 2025-02-26T17:48:13.673358162
2025-02-26 17:48:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:48:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:48:13 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:48:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:48:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:48:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:48:14 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 965ms | Result: <200 OK OK,{activeUsers=67, appDownloads=0, totalVisitors=67, todayVisitors=14},[]>
2025-02-26 17:48:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:48:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:48:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:48:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:48:14 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 913ms | Result: <200 OK OK,{activeUsers=67, appDownloads=0, totalVisitors=67, todayVisitors=14},[]>
2025-02-26 17:48:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:48:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:48:15 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:48:15 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:48:15 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:48:15 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:48:15 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2147ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:48:16 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@20033556]]
2025-02-26 17:48:16 [http-nio-8080-exec-3] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 17:48:16 [http-nio-8080-exec-3] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-26 17:48:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-26 17:48:16 [http-nio-8080-exec-3] INFO  u.p.i.service.SupportLogoService - ✨ Found 1 active support logos
2025-02-26 17:48:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-26 17:48:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-26 17:48:17 [http-nio-8080-exec-3] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 17:48:17 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 1390ms | Result: admin/dashboard
2025-02-26 17:48:21 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 17:48:21 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:48:21.500489919, endDate: 2025-02-26T17:48:21.500489919
2025-02-26 17:48:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:48:21 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:48:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:48:21 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 17:48:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-26 17:48:21 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 17:48:21 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:48:21.571665425, endDate: 2025-02-26T17:48:21.571665425
2025-02-26 17:48:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:48:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:48:21 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/heatmap | Time: 235ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=6}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:48:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:48:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:48:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:48:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:48:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:48:22 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 931ms | Result: <200 OK OK,{activeUsers=67, appDownloads=0, totalVisitors=67, todayVisitors=14},[]>
2025-02-26 17:48:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:48:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:22 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:48:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:48:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:48:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:48:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:48:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:48:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:48:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:48:23 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:48:23 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:48:23 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:48:23 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:48:23 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2073ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:48:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:48:23 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:48:23 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:48:23 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:48:23 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:48:23 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2093ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:48:23 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 917ms | Result: <200 OK OK,{activeUsers=67, appDownloads=0, totalVisitors=67, todayVisitors=14},[]>
2025-02-26 17:48:29 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@69b050c5]]
2025-02-26 17:48:29 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 17:48:29 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 17:48:29 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 0ms | Result: admin/dashboard
2025-02-26 17:48:33 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:48:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:48:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:48:33 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 17:48:33 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:48:33.582040437, endDate: 2025-02-26T17:48:33.582040437
2025-02-26 17:48:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:48:33 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 17:48:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-26 17:48:33 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 17:48:33 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:48:33.764743659, endDate: 2025-02-26T17:48:33.764743659
2025-02-26 17:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:48:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:48:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:33 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/heatmap | Time: 228ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=6}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:34 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:48:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:48:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:48:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:48:34 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 919ms | Result: <200 OK OK,{activeUsers=67, appDownloads=0, totalVisitors=67, todayVisitors=14},[]>
2025-02-26 17:48:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:48:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:48:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:48:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:48:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:48:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:48:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:34 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 926ms | Result: <200 OK OK,{activeUsers=67, appDownloads=0, totalVisitors=67, todayVisitors=14},[]>
2025-02-26 17:48:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:48:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:48:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:48:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:48:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:48:35 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:48:35 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:48:35 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:48:35 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:48:35 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2079ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:48:35 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:48:35 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:48:35 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:48:35 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:48:35 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2074ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:50:40 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 17:50:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-26 17:50:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-26 17:50:42 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 215097 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-26 17:50:43 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-26 17:50:43 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-26 17:50:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-26 17:50:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 8 JPA repository interfaces.
2025-02-26 17:50:43 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 17:50:43 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 17:50:43 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-26 17:50:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-26 17:50:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-26 17:50:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-26 17:50:44 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-26 17:50:44 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 966 ms
2025-02-26 17:50:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-26 17:50:46 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6b899971
2025-02-26 17:50:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-26 17:50:47 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-26 17:50:51 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-26 17:50:51 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-26 17:50:51 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-26 17:50:51 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-26 17:50:53 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-26 17:50:53 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-26 17:50:53 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-26 17:50:53 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-26 17:50:53 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-26 17:50:54 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-26 17:50:56 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 17:50:56 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-26 17:50:57 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-26 17:50:57 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-26 17:50:57 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-26 17:50:58 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@26df56f6, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20dc3357, org.springframework.security.web.context.SecurityContextHolderFilter@77871825, org.springframework.security.web.header.HeaderWriterFilter@5f7abc9e, org.springframework.web.filter.CorsFilter@5379bea3, org.springframework.security.web.authentication.logout.LogoutFilter@13b73714, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@396e897d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7cc89f6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ea7ad41, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7ffa2be, org.springframework.security.web.access.ExceptionTranslationFilter@170a158d, org.springframework.security.web.access.intercept.AuthorizationFilter@1e7c2765]
2025-02-26 17:50:58 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-26 17:50:58 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 15.683 seconds (process running for 15.997)
2025-02-26 17:50:58 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-26 17:50:58 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-26 17:50:58 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-26 17:51:03 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@160ac91a]]
2025-02-26 17:51:03 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 17:51:03 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-26 17:51:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-26 17:51:03 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - ✨ Found 1 active support logos
2025-02-26 17:51:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-26 17:51:04 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-26 17:51:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-26 17:51:04 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 3 active testimonials
2025-02-26 17:51:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-26 17:51:05 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 17:51:05 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 1922ms | Result: admin/dashboard
2025-02-26 17:51:09 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 17:51:09 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:51:09.749909070, endDate: 2025-02-26T17:51:09.749909070
2025-02-26 17:51:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:51:09 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:51:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:51:09 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:51:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:51:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:51:10 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 17:51:10 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:51:10.138269129, endDate: 2025-02-26T17:51:10.138269129
2025-02-26 17:51:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:51:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:51:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:51:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:51:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:51:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:51:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:51:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:51:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:51:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:51:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:51:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:51:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:51:10 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 946ms | Result: <200 OK OK,{activeUsers=67, appDownloads=0, totalVisitors=67, todayVisitors=14},[]>
2025-02-26 17:51:10 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 922ms | Result: <200 OK OK,{activeUsers=67, appDownloads=0, totalVisitors=67, todayVisitors=14},[]>
2025-02-26 17:51:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:51:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:51:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:51:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:51:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:51:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:51:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:51:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:51:11 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:51:11 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:51:11 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:51:11 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:51:11 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2214ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:51:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:51:12 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:51:12 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:51:12 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:51:12 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:51:12 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2117ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:56:09 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:56:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:56:09 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:56:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:56:09 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 17:56:09 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:56:09.956518158, endDate: 2025-02-26T17:56:09.956518158
2025-02-26 17:56:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:56:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:56:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:56:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:56:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:56:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:56:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:56:10 [http-nio-8080-exec-5] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Ignoring exception, response committed. : org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/analytics/activity-heatmap.
2025-02-26 17:56:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:56:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:56:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:56:10 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 922ms | Result: <200 OK OK,{activeUsers=67, appDownloads=0, totalVisitors=67, todayVisitors=14},[]>
2025-02-26 17:56:10 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 924ms | Result: <200 OK OK,{activeUsers=67, appDownloads=0, totalVisitors=67, todayVisitors=14},[]>
2025-02-26 17:56:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:56:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:56:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:56:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:56:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:56:12 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:56:12 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:56:12 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:56:12 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:56:12 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2066ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:56:12 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 17:56:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-26 17:56:13 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-26 17:56:16 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 242601 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-26 17:56:16 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-26 17:56:16 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-26 17:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-26 17:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 8 JPA repository interfaces.
2025-02-26 17:56:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 17:56:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 17:56:17 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-26 17:56:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-26 17:56:17 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-26 17:56:17 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-26 17:56:17 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-26 17:56:17 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1238 ms
2025-02-26 17:56:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-26 17:56:20 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@771d4db
2025-02-26 17:56:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-26 17:56:21 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-26 17:56:25 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-26 17:56:25 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-26 17:56:25 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-26 17:56:25 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-26 17:56:27 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-26 17:56:27 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-26 17:56:27 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-26 17:56:27 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-26 17:56:27 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-26 17:56:28 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-26 17:56:30 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 17:56:30 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-26 17:56:31 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-26 17:56:32 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-26 17:56:32 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-26 17:56:32 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@602397ef, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@72ef05e4, org.springframework.security.web.context.SecurityContextHolderFilter@d449064, org.springframework.security.web.header.HeaderWriterFilter@2d252298, org.springframework.web.filter.CorsFilter@5c3f3a3b, org.springframework.security.web.authentication.logout.LogoutFilter@7f4c8611, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3c7a94c7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@26ee3c94, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1c140c7c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@76e5f0ea, org.springframework.security.web.access.ExceptionTranslationFilter@7b833a3c, org.springframework.security.web.access.intercept.AuthorizationFilter@835f174]
2025-02-26 17:56:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-26 17:56:32 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 16.698 seconds (process running for 17.129)
2025-02-26 17:56:32 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-26 17:56:32 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-26 17:56:32 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-26 17:56:36 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@3dfc182a]]
2025-02-26 17:56:36 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 17:56:36 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-26 17:56:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-26 17:56:37 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - ✨ Found 1 active support logos
2025-02-26 17:56:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-26 17:56:37 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-26 17:56:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-26 17:56:38 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 3 active testimonials
2025-02-26 17:56:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-26 17:56:38 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 17:56:38 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 1943ms | Result: admin/dashboard
2025-02-26 17:56:42 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:56:42 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 17:56:42 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 17:56:42 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 17:56:42 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:56:42.871921283, endDate: 2025-02-26T17:56:42.871921283
2025-02-26 17:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 17:56:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 17:56:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:56:43 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 17:56:43 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:56:43.053495204, endDate: 2025-02-26T17:56:43.053495204
2025-02-26 17:56:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:56:43 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 267ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=6}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:56:43 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 272ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=6}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:56:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:56:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:56:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:56:43 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:56:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:56:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:56:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:56:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:56:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:56:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:56:43 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 950ms | Result: <200 OK OK,{activeUsers=67, todayVisitors=14, totalVisitors=67, appDownloads=0},[]>
2025-02-26 17:56:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:56:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:56:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:56:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:56:44 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 944ms | Result: <200 OK OK,{activeUsers=67, todayVisitors=14, totalVisitors=67, appDownloads=0},[]>
2025-02-26 17:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:56:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:56:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:56:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:56:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:56:44 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2093ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:56:45 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:56:45 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:56:45 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:56:45 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:56:45 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2161ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:56:57 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [14]
2025-02-26 17:56:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 17:56:57 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 241ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=6}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:57:02 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [30]
2025-02-26 17:57:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 17:57:02 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 236ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=6}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:57:03 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [90]
2025-02-26 17:57:03 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 90, startDate: 2024-11-28T17:57:03.447837025, endDate: 2025-02-26T17:57:03.447837025
2025-02-26 17:57:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:57:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:57:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:57:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:57:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:57:05 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:57:05 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:57:05 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:57:05 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:57:05 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2113ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:57:06 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [7]
2025-02-26 17:57:06 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 7, startDate: 2025-02-19T17:57:06.371693620, endDate: 2025-02-26T17:57:06.371693620
2025-02-26 17:57:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:57:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:57:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:57:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:57:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:57:08 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:57:08 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:57:08 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:57:08 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:57:08 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2077ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:57:11 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 17:57:11 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:57:11.641951305, endDate: 2025-02-26T17:57:11.641951305
2025-02-26 17:57:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:57:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:57:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:57:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:57:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:57:13 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:57:13 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:57:13 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:57:13 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:57:13 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2111ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:57:17 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [14]
2025-02-26 17:57:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 17:57:17 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 230ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=6}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:57:22 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 17:57:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 17:57:22 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 228ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=6}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:57:33 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@35ecd297]]
2025-02-26 17:57:33 [http-nio-8080-exec-9] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 17:57:33 [http-nio-8080-exec-9] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 17:57:33 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 2ms | Result: admin/dashboard
2025-02-26 17:57:38 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 17:57:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 17:57:38 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:57:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:57:38 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 17:57:38 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:57:38.323558827, endDate: 2025-02-26T17:57:38.323558827
2025-02-26 17:57:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:57:38 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 231ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=6}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:57:38 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 17:57:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 17:57:38 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 17:57:38 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:57:38.364107507, endDate: 2025-02-26T17:57:38.364107507
2025-02-26 17:57:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:57:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:57:38 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 251ms | Result: <200 OK OK,[{dayOfWeek=2, hour=9, count=1}, {dayOfWeek=3, hour=9, count=1}, {dayOfWeek=2, hour=12, count=6}, {dayOfWeek=3, hour=12, count=2}, {dayOfWeek=2, hour=13, count=6}, {dayOfWeek=3, hour=13, count=5}, {dayOfWeek=2, hour=14, count=5}, {dayOfWeek=1, hour=16, count=2}, {dayOfWeek=2, hour=16, count=6}, {dayOfWeek=1, hour=17, count=2}, {dayOfWeek=2, hour=17, count=5}, {dayOfWeek=3, hour=17, count=6}, {dayOfWeek=2, hour=20, count=4}, {dayOfWeek=1, hour=21, count=2}, {dayOfWeek=2, hour=21, count=3}, {dayOfWeek=1, hour=22, count=11}],[]>
2025-02-26 17:57:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:57:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:57:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:57:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:57:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:57:39 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 941ms | Result: <200 OK OK,{activeUsers=67, todayVisitors=14, totalVisitors=67, appDownloads=0},[]>
2025-02-26 17:57:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:57:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:39 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:57:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:57:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:57:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:57:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:57:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:57:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:57:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:57:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:57:40 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:57:40 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:57:40 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:57:40 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:57:40 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2090ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:57:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:57:40 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=67, previous=0, change=100.0
2025-02-26 17:57:40 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=67, previous=0, change=100.0
2025-02-26 17:57:40 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=387.0, previous=0.0, change=100.0
2025-02-26 17:57:40 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=59.701492537313435, previous=0.0, change=100.0
2025-02-26 17:57:40 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2160ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-24, visitors=17}, {date=2025-02-25, visitors=36}, {date=2025-02-26, visitors=14}], bounceChange=100.0, totalVisitors=67, activeChange=100.0, avgSessionDuration=387.0, durationChange=100.0, visitorChange=100.0, activeUsers=67, bounceRate=59.701492537313435},[]>
2025-02-26 17:57:40 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 931ms | Result: <200 OK OK,{activeUsers=67, todayVisitors=14, totalVisitors=67, appDownloads=0},[]>
2025-02-26 17:57:47 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 17:57:47 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-26 17:57:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-26 17:57:49 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 250293 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-26 17:57:49 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-26 17:57:49 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-26 17:57:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-26 17:57:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 8 JPA repository interfaces.
2025-02-26 17:57:50 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 17:57:50 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 17:57:50 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-26 17:57:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-26 17:57:50 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-26 17:57:50 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-26 17:57:50 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-26 17:57:50 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1164 ms
2025-02-26 17:57:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-26 17:57:53 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3a116ca6
2025-02-26 17:57:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-26 17:57:54 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-26 17:57:58 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-26 17:57:58 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-26 17:57:58 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-26 17:57:58 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-26 17:58:00 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-26 17:58:00 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-26 17:58:00 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-26 17:58:00 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-26 17:58:00 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-26 17:58:01 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-26 17:58:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists benefit_cards cascade
2025-02-26 17:58:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faq cascade
2025-02-26 17:58:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faqs cascade
2025-02-26 17:58:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists support_logos cascade
2025-02-26 17:58:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists testimonials cascade
2025-02-26 17:58:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-02-26 17:58:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists visitors cascade
2025-02-26 17:58:03 [main] DEBUG org.hibernate.SQL - 
    create table benefit_cards (
        active boolean not null,
        display_order integer check ((display_order<=4) and (display_order>=1)),
        created_at timestamp(6),
        id bigserial not null,
        description TEXT,
        icon_url varchar(255),
        title varchar(255),
        primary key (id)
    )
2025-02-26 17:58:03 [main] DEBUG org.hibernate.SQL - 
    create table faq (
        id bigserial not null,
        answer TEXT,
        category varchar(255),
        question varchar(255),
        primary key (id)
    )
2025-02-26 17:58:03 [main] DEBUG org.hibernate.SQL - 
    create table faqs (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        updated_at timestamp(6),
        answer TEXT not null,
        question varchar(255) not null,
        primary key (id)
    )
2025-02-26 17:58:04 [main] DEBUG org.hibernate.SQL - 
    create table support_logos (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        image_url varchar(255),
        name varchar(255),
        website_url varchar(255),
        primary key (id)
    )
2025-02-26 17:58:04 [main] DEBUG org.hibernate.SQL - 
    create table testimonials (
        display_order integer,
        is_active boolean,
        rating integer not null,
        created_at timestamp(6),
        id bigserial not null,
        comment varchar(1000) not null,
        avatar_url varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-02-26 17:58:04 [main] DEBUG org.hibernate.SQL - 
    create table users (
        is_active boolean,
        login_count integer,
        created_at timestamp(6),
        id bigserial not null,
        last_activity timestamp(6),
        last_login timestamp(6),
        email varchar(255) not null unique,
        full_name varchar(255),
        password varchar(255) not null,
        phone_number varchar(255),
        role varchar(255) check (role in ('USER','ADMIN')),
        source varchar(255),
        primary key (id)
    )
2025-02-26 17:58:04 [main] DEBUG org.hibernate.SQL - 
    create table visitors (
        bounced boolean not null,
        is_active boolean not null,
        is_downloaded boolean not null,
        page_visit_count integer not null,
        first_visit_time timestamp(6) not null,
        id bigserial not null,
        last_active_time timestamp(6) not null,
        session_duration bigint,
        ip_address varchar(255) not null,
        last_page_visited varchar(255),
        session_id varchar(255) not null,
        user_agent varchar(255),
        primary key (id)
    )
2025-02-26 17:58:05 [main] DEBUG org.hibernate.SQL - 
    create index idx_session_id 
       on visitors (session_id)
2025-02-26 17:58:05 [main] DEBUG org.hibernate.SQL - 
    create index idx_last_active 
       on visitors (last_active_time)
2025-02-26 17:58:05 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 17:58:05 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-26 17:58:06 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-26 17:58:07 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-26 17:58:07 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-26 17:58:07 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4093f9c3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@668d631d, org.springframework.security.web.context.SecurityContextHolderFilter@7cc19564, org.springframework.security.web.header.HeaderWriterFilter@7c59fe87, org.springframework.web.filter.CorsFilter@3ec616af, org.springframework.security.web.authentication.logout.LogoutFilter@528497cc, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@14d8c418, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6aabe0c6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@67ab557b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@55aaf4ff, org.springframework.security.web.access.ExceptionTranslationFilter@1615f30, org.springframework.security.web.access.intercept.AuthorizationFilter@423b3ef5]
2025-02-26 17:58:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-26 17:58:07 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 18.773 seconds (process running for 19.092)
2025-02-26 17:58:08 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-26 17:58:08 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-26 17:58:08 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-26 17:58:14 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/support-logos | Class: uz.pdp.ilmpay.Controller.SupportLogoController | Method: getSupportLogosPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@7a8655f4]]
2025-02-26 17:58:14 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-26 17:58:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-26 17:58:15 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-26 17:58:15 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/support-logos | Time: 504ms | Result: admin/content/support-logos
2025-02-26 17:58:21 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 17:58:21 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T17:58:21.560561183, endDate: 2025-02-26T17:58:21.560561183
2025-02-26 17:58:21 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:58:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 17:58:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:58:21 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 17:58:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 17:58:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:58:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:58:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 17:58:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:58:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:58:22 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 17:58:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 17:58:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 17:58:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:58:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:58:22 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 248ms | Result: <200 OK OK,[],[]>
2025-02-26 17:58:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 17:58:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 17:58:22 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 939ms | Result: <200 OK OK,{totalVisitors=0, appDownloads=0, activeUsers=0, todayVisitors=0},[]>
2025-02-26 17:58:22 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 926ms | Result: <200 OK OK,{totalVisitors=0, appDownloads=0, activeUsers=0, todayVisitors=0},[]>
2025-02-26 17:58:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:58:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 17:58:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:58:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 17:58:23 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 17:58:23 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 17:58:23 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 17:58:23 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 17:58:23 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2108ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:00:38 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/support-logos | Class: uz.pdp.ilmpay.Controller.SupportLogoController | Method: getSupportLogosPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@42343eca]]
2025-02-26 18:00:38 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/support-logos | Time: 1ms | Result: admin/content/support-logos
2025-02-26 18:00:44 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:00:44 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:00:44.181540580, endDate: 2025-02-26T18:00:44.181540580
2025-02-26 18:00:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:00:44 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:00:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:00:44 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:00:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:00:44 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:00:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:00:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:00:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:00:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:00:44 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 241ms | Result: <200 OK OK,[],[]>
2025-02-26 18:00:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:00:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:00:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:00:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:00:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:00:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:00:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:00:45 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 922ms | Result: <200 OK OK,{totalVisitors=0, appDownloads=0, activeUsers=0, todayVisitors=0},[]>
2025-02-26 18:00:45 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 924ms | Result: <200 OK OK,{totalVisitors=0, appDownloads=0, activeUsers=0, todayVisitors=0},[]>
2025-02-26 18:00:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:00:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:00:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:00:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:00:46 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:00:46 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:00:46 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:00:46 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:00:46 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2073ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:00:46 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:00:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:00:46 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 228ms | Result: <200 OK OK,[],[]>
2025-02-26 18:00:47 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@2fe4c5f4]]
2025-02-26 18:00:47 [http-nio-8080-exec-8] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-26 18:00:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-26 18:00:48 [http-nio-8080-exec-8] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-26 18:00:48 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 452ms | Result: admin/content/benefits
2025-02-26 18:00:54 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:00:54 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:00:54.228249608, endDate: 2025-02-26T18:00:54.228249608
2025-02-26 18:00:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:00:54 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:00:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:00:54 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:00:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:00:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:00:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:00:54 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:00:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:00:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:00:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:00:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:00:54 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 240ms | Result: <200 OK OK,[],[]>
2025-02-26 18:00:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:00:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:00:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:00:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:00:55 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 913ms | Result: <200 OK OK,{totalVisitors=0, appDownloads=0, activeUsers=0, todayVisitors=0},[]>
2025-02-26 18:00:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:00:55 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 927ms | Result: <200 OK OK,{totalVisitors=0, appDownloads=0, activeUsers=0, todayVisitors=0},[]>
2025-02-26 18:00:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:00:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:00:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:00:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:00:56 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:00:56 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:00:56 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:00:56 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:00:56 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2067ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:05:45 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:05:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:05:46 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 237ms | Result: <200 OK OK,[],[]>
2025-02-26 18:05:54 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:05:54 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:05:54.703429210, endDate: 2025-02-26T18:05:54.703429210
2025-02-26 18:05:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:05:54 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:05:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:05:54 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:05:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:05:54 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:05:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:05:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:05:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:05:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:05:54 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 239ms | Result: <200 OK OK,[],[]>
2025-02-26 18:05:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:05:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:05:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:05:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:05:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:05:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:05:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:05:55 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 926ms | Result: <200 OK OK,{totalVisitors=0, appDownloads=0, activeUsers=0, todayVisitors=0},[]>
2025-02-26 18:05:55 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 930ms | Result: <200 OK OK,{totalVisitors=0, appDownloads=0, activeUsers=0, todayVisitors=0},[]>
2025-02-26 18:05:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:05:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:05:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:05:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:05:56 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:05:56 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:05:56 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:05:56 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:05:56 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2084ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:08:23 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 18:08:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-26 18:08:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-26 18:08:27 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 303390 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-26 18:08:27 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-26 18:08:27 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-26 18:08:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-26 18:08:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 8 JPA repository interfaces.
2025-02-26 18:08:27 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 18:08:27 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 18:08:27 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-26 18:08:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-26 18:08:28 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-26 18:08:28 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-26 18:08:28 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-26 18:08:28 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 992 ms
2025-02-26 18:08:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-26 18:08:30 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@b2d8dcd
2025-02-26 18:08:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-26 18:08:31 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-26 18:08:35 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-26 18:08:35 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-26 18:08:35 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-26 18:08:36 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-26 18:08:37 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-26 18:08:37 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-26 18:08:37 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-26 18:08:37 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-26 18:08:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-26 18:08:38 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-26 18:08:40 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 18:08:40 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-26 18:08:41 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-26 18:08:42 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-26 18:08:42 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-26 18:08:42 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7bde45d8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2054183c, org.springframework.security.web.context.SecurityContextHolderFilter@5fda1853, org.springframework.security.web.header.HeaderWriterFilter@36f090e7, org.springframework.web.filter.CorsFilter@bdc7a96, org.springframework.security.web.authentication.logout.LogoutFilter@ed1bc80, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@ae06bd1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4a14227a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3ec616af, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4be980, org.springframework.security.web.access.ExceptionTranslationFilter@26b9269d, org.springframework.security.web.access.intercept.AuthorizationFilter@7b78a31e]
2025-02-26 18:08:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-26 18:08:42 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 15.659 seconds (process running for 16.016)
2025-02-26 18:08:42 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-26 18:08:42 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-26 18:08:42 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-26 18:08:48 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@54ede514]]
2025-02-26 18:08:48 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-26 18:08:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-26 18:08:49 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-26 18:08:49 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 506ms | Result: admin/content/benefits
2025-02-26 18:08:53 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler uz.pdp.ilmpay.exception.GlobalExceptionHandler#handleGenericException(Exception)
org.springframework.http.converter.HttpMessageNotWritableException: No converter for [class uz.pdp.ilmpay.payload.EntityResponse] with preset Content-Type 'text/javascript'
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:319)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-26 18:08:53 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/support-logos | Class: uz.pdp.ilmpay.Controller.SupportLogoController | Method: getSupportLogosPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@453546b0]]
2025-02-26 18:08:53 [http-nio-8080-exec-9] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-26 18:08:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-26 18:08:53 [http-nio-8080-exec-5] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler uz.pdp.ilmpay.exception.GlobalExceptionHandler#handleGenericException(Exception)
org.springframework.http.converter.HttpMessageNotWritableException: No converter for [class uz.pdp.ilmpay.payload.EntityResponse] with preset Content-Type 'text/javascript'
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:319)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-26 18:08:53 [http-nio-8080-exec-9] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-26 18:08:54 [http-nio-8080-exec-7] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler uz.pdp.ilmpay.exception.GlobalExceptionHandler#handleGenericException(Exception)
org.springframework.http.converter.HttpMessageNotWritableException: No converter for [class uz.pdp.ilmpay.payload.EntityResponse] with preset Content-Type 'text/javascript'
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:319)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-26 18:08:54 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/support-logos | Time: 493ms | Result: admin/content/support-logos
2025-02-26 18:08:58 [http-nio-8080-exec-3] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler uz.pdp.ilmpay.exception.GlobalExceptionHandler#handleGenericException(Exception)
org.springframework.http.converter.HttpMessageNotWritableException: No converter for [class uz.pdp.ilmpay.payload.EntityResponse] with preset Content-Type 'text/javascript'
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:319)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-26 18:08:59 [http-nio-8080-exec-10] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler uz.pdp.ilmpay.exception.GlobalExceptionHandler#handleGenericException(Exception)
org.springframework.http.converter.HttpMessageNotWritableException: No converter for [class uz.pdp.ilmpay.payload.EntityResponse] with preset Content-Type 'text/javascript'
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:319)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-26 18:08:59 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:08:59 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 0ms | Result: <200 OK OK,{activeUsers=0, todayVisitors=0, totalVisitors=0, appDownloads=0},[]>
2025-02-26 18:08:59 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:08:59 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 0ms | Result: <200 OK OK,[],[]>
2025-02-26 18:08:59 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:08:59 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 1ms | Result: <200 OK OK,{activeUsers=0, todayVisitors=0, totalVisitors=0, appDownloads=0},[]>
2025-02-26 18:08:59 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:08:59 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:08:59.315143371, endDate: 2025-02-26T18:08:59.315143371
2025-02-26 18:08:59 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/support-logos | Class: uz.pdp.ilmpay.Controller.SupportLogoController | Method: getSupportLogosPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@522e1390]]
2025-02-26 18:08:59 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/support-logos | Time: 1ms | Result: admin/content/support-logos
2025-02-26 18:08:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:08:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:08:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:09:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:09:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:09:01 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:09:01 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:09:01 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:09:01 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:09:01 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:09:01 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2174ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:09:06 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:09:06 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 0ms | Result: <200 OK OK,{activeUsers=0, todayVisitors=0, totalVisitors=0, appDownloads=0},[]>
2025-02-26 18:09:06 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:09:06 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 0ms | Result: <200 OK OK,{activeUsers=0, todayVisitors=0, totalVisitors=0, appDownloads=0},[]>
2025-02-26 18:09:06 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:09:06 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:09:06.173842997, endDate: 2025-02-26T18:09:06.173842997
2025-02-26 18:09:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:09:06 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:09:06 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 0ms | Result: <200 OK OK,[],[]>
2025-02-26 18:09:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:09:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:09:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:07 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/support-logos | Class: uz.pdp.ilmpay.Controller.SupportLogoController | Method: getSupportLogosPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@73b3917b]]
2025-02-26 18:09:07 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/support-logos | Time: 1ms | Result: admin/content/support-logos
2025-02-26 18:09:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:09:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:09:08 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:09:08 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:09:08 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:09:08 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:09:08 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2095ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:09:13 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:09:13 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1ms | Result: <200 OK OK,[],[]>
2025-02-26 18:09:13 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:09:13 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 0ms | Result: <200 OK OK,{activeUsers=0, todayVisitors=0, totalVisitors=0, appDownloads=0},[]>
2025-02-26 18:09:13 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:09:13 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:09:13.910622009, endDate: 2025-02-26T18:09:13.910622009
2025-02-26 18:09:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:09:13 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:09:13 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 0ms | Result: <200 OK OK,{activeUsers=0, todayVisitors=0, totalVisitors=0, appDownloads=0},[]>
2025-02-26 18:09:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:09:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:09:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:15 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@4014c6]]
2025-02-26 18:09:15 [http-nio-8080-exec-6] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 18:09:15 [http-nio-8080-exec-6] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-26 18:09:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-26 18:09:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:15 [http-nio-8080-exec-6] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-26 18:09:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:09:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-26 18:09:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:09:16 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:09:16 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:09:16 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:09:16 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:09:16 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2095ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:09:16 [http-nio-8080-exec-6] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 18:09:16 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 957ms | Result: admin/dashboard
2025-02-26 18:09:20 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:09:20 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:09:20.003269996, endDate: 2025-02-26T18:09:20.003269996
2025-02-26 18:09:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:09:20 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:09:20 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:09:20.230475887, endDate: 2025-02-26T18:09:20.230475887
2025-02-26 18:09:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:09:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:20 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:09:20 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 0ms | Result: <200 OK OK,{activeUsers=0, todayVisitors=0, totalVisitors=0, appDownloads=0},[]>
2025-02-26 18:09:20 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:09:20 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 0ms | Result: <200 OK OK,[],[]>
2025-02-26 18:09:20 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:09:20 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1ms | Result: <200 OK OK,[],[]>
2025-02-26 18:09:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:09:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:09:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:09:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:09:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:09:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:09:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:09:21 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:09:21 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 0ms | Result: <200 OK OK,{activeUsers=0, todayVisitors=0, totalVisitors=0, appDownloads=0},[]>
2025-02-26 18:09:22 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:09:22 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:09:22 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:09:22 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:09:22 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2066ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:09:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:09:22 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:09:22 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:09:22 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:09:22 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:09:22 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2073ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:09:36 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@70b56779]]
2025-02-26 18:09:36 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 18:09:36 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 18:09:36 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 0ms | Result: admin/dashboard
2025-02-26 18:09:40 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:09:40 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:09:40 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 0ms | Result: <200 OK OK,{activeUsers=0, todayVisitors=0, totalVisitors=0, appDownloads=0},[]>
2025-02-26 18:09:40 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:09:40.972892837, endDate: 2025-02-26T18:09:40.972892837
2025-02-26 18:09:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:09:40 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:09:40 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 0ms | Result: <200 OK OK,[],[]>
2025-02-26 18:09:40 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:09:40 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 0ms | Result: <200 OK OK,[],[]>
2025-02-26 18:09:40 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:09:40 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 0ms | Result: <200 OK OK,{activeUsers=0, todayVisitors=0, totalVisitors=0, appDownloads=0},[]>
2025-02-26 18:09:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:41 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:09:41 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:09:41.262965332, endDate: 2025-02-26T18:09:41.262965332
2025-02-26 18:09:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:09:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:09:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:09:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:09:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:09:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:09:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:09:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:09:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:09:43 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:09:43 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:09:43 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:09:43 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:09:43 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2074ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:09:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:09:43 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:09:43 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:09:43 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:09:43 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:09:43 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2228ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:10:36 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6c40fdcb]]
2025-02-26 18:10:36 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-26 18:10:36 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-26 18:10:36 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 1ms | Result: admin/content/benefits
2025-02-26 18:10:43 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:10:43 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 0ms | Result: <200 OK OK,{activeUsers=0, todayVisitors=0, totalVisitors=0, appDownloads=0},[]>
2025-02-26 18:10:43 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:10:43 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:10:43.092807779, endDate: 2025-02-26T18:10:43.092807779
2025-02-26 18:10:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:10:43 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:10:43 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 0ms | Result: <200 OK OK,[],[]>
2025-02-26 18:10:43 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:10:43 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 0ms | Result: <200 OK OK,{activeUsers=0, todayVisitors=0, totalVisitors=0, appDownloads=0},[]>
2025-02-26 18:10:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:10:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:10:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:10:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:10:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:10:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:10:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:10:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:10:45 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:10:45 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:10:45 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:10:45 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:10:45 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2126ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:10:45 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:10:45 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 0ms | Result: <200 OK OK,[],[]>
2025-02-26 18:12:43 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 18:12:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-26 18:12:44 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-26 18:12:46 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 324886 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-26 18:12:46 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-26 18:12:46 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-26 18:12:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-26 18:12:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 8 JPA repository interfaces.
2025-02-26 18:12:47 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 18:12:47 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 18:12:47 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-26 18:12:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-26 18:12:47 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-26 18:12:47 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-26 18:12:47 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-26 18:12:47 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1011 ms
2025-02-26 18:12:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-26 18:12:50 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3a116ca6
2025-02-26 18:12:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-26 18:12:51 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-26 18:12:55 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-26 18:12:55 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-26 18:12:55 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-26 18:12:56 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-26 18:12:57 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-26 18:12:57 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-26 18:12:57 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-26 18:12:57 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-26 18:12:57 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-26 18:12:58 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-26 18:13:00 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 18:13:00 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-26 18:13:01 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-26 18:13:02 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-26 18:13:02 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-26 18:13:02 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@bdc7a96, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4be980, org.springframework.security.web.context.SecurityContextHolderFilter@7e6b0a76, org.springframework.security.web.header.HeaderWriterFilter@458b6dea, org.springframework.web.filter.CorsFilter@9b29cd4, org.springframework.security.web.authentication.logout.LogoutFilter@d449064, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5735f981, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@668d631d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@aa85268, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9a7f026, org.springframework.security.web.access.ExceptionTranslationFilter@2860427c, org.springframework.security.web.access.intercept.AuthorizationFilter@15f7a4c2]
2025-02-26 18:13:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-26 18:13:02 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 16.066 seconds (process running for 16.38)
2025-02-26 18:13:03 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-26 18:13:03 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-26 18:13:03 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-26 18:13:09 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/content/benefits | Class: uz.pdp.ilmpay.Controller.AdminController | Method: benefitsPage | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@1f87d128]]
2025-02-26 18:13:09 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 📈 Loading benefits management page
2025-02-26 18:13:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-26 18:13:09 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Benefits page loaded successfully
2025-02-26 18:13:09 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/content/benefits | Time: 501ms | Result: admin/content/benefits
2025-02-26 18:13:15 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:13:15 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/activity-heatmap
2025-02-26 18:13:15 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/activity-heatmap
2025-02-26 18:13:15 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:13:15 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:15 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:13:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:13:16 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:13:16 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:16 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:13:16 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:16 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:13:16 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 284ms | Result: <200 OK OK,[],[]>
2025-02-26 18:13:16 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:13:16 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/dashboard
2025-02-26 18:13:16 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/dashboard
2025-02-26 18:13:16 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:13:16.220849558, endDate: 2025-02-26T18:13:16.220849558
2025-02-26 18:13:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:13:16 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:16 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:13:16 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:16 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:13:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:13:16 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:16 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:13:16 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:16 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:13:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:13:16 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:16 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:13:16 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 963ms | Result: <200 OK OK,{appDownloads=0, activeUsers=0, todayVisitors=0, totalVisitors=0},[]>
2025-02-26 18:13:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:13:16 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 929ms | Result: <200 OK OK,{appDownloads=0, activeUsers=0, todayVisitors=0, totalVisitors=0},[]>
2025-02-26 18:13:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:13:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:13:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:13:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:13:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:13:18 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:13:18 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:13:18 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:13:18 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:13:18 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2114ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:13:22 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@1df73eb2]]
2025-02-26 18:13:22 [http-nio-8080-exec-6] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 18:13:22 [http-nio-8080-exec-6] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-26 18:13:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-26 18:13:22 [http-nio-8080-exec-6] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-26 18:13:22 [http-nio-8080-exec-6] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-26 18:13:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-26 18:13:23 [http-nio-8080-exec-6] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-26 18:13:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-26 18:13:23 [http-nio-8080-exec-6] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 18:13:23 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 1426ms | Result: admin/dashboard
2025-02-26 18:13:27 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:13:27 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/dashboard
2025-02-26 18:13:27 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/dashboard
2025-02-26 18:13:27 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:13:27.350702103, endDate: 2025-02-26T18:13:27.350702103
2025-02-26 18:13:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:13:27 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:13:27 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/activity-heatmap
2025-02-26 18:13:27 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/activity-heatmap
2025-02-26 18:13:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:13:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:13:27 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:13:27 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:27 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:13:27 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:13:27 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:27 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:13:27 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:13:27 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/dashboard
2025-02-26 18:13:27 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/dashboard
2025-02-26 18:13:27 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:13:27.618125672, endDate: 2025-02-26T18:13:27.618125672
2025-02-26 18:13:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:13:27 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 230ms | Result: <200 OK OK,[],[]>
2025-02-26 18:13:27 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:13:27 [http-nio-8080-exec-5] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/activity-heatmap
2025-02-26 18:13:27 [http-nio-8080-exec-5] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/activity-heatmap
2025-02-26 18:13:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:13:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:13:27 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:27 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:27 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:27 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:13:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:13:27 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 227ms | Result: <200 OK OK,[],[]>
2025-02-26 18:13:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:13:28 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:28 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:13:28 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:28 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:13:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:13:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:13:28 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:28 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:13:28 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/metrics
2025-02-26 18:13:28 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/metrics
2025-02-26 18:13:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:13:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:13:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:13:28 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 915ms | Result: <200 OK OK,{appDownloads=0, activeUsers=0, todayVisitors=0, totalVisitors=0},[]>
2025-02-26 18:13:28 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 927ms | Result: <200 OK OK,{appDownloads=0, activeUsers=0, todayVisitors=0, totalVisitors=0},[]>
2025-02-26 18:13:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:13:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:13:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:13:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:13:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:13:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:13:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:13:29 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:13:29 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:13:29 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:13:29 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:13:29 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2082ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:13:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:13:29 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:13:29 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:13:29 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:13:29 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:13:29 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2153ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:15:46 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:15:46 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Checking if stats should be calculated for path: /api/analytics/activity-heatmap
2025-02-26 18:15:46 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Calculating stats for dashboard path: /api/analytics/activity-heatmap
2025-02-26 18:15:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:15:46 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 243ms | Result: <200 OK OK,[],[]>
2025-02-26 18:16:02 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 18:16:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-26 18:16:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-26 18:16:04 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 341321 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-26 18:16:04 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-26 18:16:04 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-26 18:16:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-26 18:16:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 8 JPA repository interfaces.
2025-02-26 18:16:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 18:16:05 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 18:16:05 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-26 18:16:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-26 18:16:05 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-26 18:16:05 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-26 18:16:05 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-26 18:16:05 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 966 ms
2025-02-26 18:16:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-26 18:16:09 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4a0c512b
2025-02-26 18:16:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-26 18:16:09 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-26 18:16:14 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-26 18:16:14 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-26 18:16:14 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (5) !
2025-02-26 18:16:14 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-26 18:16:15 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-26 18:16:15 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-26 18:16:15 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-26 18:16:15 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-26 18:16:16 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-26 18:16:17 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-26 18:16:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 18:16:18 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-26 18:16:19 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-26 18:16:19 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-26 18:16:19 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-26 18:16:20 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@22ad4255, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4fddc3cb, org.springframework.security.web.context.SecurityContextHolderFilter@7cbfa39d, org.springframework.security.web.header.HeaderWriterFilter@602397ef, org.springframework.web.filter.CorsFilter@70ed9c7f, org.springframework.security.web.authentication.logout.LogoutFilter@62f90937, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2f5f52b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2687bf90, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1abf7c9d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@65bb0f13, org.springframework.security.web.access.ExceptionTranslationFilter@1be37c6d, org.springframework.security.web.access.intercept.AuthorizationFilter@392b7436]
2025-02-26 18:16:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-26 18:16:20 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 15.665 seconds (process running for 15.965)
2025-02-26 18:16:20 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-26 18:16:20 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-26 18:16:20 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-26 18:16:23 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@2a364dee]]
2025-02-26 18:16:23 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 18:16:23 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-26 18:16:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-26 18:16:23 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-26 18:16:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-26 18:16:24 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-26 18:16:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-26 18:16:24 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-26 18:16:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-26 18:16:25 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 18:16:25 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 1941ms | Result: admin/dashboard
2025-02-26 18:16:29 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:16:29 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:16:29 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:16:29.230587770, endDate: 2025-02-26T18:16:29.230587770
2025-02-26 18:16:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:16:29 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:16:29 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:16:29 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:16:29 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:16:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:16:29 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:16:29 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:16:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:16:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:16:29 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:16:29 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:16:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:16:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:16:29 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:16:29 [http-nio-8080-exec-5] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:16:29 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:16:29.665412424, endDate: 2025-02-26T18:16:29.665412424
2025-02-26 18:16:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:16:29 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 227ms | Result: <200 OK OK,[],[]>
2025-02-26 18:16:29 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 231ms | Result: <200 OK OK,[],[]>
2025-02-26 18:16:29 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:16:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:16:29 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:16:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:16:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:16:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:16:29 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:16:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:16:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:16:30 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:16:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:16:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:16:30 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:16:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:16:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:16:30 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:16:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:16:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:16:30 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 957ms | Result: <200 OK OK,{todayVisitors=0, totalVisitors=0, appDownloads=0, activeUsers=0},[]>
2025-02-26 18:16:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:16:30 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 996ms | Result: <200 OK OK,{todayVisitors=0, totalVisitors=0, appDownloads=0, activeUsers=0},[]>
2025-02-26 18:16:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:16:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:16:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:16:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:16:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:16:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:16:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:16:31 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:16:31 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:16:31 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:16:31 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:16:31 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2162ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:16:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:16:31 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=0, previous=0, change=0.0
2025-02-26 18:16:31 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:16:31 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-26 18:16:31 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:16:31 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2097ms | Result: <200 OK OK,{dailyVisitors=[], bounceChange=0.0, totalVisitors=0, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=0.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:18:54 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 18:18:54 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-26 18:18:55 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-26 18:18:56 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 355380 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-26 18:18:56 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-26 18:18:56 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-26 18:18:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-26 18:18:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 8 JPA repository interfaces.
2025-02-26 18:18:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 18:18:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 18:18:57 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-26 18:18:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-26 18:18:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-26 18:18:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-26 18:18:57 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-26 18:18:57 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1259 ms
2025-02-26 18:18:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-26 18:19:00 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1c98fe6f
2025-02-26 18:19:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-26 18:19:01 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-26 18:19:05 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-26 18:19:05 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-26 18:19:05 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (6) !
2025-02-26 18:19:06 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-26 18:19:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-26 18:19:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-26 18:19:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-26 18:19:07 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-26 18:19:07 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-26 18:19:09 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-26 18:19:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 18:19:10 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-26 18:19:11 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-26 18:19:12 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-26 18:19:12 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-26 18:19:12 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@71f55a59, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3ee7e2bd, org.springframework.security.web.context.SecurityContextHolderFilter@79c8e98, org.springframework.security.web.header.HeaderWriterFilter@6a18bbeb, org.springframework.web.filter.CorsFilter@77871825, org.springframework.security.web.authentication.logout.LogoutFilter@5754d0ba, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4bc1f06d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5735f981, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30cd738c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12caa0e8, org.springframework.security.web.access.ExceptionTranslationFilter@4c0d4bf2, org.springframework.security.web.access.intercept.AuthorizationFilter@1abf7c9d]
2025-02-26 18:19:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-26 18:19:12 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 16.622 seconds (process running for 17.007)
2025-02-26 18:19:13 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-26 18:19:13 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-26 18:19:13 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-26 18:19:18 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 18:19:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-26 18:19:19 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-26 18:19:21 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 357690 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-26 18:19:21 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-26 18:19:21 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-26 18:19:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-26 18:19:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 8 JPA repository interfaces.
2025-02-26 18:19:22 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 18:19:22 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 18:19:22 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-26 18:19:22 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-26 18:19:23 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-26 18:19:23 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-26 18:19:23 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-26 18:19:23 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1164 ms
2025-02-26 18:19:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-26 18:19:25 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@b2d8dcd
2025-02-26 18:19:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-26 18:19:26 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-26 18:19:30 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-26 18:19:30 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-26 18:19:30 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (6) !
2025-02-26 18:19:30 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-26 18:19:32 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-26 18:19:32 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-26 18:19:32 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-26 18:19:32 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-26 18:19:32 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-26 18:19:33 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-26 18:19:33 [main] DEBUG org.hibernate.SQL - 
    drop table if exists benefit_cards cascade
2025-02-26 18:19:34 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faq cascade
2025-02-26 18:19:34 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faqs cascade
2025-02-26 18:19:34 [main] DEBUG org.hibernate.SQL - 
    drop table if exists support_logos cascade
2025-02-26 18:19:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists testimonials cascade
2025-02-26 18:19:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-02-26 18:19:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists visitors cascade
2025-02-26 18:19:35 [main] DEBUG org.hibernate.SQL - 
    create table benefit_cards (
        active boolean not null,
        display_order integer check ((display_order<=4) and (display_order>=1)),
        created_at timestamp(6),
        id bigserial not null,
        description TEXT,
        icon_url varchar(255),
        title varchar(255),
        primary key (id)
    )
2025-02-26 18:19:36 [main] DEBUG org.hibernate.SQL - 
    create table faq (
        id bigserial not null,
        answer TEXT,
        category varchar(255),
        question varchar(255),
        primary key (id)
    )
2025-02-26 18:19:36 [main] DEBUG org.hibernate.SQL - 
    create table faqs (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        updated_at timestamp(6),
        answer TEXT not null,
        question varchar(255) not null,
        primary key (id)
    )
2025-02-26 18:19:36 [main] DEBUG org.hibernate.SQL - 
    create table support_logos (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        image_url varchar(255),
        name varchar(255),
        website_url varchar(255),
        primary key (id)
    )
2025-02-26 18:19:36 [main] DEBUG org.hibernate.SQL - 
    create table testimonials (
        display_order integer,
        is_active boolean,
        rating integer not null,
        created_at timestamp(6),
        id bigserial not null,
        comment varchar(1000) not null,
        avatar_url varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-02-26 18:19:37 [main] DEBUG org.hibernate.SQL - 
    create table users (
        is_active boolean,
        login_count integer,
        created_at timestamp(6),
        id bigserial not null,
        last_activity timestamp(6),
        last_login timestamp(6),
        email varchar(255) not null unique,
        full_name varchar(255),
        password varchar(255) not null,
        phone_number varchar(255),
        role varchar(255) check (role in ('USER','ADMIN')),
        source varchar(255),
        primary key (id)
    )
2025-02-26 18:19:37 [main] DEBUG org.hibernate.SQL - 
    create table visitors (
        bounced boolean not null,
        is_active boolean not null,
        is_downloaded boolean not null,
        page_visit_count integer not null,
        first_visit_time timestamp(6) not null,
        id bigserial not null,
        last_active_time timestamp(6) not null,
        session_duration bigint,
        ip_address varchar(255) not null,
        last_page_visited varchar(255),
        session_id varchar(255) not null,
        user_agent varchar(255),
        primary key (id)
    )
2025-02-26 18:19:37 [main] DEBUG org.hibernate.SQL - 
    create index idx_session_id 
       on visitors (session_id)
2025-02-26 18:19:37 [main] DEBUG org.hibernate.SQL - 
    create index idx_last_active 
       on visitors (last_active_time)
2025-02-26 18:19:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 18:19:38 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-26 18:19:39 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-26 18:19:40 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-26 18:19:40 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-26 18:19:40 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@bdc7a96, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4be980, org.springframework.security.web.context.SecurityContextHolderFilter@7e6b0a76, org.springframework.security.web.header.HeaderWriterFilter@458b6dea, org.springframework.web.filter.CorsFilter@9b29cd4, org.springframework.security.web.authentication.logout.LogoutFilter@d449064, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5735f981, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@668d631d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@aa85268, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9a7f026, org.springframework.security.web.access.ExceptionTranslationFilter@2860427c, org.springframework.security.web.access.intercept.AuthorizationFilter@15f7a4c2]
2025-02-26 18:19:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-26 18:19:40 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 19.115 seconds (process running for 19.513)
2025-02-26 18:19:40 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-26 18:19:40 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-26 18:19:40 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-26 18:19:50 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/login | Class: uz.pdp.ilmpay.Controller.AdminController | Method: login | Args: []
2025-02-26 18:19:50 [http-nio-8080-exec-3] INFO  u.p.i.Controller.AdminController - 🔑 Admin login page requested
2025-02-26 18:19:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:19:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-26 18:19:51 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session 7d6fbdeb-9125-4888-9797-79353228aa61 on page login
2025-02-26 18:19:51 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/login | Time: 848ms | Result: admin/login
2025-02-26 18:19:56 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.savedrequest.SavedRequestAwareWrapper@146d95c7]]
2025-02-26 18:19:56 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 18:19:56 [http-nio-8080-exec-5] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-26 18:19:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-26 18:19:56 [http-nio-8080-exec-5] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-26 18:19:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-26 18:19:57 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-26 18:19:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-26 18:19:57 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-26 18:19:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-26 18:19:58 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 18:19:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:19:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-26 18:19:59 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:19:59 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 2570ms | Result: admin/dashboard
2025-02-26 18:20:02 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-26 18:20:02 [http-nio-8080-exec-9] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-26 18:20:02 [http-nio-8080-exec-9] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 0 benefits for homepage
2025-02-26 18:20:02 [http-nio-8080-exec-9] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-26 18:20:02 [http-nio-8080-exec-9] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-26 18:20:02 [http-nio-8080-exec-9] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 0 FAQs for homepage
2025-02-26 18:20:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:03 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page 
2025-02-26 18:20:03 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 938ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[], testimonials=[], faqs=[]}]
2025-02-26 18:20:03 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:20:03 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:20:03 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:20:03 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:03 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:20:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:20:03 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:20:03 [http-nio-8080-exec-3] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:03 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:20:03.413097417, endDate: 2025-02-26T18:20:03.413097417
2025-02-26 18:20:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:20:03 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:20:03 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:03 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:20:03.543962322, endDate: 2025-02-26T18:20:03.543962322
2025-02-26 18:20:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:20:03 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:20:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:03 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:20:03 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:20:03 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:20:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:20:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:20:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:20:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:20:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:04 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page activity-heatmap
2025-02-26 18:20:04 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1192ms | Result: <200 OK OK,[{dayOfWeek=3, hour=18, count=2}],[]>
2025-02-26 18:20:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:04 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page metrics
2025-02-26 18:20:04 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 1853ms | Result: <200 OK OK,{todayVisitors=2, activeUsers=2, appDownloads=0, totalVisitors=2},[]>
2025-02-26 18:20:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:20:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:20:05 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page activity-heatmap
2025-02-26 18:20:05 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1381ms | Result: <200 OK OK,[{dayOfWeek=3, hour=18, count=2}],[]>
2025-02-26 18:20:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:20:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:20:05 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=2, previous=0, change=100.0
2025-02-26 18:20:05 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=2, previous=0, change=100.0
2025-02-26 18:20:05 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=2.5, previous=0.0, change=100.0
2025-02-26 18:20:05 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=50.0, previous=0.0, change=100.0
2025-02-26 18:20:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:05 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=2, previous=0, change=100.0
2025-02-26 18:20:05 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=2, previous=0, change=100.0
2025-02-26 18:20:05 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=2.5, previous=0.0, change=100.0
2025-02-26 18:20:05 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=50.0, previous=0.0, change=100.0
2025-02-26 18:20:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:05 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:20:05 [http-nio-8080-exec-4] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:20:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:06 [http-nio-8080-exec-4] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:20:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:06 [http-nio-8080-exec-4] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:20:06 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:20:06 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3050ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-26, visitors=2}], bounceChange=100.0, totalVisitors=2, activeChange=100.0, avgSessionDuration=2.5, durationChange=100.0, visitorChange=100.0, activeUsers=2, bounceRate=50.0},[]>
2025-02-26 18:20:06 [http-nio-8080-exec-4] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:20:06 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:20:06 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3146ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-26, visitors=2}], bounceChange=100.0, totalVisitors=2, activeChange=100.0, avgSessionDuration=2.5, durationChange=100.0, visitorChange=100.0, activeUsers=2, bounceRate=50.0},[]>
2025-02-26 18:20:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:07 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page metrics
2025-02-26 18:20:07 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 1838ms | Result: <200 OK OK,{todayVisitors=2, activeUsers=2, appDownloads=0, totalVisitors=2},[]>
2025-02-26 18:20:10 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@3258e76d]]
2025-02-26 18:20:10 [http-nio-8080-exec-1] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 18:20:10 [http-nio-8080-exec-1] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 18:20:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:11 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:20:11 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 956ms | Result: admin/dashboard
2025-02-26 18:20:15 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:20:15 [http-nio-8080-exec-6] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:20:15 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:20:15 [http-nio-8080-exec-5] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:15 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:20:15 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:15 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:20:15.152796028, endDate: 2025-02-26T18:20:15.152796028
2025-02-26 18:20:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:20:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:20:15 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:20:15 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:20:15 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:20:15 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:20:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:15 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:20:15 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:15 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:20:15.359379941, endDate: 2025-02-26T18:20:15.359379941
2025-02-26 18:20:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:20:15 [http-nio-8080-exec-5] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:20:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:15 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:20:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:15 [http-nio-8080-exec-5] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:20:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:15 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:20:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:20:15 [http-nio-8080-exec-5] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:20:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:15 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:20:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:20:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:20:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:16 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page activity-heatmap
2025-02-26 18:20:16 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1186ms | Result: <200 OK OK,[{dayOfWeek=3, hour=18, count=2}],[]>
2025-02-26 18:20:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:20:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:16 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page activity-heatmap
2025-02-26 18:20:16 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1367ms | Result: <200 OK OK,[{dayOfWeek=3, hour=18, count=2}],[]>
2025-02-26 18:20:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:20:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:20:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:20:16 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page metrics
2025-02-26 18:20:16 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 1844ms | Result: <200 OK OK,{todayVisitors=2, activeUsers=2, appDownloads=0, totalVisitors=2},[]>
2025-02-26 18:20:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:20:17 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=2, previous=0, change=100.0
2025-02-26 18:20:17 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=2, previous=0, change=100.0
2025-02-26 18:20:17 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=8.0, previous=0.0, change=100.0
2025-02-26 18:20:17 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=50.0, previous=0.0, change=100.0
2025-02-26 18:20:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:17 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page metrics
2025-02-26 18:20:17 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 2078ms | Result: <200 OK OK,{todayVisitors=2, activeUsers=2, appDownloads=0, totalVisitors=2},[]>
2025-02-26 18:20:17 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=2, previous=0, change=100.0
2025-02-26 18:20:17 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=2, previous=0, change=100.0
2025-02-26 18:20:17 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=8.0, previous=0.0, change=100.0
2025-02-26 18:20:17 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=50.0, previous=0.0, change=100.0
2025-02-26 18:20:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:18 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:20:18 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2999ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-26, visitors=2}], bounceChange=100.0, totalVisitors=2, activeChange=100.0, avgSessionDuration=8.0, durationChange=100.0, visitorChange=100.0, activeUsers=2, bounceRate=50.0},[]>
2025-02-26 18:20:18 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:20:18 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3055ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-26, visitors=2}], bounceChange=100.0, totalVisitors=2, activeChange=100.0, avgSessionDuration=8.0, durationChange=100.0, visitorChange=100.0, activeUsers=2, bounceRate=50.0},[]>
2025-02-26 18:20:27 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@62f175d2]]
2025-02-26 18:20:27 [http-nio-8080-exec-3] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 18:20:27 [http-nio-8080-exec-3] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 18:20:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:27 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:20:27 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 929ms | Result: admin/dashboard
2025-02-26 18:20:31 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:20:31 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:20:31 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:20:31 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:20:31 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:20:31 [http-nio-8080-exec-4] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:20:31 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:20:31 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:31 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:20:31.605499608, endDate: 2025-02-26T18:20:31.605499608
2025-02-26 18:20:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:20:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:31 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:20:31 [http-nio-8080-exec-5] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:31 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:20:31.795903295, endDate: 2025-02-26T18:20:31.795903295
2025-02-26 18:20:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:20:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:31 [http-nio-8080-exec-4] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:20:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:32 [http-nio-8080-exec-4] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:20:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:32 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:20:32 [http-nio-8080-exec-6] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:20:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:32 [http-nio-8080-exec-4] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:20:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:20:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:20:32 [http-nio-8080-exec-6] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:20:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:20:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:32 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page activity-heatmap
2025-02-26 18:20:32 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1216ms | Result: <200 OK OK,[{dayOfWeek=3, hour=18, count=2}],[]>
2025-02-26 18:20:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:20:32 [http-nio-8080-exec-6] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:20:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:32 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page activity-heatmap
2025-02-26 18:20:32 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1248ms | Result: <200 OK OK,[{dayOfWeek=3, hour=18, count=2}],[]>
2025-02-26 18:20:32 [http-nio-8080-exec-6] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:20:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:20:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:20:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:20:33 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page metrics
2025-02-26 18:20:33 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 1870ms | Result: <200 OK OK,{todayVisitors=2, activeUsers=2, appDownloads=0, totalVisitors=2},[]>
2025-02-26 18:20:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:20:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:20:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:33 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=2, previous=0, change=100.0
2025-02-26 18:20:33 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=2, previous=0, change=100.0
2025-02-26 18:20:33 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=16.5, previous=0.0, change=100.0
2025-02-26 18:20:33 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=50.0, previous=0.0, change=100.0
2025-02-26 18:20:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:34 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=2, previous=0, change=100.0
2025-02-26 18:20:34 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=2, previous=0, change=100.0
2025-02-26 18:20:34 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=16.5, previous=0.0, change=100.0
2025-02-26 18:20:34 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=50.0, previous=0.0, change=100.0
2025-02-26 18:20:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:34 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page metrics
2025-02-26 18:20:34 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 2091ms | Result: <200 OK OK,{todayVisitors=2, activeUsers=2, appDownloads=0, totalVisitors=2},[]>
2025-02-26 18:20:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:34 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:20:34 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3014ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-26, visitors=2}], bounceChange=100.0, totalVisitors=2, activeChange=100.0, avgSessionDuration=16.5, durationChange=100.0, visitorChange=100.0, activeUsers=2, bounceRate=50.0},[]>
2025-02-26 18:20:35 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:20:35 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3474ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-26, visitors=2}], bounceChange=100.0, totalVisitors=2, activeChange=100.0, avgSessionDuration=16.5, durationChange=100.0, visitorChange=100.0, activeUsers=2, bounceRate=50.0},[]>
2025-02-26 18:20:46 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:20:46 [http-nio-8080-exec-3] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:20:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:20:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:20:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:20:47 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page activity-heatmap
2025-02-26 18:20:47 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1145ms | Result: <200 OK OK,[{dayOfWeek=3, hour=18, count=2}],[]>
2025-02-26 18:20:59 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@21ea6d9a]]
2025-02-26 18:20:59 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 18:20:59 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 18:20:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:20:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:21:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:21:00 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:21:00 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 978ms | Result: admin/dashboard
2025-02-26 18:21:03 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:21:03 [http-nio-8080-exec-3] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:21:04 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:21:04 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:04 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:21:04.138810945, endDate: 2025-02-26T18:21:04.138810945
2025-02-26 18:21:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:21:04 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:21:04 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:21:04 [http-nio-8080-exec-3] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:04 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:21:04 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:21:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:21:04 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:21:04 [http-nio-8080-exec-6] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:04 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:21:04.345516780, endDate: 2025-02-26T18:21:04.345516780
2025-02-26 18:21:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:21:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:21:04 [http-nio-8080-exec-3] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:21:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:21:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:04 [http-nio-8080-exec-3] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:21:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:21:04 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:21:04 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:21:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:21:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:21:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:21:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:21:04 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:21:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:21:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:21:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:21:05 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:21:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:21:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:05 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page activity-heatmap
2025-02-26 18:21:05 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1154ms | Result: <200 OK OK,[{dayOfWeek=3, hour=18, count=2}],[]>
2025-02-26 18:21:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:21:05 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-26 18:21:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:05 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page activity-heatmap
2025-02-26 18:21:05 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1408ms | Result: <200 OK OK,[{dayOfWeek=3, hour=18, count=2}],[]>
2025-02-26 18:21:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:21:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:21:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:21:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:21:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:21:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:21:06 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page metrics
2025-02-26 18:21:06 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 2079ms | Result: <200 OK OK,{todayVisitors=2, activeUsers=2, appDownloads=0, totalVisitors=2},[]>
2025-02-26 18:21:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:21:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:21:06 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=2, previous=0, change=100.0
2025-02-26 18:21:06 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=2, previous=0, change=100.0
2025-02-26 18:21:06 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=32.5, previous=0.0, change=100.0
2025-02-26 18:21:06 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=50.0, previous=0.0, change=100.0
2025-02-26 18:21:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:21:06 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=2, previous=0, change=100.0
2025-02-26 18:21:06 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=2, previous=0, change=100.0
2025-02-26 18:21:06 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=32.5, previous=0.0, change=100.0
2025-02-26 18:21:06 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=50.0, previous=0.0, change=100.0
2025-02-26 18:21:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:21:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:21:06 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page metrics
2025-02-26 18:21:06 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 1893ms | Result: <200 OK OK,{todayVisitors=2, activeUsers=2, appDownloads=0, totalVisitors=2},[]>
2025-02-26 18:21:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:21:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:21:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:21:07 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:21:07 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2973ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-26, visitors=2}], bounceChange=100.0, totalVisitors=2, activeChange=100.0, avgSessionDuration=32.5, durationChange=100.0, visitorChange=100.0, activeUsers=2, bounceRate=50.0},[]>
2025-02-26 18:21:07 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:21:07 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3266ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-26, visitors=2}], bounceChange=100.0, totalVisitors=2, activeChange=100.0, avgSessionDuration=32.5, durationChange=100.0, visitorChange=100.0, activeUsers=2, bounceRate=50.0},[]>
2025-02-26 18:21:12 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [90]
2025-02-26 18:21:12 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:12 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 90, startDate: 2024-11-28T18:21:12.384510564, endDate: 2025-02-26T18:21:12.384510564
2025-02-26 18:21:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:21:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:21:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:21:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:21:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:21:14 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=2, previous=0, change=100.0
2025-02-26 18:21:14 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=2, previous=0, change=100.0
2025-02-26 18:21:14 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=33.5, previous=0.0, change=100.0
2025-02-26 18:21:14 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=50.0, previous=0.0, change=100.0
2025-02-26 18:21:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:21:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:21:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:21:15 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:21:15 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3195ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-26, visitors=2}], bounceChange=100.0, totalVisitors=2, activeChange=100.0, avgSessionDuration=33.5, durationChange=100.0, visitorChange=100.0, activeUsers=2, bounceRate=50.0},[]>
2025-02-26 18:21:21 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [7]
2025-02-26 18:21:21 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:21 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 7, startDate: 2025-02-19T18:21:21.702700134, endDate: 2025-02-26T18:21:21.702700134
2025-02-26 18:21:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:21:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:21:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-26 18:21:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:21:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:21:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:21:23 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=2, previous=0, change=100.0
2025-02-26 18:21:23 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=2, previous=0, change=100.0
2025-02-26 18:21:23 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=37.5, previous=0.0, change=100.0
2025-02-26 18:21:23 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=50.0, previous=0.0, change=100.0
2025-02-26 18:21:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:21:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:21:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:21:24 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:21:24 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3242ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-26, visitors=2}], bounceChange=100.0, totalVisitors=2, activeChange=100.0, avgSessionDuration=37.5, durationChange=100.0, visitorChange=100.0, activeUsers=2, bounceRate=50.0},[]>
2025-02-26 18:21:33 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [14]
2025-02-26 18:21:33 [http-nio-8080-exec-5] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:21:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:21:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:21:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:21:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:21:34 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page activity-heatmap
2025-02-26 18:21:34 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1187ms | Result: <200 OK OK,[{dayOfWeek=3, hour=18, count=2}],[]>
2025-02-26 18:23:28 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 18:23:28 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-26 18:23:29 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-26 18:23:31 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 378810 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-26 18:23:31 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-26 18:23:31 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-26 18:23:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-26 18:23:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 8 JPA repository interfaces.
2025-02-26 18:23:32 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 18:23:32 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-26 18:23:32 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-26 18:23:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-26 18:23:32 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-26 18:23:32 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-26 18:23:32 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-26 18:23:32 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1031 ms
2025-02-26 18:23:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-26 18:23:44 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: The connection attempt failed.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.api.configuration.ClassicConfiguration.getDatabaseType(ClassicConfiguration.java:1094)
	at org.flywaydb.core.internal.resource.ResourceNameValidator.isSpecialResourceFile(ResourceNameValidator.java:75)
	at org.flywaydb.core.internal.resource.ResourceNameValidator.validateSQLMigrationNaming(ResourceNameValidator.java:49)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:131)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:147)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at uz.pdp.ilmpay.IlmpayApplication.main(IlmpayApplication.java:13)
Caused by: java.net.SocketTimeoutException: Connect timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:546)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 37 common frames omitted
2025-02-26 18:23:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-26 18:23:46 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@400008bf
2025-02-26 18:23:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-26 18:23:47 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-26 18:23:51 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-26 18:23:51 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-26 18:23:51 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (6) !
2025-02-26 18:23:51 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-26 18:23:53 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-26 18:23:53 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-26 18:23:53 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-26 18:23:53 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-26 18:23:53 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-26 18:23:54 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-26 18:23:54 [main] DEBUG org.hibernate.SQL - 
    drop table if exists benefit_cards cascade
2025-02-26 18:23:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faq cascade
2025-02-26 18:23:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faqs cascade
2025-02-26 18:23:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists support_logos cascade
2025-02-26 18:23:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists testimonials cascade
2025-02-26 18:23:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-02-26 18:23:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists visitors cascade
2025-02-26 18:23:56 [main] DEBUG org.hibernate.SQL - 
    create table benefit_cards (
        active boolean not null,
        display_order integer check ((display_order<=4) and (display_order>=1)),
        created_at timestamp(6),
        id bigserial not null,
        description TEXT,
        icon_url varchar(255),
        title varchar(255),
        primary key (id)
    )
2025-02-26 18:23:56 [main] DEBUG org.hibernate.SQL - 
    create table faq (
        id bigserial not null,
        answer TEXT,
        category varchar(255),
        question varchar(255),
        primary key (id)
    )
2025-02-26 18:23:57 [main] DEBUG org.hibernate.SQL - 
    create table faqs (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        updated_at timestamp(6),
        answer TEXT not null,
        question varchar(255) not null,
        primary key (id)
    )
2025-02-26 18:23:57 [main] DEBUG org.hibernate.SQL - 
    create table support_logos (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        image_url varchar(255),
        name varchar(255),
        website_url varchar(255),
        primary key (id)
    )
2025-02-26 18:23:57 [main] DEBUG org.hibernate.SQL - 
    create table testimonials (
        display_order integer,
        is_active boolean,
        rating integer not null,
        created_at timestamp(6),
        id bigserial not null,
        comment varchar(1000) not null,
        avatar_url varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-02-26 18:23:57 [main] DEBUG org.hibernate.SQL - 
    create table users (
        is_active boolean,
        login_count integer,
        created_at timestamp(6),
        id bigserial not null,
        last_activity timestamp(6),
        last_login timestamp(6),
        email varchar(255) not null unique,
        full_name varchar(255),
        password varchar(255) not null,
        phone_number varchar(255),
        role varchar(255) check (role in ('USER','ADMIN')),
        source varchar(255),
        primary key (id)
    )
2025-02-26 18:23:58 [main] DEBUG org.hibernate.SQL - 
    create table visitors (
        bounced boolean not null,
        is_active boolean not null,
        is_downloaded boolean not null,
        page_visit_count integer not null,
        first_visit_time timestamp(6) not null,
        id bigserial not null,
        last_active_time timestamp(6) not null,
        session_duration bigint,
        ip_address varchar(255) not null,
        last_page_visited varchar(255),
        session_id varchar(255) not null,
        user_agent varchar(255),
        primary key (id)
    )
2025-02-26 18:23:58 [main] DEBUG org.hibernate.SQL - 
    create index idx_session_id 
       on visitors (session_id)
2025-02-26 18:23:58 [main] DEBUG org.hibernate.SQL - 
    create index idx_last_active 
       on visitors (last_active_time)
2025-02-26 18:23:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-26 18:23:59 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-26 18:24:00 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-26 18:24:00 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-26 18:24:00 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-26 18:24:00 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@957771f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e7b9365, org.springframework.security.web.context.SecurityContextHolderFilter@3c63d57e, org.springframework.security.web.header.HeaderWriterFilter@8fc8365, org.springframework.web.filter.CorsFilter@519565a5, org.springframework.security.web.authentication.logout.LogoutFilter@22f04ab3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4d61d93a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@72211dc8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@47987ab2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@419ffde3, org.springframework.security.web.access.ExceptionTranslationFilter@6b475c1e, org.springframework.security.web.access.intercept.AuthorizationFilter@71f9c7b]
2025-02-26 18:24:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-26 18:24:01 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 29.755 seconds (process running for 30.044)
2025-02-26 18:24:01 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-26 18:24:01 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-26 18:24:01 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-26 18:24:09 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@432ced58]]
2025-02-26 18:24:09 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 18:24:09 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-26 18:24:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-26 18:24:09 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-26 18:24:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-26 18:24:10 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-26 18:24:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-26 18:24:10 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-26 18:24:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-26 18:24:11 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 18:24:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:24:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-26 18:24:11 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:24:11 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 2647ms | Result: admin/dashboard
2025-02-26 18:24:16 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:24:16 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:16 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:24:16.003605031, endDate: 2025-02-26T18:24:16.003605031
2025-02-26 18:24:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:24:16 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:24:16 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:24:16 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:24:16 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:24:16 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:24:16 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:24:16 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:24:16 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:16 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:24:16.230662820, endDate: 2025-02-26T18:24:16.230662820
2025-02-26 18:24:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:24:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:16 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:24:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:24:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:24:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:16 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:24:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:24:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:24:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-26 18:24:16 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0
2025-02-26 18:24:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:24:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:24:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-26 18:24:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-26 18:24:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-26 18:24:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time>?
2025-02-26 18:24:17 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page activity-heatmap
2025-02-26 18:24:17 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1179ms | Result: <200 OK OK,[{dayOfWeek=3, hour=18, count=1}],[]>
2025-02-26 18:24:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:17 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Active users count: 1 (threshold: 15 minutes)
2025-02-26 18:24:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:24:17 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page activity-heatmap
2025-02-26 18:24:17 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1429ms | Result: <200 OK OK,[{dayOfWeek=3, hour=18, count=1}],[]>
2025-02-26 18:24:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:24:17 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:24:17 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:24:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:24:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:24:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:24:18 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:24:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:24:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:24:18 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-26 18:24:18 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:24:18 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=5.0, previous=0.0, change=100.0
2025-02-26 18:24:18 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:24:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:24:18 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:24:18 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-26 18:24:18 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-26 18:24:18 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=5.0, previous=0.0, change=100.0
2025-02-26 18:24:18 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:24:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:24:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:24:18 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0
2025-02-26 18:24:18 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page metrics
2025-02-26 18:24:18 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 2359ms | Result: <200 OK OK,{todayVisitors=1, totalVisitors=1, appDownloads=0, activeUsers=1},[]>
2025-02-26 18:24:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:24:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:24:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:24:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time>?
2025-02-26 18:24:19 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:24:19 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3096ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-26, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=0.0, avgSessionDuration=5.0, durationChange=100.0, visitorChange=100.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:24:19 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Active users count: 1 (threshold: 15 minutes)
2025-02-26 18:24:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:24:19 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:24:19 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3122ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-26, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=0.0, avgSessionDuration=5.0, durationChange=100.0, visitorChange=100.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-26 18:24:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:24:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:24:20 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page metrics
2025-02-26 18:24:20 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 2376ms | Result: <200 OK OK,{todayVisitors=1, totalVisitors=1, appDownloads=0, activeUsers=1},[]>
2025-02-26 18:24:30 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@3d52420c]]
2025-02-26 18:24:30 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-26 18:24:30 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-26 18:24:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:24:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:24:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:24:31 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:24:31 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 942ms | Result: admin/dashboard
2025-02-26 18:24:34 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:24:34 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:24:34 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:24:34 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:24:34 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:24:34 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-26 18:24:34 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:24:34 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:34 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:34 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:24:34.885467607, endDate: 2025-02-26T18:24:34.885467607
2025-02-26 18:24:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-26 18:24:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:24:35 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-26 18:24:35 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:35 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-27T18:24:35.038478698, endDate: 2025-02-26T18:24:35.038478698
2025-02-26 18:24:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-26 18:24:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:24:35 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:24:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:24:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:35 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-26 18:24:35 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-26 18:24:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:24:35 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0
2025-02-26 18:24:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:24:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:35 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-26 18:24:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:24:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-26 18:24:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:24:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-26 18:24:35 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-26 18:24:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-26 18:24:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time>?
2025-02-26 18:24:35 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-26 18:24:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-26 18:24:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0
2025-02-26 18:24:36 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page activity-heatmap
2025-02-26 18:24:36 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1161ms | Result: <200 OK OK,[{dayOfWeek=3, hour=18, count=1}],[]>
2025-02-26 18:24:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:36 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Active users count: 1 (threshold: 15 minutes)
2025-02-26 18:24:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:24:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:24:36 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page activity-heatmap
2025-02-26 18:24:36 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1382ms | Result: <200 OK OK,[{dayOfWeek=3, hour=18, count=1}],[]>
2025-02-26 18:24:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time>?
2025-02-26 18:24:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-26 18:24:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:24:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:24:36 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Active users count: 1 (threshold: 15 minutes)
2025-02-26 18:24:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:24:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:24:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:24:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:24:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-26 18:24:36 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page metrics
2025-02-26 18:24:36 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 2321ms | Result: <200 OK OK,{todayVisitors=1, totalVisitors=1, appDownloads=0, activeUsers=1},[]>
2025-02-26 18:24:36 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-26 18:24:36 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-26 18:24:36 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=23.0, previous=0.0, change=100.0
2025-02-26 18:24:36 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:24:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:24:37 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-26 18:24:37 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-26 18:24:37 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=23.0, previous=0.0, change=100.0
2025-02-26 18:24:37 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-26 18:24:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-26 18:24:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:24:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:24:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-26 18:24:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:24:37 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page metrics
2025-02-26 18:24:37 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 2310ms | Result: <200 OK OK,{todayVisitors=1, totalVisitors=1, appDownloads=0, activeUsers=1},[]>
2025-02-26 18:24:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-26 18:24:37 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:24:37 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3041ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-26, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=23.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-26 18:24:38 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 93bec662-ddca-45b0-aa6e-dac71b6f9a4c on page dashboard
2025-02-26 18:24:38 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3118ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-26, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=23.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-28 19:42:09 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 43661 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-28 19:42:09 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-28 19:42:09 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-28 19:42:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-28 19:42:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 8 JPA repository interfaces.
2025-02-28 19:42:09 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-28 19:42:09 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-28 19:42:09 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-28 19:42:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-28 19:42:10 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-28 19:42:10 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-28 19:42:10 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-28 19:42:10 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1143 ms
2025-02-28 19:42:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-28 19:42:13 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@b842275
2025-02-28 19:42:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-28 19:42:13 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-02-28 19:42:18 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-02-28 19:42:18 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-28 19:42:18 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (6) !
2025-02-28 19:42:18 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-28 19:42:19 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-28 19:42:19 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-28 19:42:19 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-28 19:42:20 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-28 19:42:20 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-28 19:42:21 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-28 19:42:22 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-28 19:42:22 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-28 19:42:23 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-28 19:42:24 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-28 19:42:24 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-02-28 19:42:24 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7d6ac487, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a9d5a73, org.springframework.security.web.context.SecurityContextHolderFilter@422d1d69, org.springframework.security.web.header.HeaderWriterFilter@79fc5423, org.springframework.web.filter.CorsFilter@3a05ba57, org.springframework.security.web.authentication.logout.LogoutFilter@72211dc8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@765cfcbd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7fca1531, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a4c9b33, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5773269, org.springframework.security.web.access.ExceptionTranslationFilter@43c6f461, org.springframework.security.web.access.intercept.AuthorizationFilter@22f04ab3]
2025-02-28 19:42:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-28 19:42:25 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 16.265 seconds (process running for 16.615)
2025-02-28 19:42:25 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-28 19:42:25 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-28 19:42:25 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-28 19:42:30 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-28 19:42:30 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-28 19:42:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-28 19:42:30 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-28 19:42:31 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 0 support logos for homepage
2025-02-28 19:42:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-28 19:42:31 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 0 benefits for homepage
2025-02-28 19:42:31 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-28 19:42:31 [http-nio-8080-exec-1] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-28 19:42:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-28 19:42:31 [http-nio-8080-exec-1] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-28 19:42:31 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 0 testimonials for homepage
2025-02-28 19:42:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-28 19:42:32 [http-nio-8080-exec-1] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 0 FAQs for homepage
2025-02-28 19:42:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:42:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-28 19:42:33 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session 7e2e349a-6627-4937-b295-b84ec6bf263c on page 
2025-02-28 19:42:33 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 2938ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[], benefits=[], testimonials=[], faqs=[]}]
2025-02-28 19:42:43 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/login | Class: uz.pdp.ilmpay.Controller.AdminController | Method: login | Args: []
2025-02-28 19:42:43 [http-nio-8080-exec-6] INFO  u.p.i.Controller.AdminController - 🔑 Admin login page requested
2025-02-28 19:42:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:42:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:42:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:42:44 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 7e2e349a-6627-4937-b295-b84ec6bf263c on page login
2025-02-28 19:42:44 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/login | Time: 943ms | Result: admin/login
2025-02-28 19:42:50 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.savedrequest.SavedRequestAwareWrapper@4406f9c5]]
2025-02-28 19:42:50 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-28 19:42:50 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-28 19:42:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:42:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-28 19:42:51 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session 4a621224-8507-4755-9fc7-a82fc0e7af1e on page dashboard
2025-02-28 19:42:51 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 689ms | Result: admin/dashboard
2025-02-28 19:42:53 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-28 19:42:53 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:42:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-28 19:42:53 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-28 19:42:53 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:42:53 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-29T19:42:53.422992381, endDate: 2025-02-28T19:42:53.422992381
2025-02-28 19:42:53 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-28 19:42:53 [http-nio-8080-exec-3] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:42:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-28 19:42:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-28 19:42:53 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:42:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-28 19:42:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:42:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:42:53 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:42:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-28 19:42:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:42:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:42:54 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:42:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0
2025-02-28 19:42:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:42:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-28 19:42:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-28 19:42:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:42:54 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 4a621224-8507-4755-9fc7-a82fc0e7af1e on page activity-heatmap
2025-02-28 19:42:54 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1224ms | Result: <200 OK OK,[{dayOfWeek=5, hour=10, count=2}, {dayOfWeek=4, hour=16, count=1}, {dayOfWeek=4, hour=17, count=1}, {dayOfWeek=4, hour=18, count=1}, {dayOfWeek=5, hour=19, count=2}],[]>
2025-02-28 19:42:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:42:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:42:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:42:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-28 19:42:55 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Marked session as inactive: 993e96dc-273f-433e-8521-a0324c7c633f (duration: 0 seconds)
2025-02-28 19:42:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time>?
2025-02-28 19:42:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-28 19:42:55 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Active users count: 2 (threshold: 15 minutes)
2025-02-28 19:42:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:42:55 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=7, previous=0, change=100.0
2025-02-28 19:42:55 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-28 19:42:55 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=6.857142857142857, previous=0.0, change=100.0
2025-02-28 19:42:55 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=42.857142857142854, previous=0.0, change=100.0
2025-02-28 19:42:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:42:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:42:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:42:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:42:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:42:56 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-28 19:42:56 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:42:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-28 19:42:56 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 4a621224-8507-4755-9fc7-a82fc0e7af1e on page metrics
2025-02-28 19:42:56 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 3058ms | Result: <200 OK OK,{todayVisitors=4, activeUsers=2, appDownloads=0, totalVisitors=7},[]>
2025-02-28 19:42:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:42:56 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 4a621224-8507-4755-9fc7-a82fc0e7af1e on page dashboard
2025-02-28 19:42:56 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3266ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-27, visitors=3}, {date=2025-02-28, visitors=4}], bounceChange=100.0, totalVisitors=7, activeChange=100.0, avgSessionDuration=6.857142857142857, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=42.857142857142854},[]>
2025-02-28 19:42:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:42:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:42:57 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 4a621224-8507-4755-9fc7-a82fc0e7af1e on page activity-heatmap
2025-02-28 19:42:57 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1161ms | Result: <200 OK OK,[{dayOfWeek=5, hour=10, count=2}, {dayOfWeek=4, hour=16, count=1}, {dayOfWeek=4, hour=17, count=1}, {dayOfWeek=4, hour=18, count=1}, {dayOfWeek=5, hour=19, count=2}],[]>
2025-02-28 19:42:57 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-28 19:42:57 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:42:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-28 19:42:58 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:42:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-28 19:42:58 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-28 19:42:58 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:42:58 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-29T19:42:58.095700438, endDate: 2025-02-28T19:42:58.095700438
2025-02-28 19:42:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-28 19:42:58 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:42:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-28 19:42:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:42:58 [http-nio-8080-exec-1] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:42:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0
2025-02-28 19:42:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:42:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-28 19:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time>?
2025-02-28 19:42:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-28 19:42:59 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Active users count: 2 (threshold: 15 minutes)
2025-02-28 19:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:42:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:42:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:42:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:42:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-28 19:42:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-28 19:43:00 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 4a621224-8507-4755-9fc7-a82fc0e7af1e on page metrics
2025-02-28 19:43:00 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 2340ms | Result: <200 OK OK,{todayVisitors=4, activeUsers=2, appDownloads=0, totalVisitors=7},[]>
2025-02-28 19:43:00 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=7, previous=0, change=100.0
2025-02-28 19:43:00 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=2, previous=0, change=100.0
2025-02-28 19:43:00 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=7.142857142857143, previous=0.0, change=100.0
2025-02-28 19:43:00 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=42.857142857142854, previous=0.0, change=100.0
2025-02-28 19:43:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:43:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:43:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:43:01 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 4a621224-8507-4755-9fc7-a82fc0e7af1e on page dashboard
2025-02-28 19:43:01 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3080ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-27, visitors=3}, {date=2025-02-28, visitors=4}], bounceChange=100.0, totalVisitors=7, activeChange=100.0, avgSessionDuration=7.142857142857143, durationChange=100.0, visitorChange=100.0, activeUsers=2, bounceRate=42.857142857142854},[]>
2025-02-28 19:43:27 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@3d7f3fed]]
2025-02-28 19:43:27 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-28 19:43:27 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-28 19:43:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:43:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:43:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:43:28 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 4a621224-8507-4755-9fc7-a82fc0e7af1e on page dashboard
2025-02-28 19:43:28 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 913ms | Result: admin/dashboard
2025-02-28 19:43:29 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-28 19:43:29 [http-nio-8080-exec-5] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:43:29 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-29T19:43:29.945848194, endDate: 2025-02-28T19:43:29.945848194
2025-02-28 19:43:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-28 19:43:30 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-28 19:43:30 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:43:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-28 19:43:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:43:30 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-28 19:43:30 [http-nio-8080-exec-4] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:43:30 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-28 19:43:30 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:43:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-28 19:43:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-02-28 19:43:30 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-02-28 19:43:30 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-02-28 19:43:30 [http-nio-8080-exec-3] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:43:30 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:43:30 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-29T19:43:30.185029895, endDate: 2025-02-28T19:43:30.185029895
2025-02-28 19:43:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-28 19:43:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-28 19:43:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:43:30 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:43:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-28 19:43:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:43:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:43:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:43:30 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:43:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-28 19:43:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-28 19:43:30 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:43:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-28 19:43:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:43:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:43:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:43:30 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:43:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-28 19:43:30 [http-nio-8080-exec-9] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:43:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-28 19:43:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0
2025-02-28 19:43:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:43:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:43:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-28 19:43:30 [http-nio-8080-exec-10] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-02-28 19:43:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0
2025-02-28 19:43:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:43:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-02-28 19:43:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:43:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time>?
2025-02-28 19:43:31 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 4a621224-8507-4755-9fc7-a82fc0e7af1e on page activity-heatmap
2025-02-28 19:43:31 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1150ms | Result: <200 OK OK,[{dayOfWeek=5, hour=10, count=2}, {dayOfWeek=4, hour=16, count=1}, {dayOfWeek=4, hour=17, count=1}, {dayOfWeek=4, hour=18, count=1}, {dayOfWeek=5, hour=19, count=2}],[]>
2025-02-28 19:43:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:43:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time>?
2025-02-28 19:43:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-28 19:43:31 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 4a621224-8507-4755-9fc7-a82fc0e7af1e on page activity-heatmap
2025-02-28 19:43:31 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 1376ms | Result: <200 OK OK,[{dayOfWeek=5, hour=10, count=2}, {dayOfWeek=4, hour=16, count=1}, {dayOfWeek=4, hour=17, count=1}, {dayOfWeek=4, hour=18, count=1}, {dayOfWeek=5, hour=19, count=2}],[]>
2025-02-28 19:43:31 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Active users count: 2 (threshold: 15 minutes)
2025-02-28 19:43:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:43:31 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Active users count: 2 (threshold: 15 minutes)
2025-02-28 19:43:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:43:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-28 19:43:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-28 19:43:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:43:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:43:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-28 19:43:32 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=7, previous=0, change=100.0
2025-02-28 19:43:32 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=2, previous=0, change=100.0
2025-02-28 19:43:32 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=11.571428571428571, previous=0.0, change=100.0
2025-02-28 19:43:32 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=42.857142857142854, previous=0.0, change=100.0
2025-02-28 19:43:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:43:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:43:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:43:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-28 19:43:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:43:32 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=7, previous=0, change=100.0
2025-02-28 19:43:32 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=2, previous=0, change=100.0
2025-02-28 19:43:32 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=12.0, previous=0.0, change=100.0
2025-02-28 19:43:32 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=42.857142857142854, previous=0.0, change=100.0
2025-02-28 19:43:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-28 19:43:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:43:32 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 4a621224-8507-4755-9fc7-a82fc0e7af1e on page metrics
2025-02-28 19:43:32 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 2304ms | Result: <200 OK OK,{todayVisitors=4, activeUsers=2, appDownloads=0, totalVisitors=7},[]>
2025-02-28 19:43:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-28 19:43:32 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 4a621224-8507-4755-9fc7-a82fc0e7af1e on page metrics
2025-02-28 19:43:32 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 2525ms | Result: <200 OK OK,{todayVisitors=4, activeUsers=2, appDownloads=0, totalVisitors=7},[]>
2025-02-28 19:43:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-28 19:43:32 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 4a621224-8507-4755-9fc7-a82fc0e7af1e on page dashboard
2025-02-28 19:43:32 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2987ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-27, visitors=3}, {date=2025-02-28, visitors=4}], bounceChange=100.0, totalVisitors=7, activeChange=100.0, avgSessionDuration=11.571428571428571, durationChange=100.0, visitorChange=100.0, activeUsers=2, bounceRate=42.857142857142854},[]>
2025-02-28 19:43:33 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 4a621224-8507-4755-9fc7-a82fc0e7af1e on page dashboard
2025-02-28 19:43:33 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 3029ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-27, visitors=3}, {date=2025-02-28, visitors=4}], bounceChange=100.0, totalVisitors=7, activeChange=100.0, avgSessionDuration=12.0, durationChange=100.0, visitorChange=100.0, activeUsers=2, bounceRate=42.857142857142854},[]>
2025-03-01 17:00:18 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 447960 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-03-01 17:00:18 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-03-01 17:00:18 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-03-01 17:00:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-01 17:00:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 8 JPA repository interfaces.
2025-03-01 17:00:19 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-03-01 17:00:19 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-03-01 17:00:19 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-03-01 17:00:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-03-01 17:00:20 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-01 17:00:20 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-03-01 17:00:20 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-01 17:00:20 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1578 ms
2025-03-01 17:00:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-01 17:00:23 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@11c25846
2025-03-01 17:00:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-01 17:00:23 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
2025-03-01 17:00:28 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 13
2025-03-01 17:00:28 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-03-01 17:00:28 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (13) that is newer than the latest available migration (6) !
2025-03-01 17:00:28 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-03-01 17:00:29 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-01 17:00:29 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-03-01 17:00:29 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-01 17:00:30 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-01 17:00:30 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-01 17:00:31 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-01 17:00:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-01 17:00:32 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-03-01 17:00:34 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-03-01 17:00:34 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-03-01 17:00:34 [main] DEBUG uz.pdp.ilmpay.Config.SecurityConfig - 🔐 Configuring security rules...
2025-03-01 17:00:34 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@28b0eae9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58a7aeca, org.springframework.security.web.context.SecurityContextHolderFilter@4b288c86, org.springframework.security.web.header.HeaderWriterFilter@2c1aa907, org.springframework.web.filter.CorsFilter@4a192cc6, org.springframework.security.web.authentication.logout.LogoutFilter@71c523c6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@370efa14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53d458db, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@390a13f2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68a7ea1e, org.springframework.security.web.access.ExceptionTranslationFilter@4808c603, org.springframework.security.web.access.intercept.AuthorizationFilter@25639962]
2025-03-01 17:00:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-03-01 17:00:35 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 16.858 seconds (process running for 17.298)
2025-03-01 17:00:35 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-01 17:00:35 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-03-01 17:00:35 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-03-01 17:00:37 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6154c5e8]]
2025-03-01 17:00:37 [http-nio-8080-exec-1] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-03-01 17:00:37 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-03-01 17:00:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-03-01 17:00:37 [http-nio-8080-exec-1] INFO  u.p.i.service.SupportLogoService - ✨ Found 2 active support logos
2025-03-01 17:00:37 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-03-01 17:00:37 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-03-01 17:00:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-03-01 17:00:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-03-01 17:00:38 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - ✨ Found 2 active support logos
2025-03-01 17:00:38 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 2 support logos for homepage
2025-03-01 17:00:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-03-01 17:00:38 [http-nio-8080-exec-1] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Behuz To`lqinov -> Behuz To`lqinov
2025-03-01 17:00:38 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Behuz To`lqinov -> Behuz Toʻlqinov
2025-03-01 17:00:39 [http-nio-8080-exec-1] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: The best developer created this site -> Eng yaxshi dasturchi ushbu saytni yaratdi
2025-03-01 17:00:39 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: The best developer created this site -> Eng yaxshi dasturchi ushbu saytni yaratdi
2025-03-01 17:00:39 [http-nio-8080-exec-1] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-03-01 17:00:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-03-01 17:00:39 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 1 benefits for homepage
2025-03-01 17:00:39 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Behuz Toʻlqinov (Order: 1)
2025-03-01 17:00:39 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-03-01 17:00:39 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-03-01 17:00:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-03-01 17:00:39 [http-nio-8080-exec-1] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Behruz -> Behruz
2025-03-01 17:00:39 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Behruz -> Behruz
2025-03-01 17:00:39 [http-nio-8080-exec-1] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: The best developer -> Eng yaxshi dasturchi
2025-03-01 17:00:39 [http-nio-8080-exec-1] INFO  u.p.i.service.TestimonialService - ✨ Found 1 active testimonials
2025-03-01 17:00:39 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: The best developer -> Eng yaxshi dasturchi
2025-03-01 17:00:39 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 1 active testimonials
2025-03-01 17:00:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-03-01 17:00:40 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 1 testimonials for homepage
2025-03-01 17:00:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-03-01 17:00:40 [http-nio-8080-exec-1] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Here was the best developer -> Bu erda eng yaxshi dasturchi edi
2025-03-01 17:00:40 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: Here was the best developer -> Bu erda eng yaxshi dasturchi edi
2025-03-01 17:00:40 [http-nio-8080-exec-1] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: signed by BT -> BT tomonidan imzolangan
2025-03-01 17:00:40 [http-nio-8080-exec-2] DEBUG u.p.i.service.TranslationService - 🔄 Translated text from en to uz: signed by BT -> BT tomonidan imzolangan
2025-03-01 17:00:40 [http-nio-8080-exec-1] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-03-01 17:00:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-03-01 17:00:40 [http-nio-8080-exec-2] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 1 FAQs for homepage
2025-03-01 17:00:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-03-01 17:00:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-03-01 17:00:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-03-01 17:00:41 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 28de474a-6d7d-4820-ba1b-1a562d2ffd9d on page dashboard
2025-03-01 17:00:41 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 4083ms | Result: admin/dashboard
2025-03-01 17:00:41 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 28de474a-6d7d-4820-ba1b-1a562d2ffd9d on page 
2025-03-01 17:00:41 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 3975ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[SupportLogoDTO(id=2, name=Google, imageUrl=https://ilmpay.s3.eu-north-1.amazonaws.com/support-logos/9873591b-ccfa-4a90-bbe8-d5dc88052ed3.svg, imageFile=null, websiteUrl=https://www.google.com/, active=true, displayOrder=1), SupportLogoDTO(id=1, name=Asana, imageUrl=https://ilmpay.s3.eu-north-1.amazonaws.com/support-logos/849c5cd1-d969-45cf-a85d-82ed3b05103c.svg, imageFile=null, websiteUrl=https://asana.com/, active=true, displayOrder=2)], benefits=[BenefitCardDTO(id=1, title=Behuz Toʻlqinov, description=Eng yaxshi dasturchi ushbu saytni yaratdi, displayOrder=1, active=true)], testimonials=[TestimonialDTO(id=1, name=Behruz, comment=Eng yaxshi dasturchi, rating=5, imageFile=null, avatarUrl=null, order=null, isActive=true)], faqs=[FaqDTO(id=1, question=Bu erda eng yaxshi dasturchi edi, answer=BT tomonidan imzolangan, displayOrder=0, active=true, createdAt=2025-02-28T19:44:22.749627, updatedAt=null)]}]
2025-03-01 17:00:43 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-03-01 17:00:43 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-03-01 17:00:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-03-01 17:00:43 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-03-01 17:00:43 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-03-01 17:00:43 [http-nio-8080-exec-6] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-03-01 17:00:43 [http-nio-8080-exec-5] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-03-01 17:00:43 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-30T17:00:43.472556896, endDate: 2025-03-01T17:00:43.472556896
2025-03-01 17:00:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-03-01 17:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-03-01 17:00:43 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-03-01 17:00:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-03-01 17:00:43 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/dashboard | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getDashboardStats | Args: [30]
2025-03-01 17:00:43 [http-nio-8080-exec-8] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-03-01 17:00:43 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-30T17:00:43.705521832, endDate: 2025-03-01T17:00:43.705521832
2025-03-01 17:00:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-03-01 17:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-03-01 17:00:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-03-01 17:00:43 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-03-01 17:00:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-03-01 17:00:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-03-01 17:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-03-01 17:00:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-03-01 17:00:44 [http-nio-8080-exec-7] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-03-01 17:00:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0
2025-03-01 17:00:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-03-01 17:00:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-03-01 17:00:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-03-01 17:00:44 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 28de474a-6d7d-4820-ba1b-1a562d2ffd9d on page activity-heatmap
2025-03-01 17:00:44 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 957ms | Result: <200 OK OK,[{dayOfWeek=5, hour=10, count=2}, {dayOfWeek=6, hour=11, count=4}, {dayOfWeek=5, hour=15, count=2}, {dayOfWeek=6, hour=15, count=2}, {dayOfWeek=4, hour=16, count=1}, {dayOfWeek=6, hour=16, count=6}, {dayOfWeek=4, hour=17, count=1}, {dayOfWeek=4, hour=18, count=1}, {dayOfWeek=5, hour=19, count=2}],[]>
2025-03-01 17:00:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-03-01 17:00:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-03-01 17:00:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time between ? and ? 
        and v1_0.session_duration is not null 
        and v1_0.is_active=true
2025-03-01 17:00:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-03-01 17:00:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-03-01 17:00:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-03-01 17:00:45 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Marked session as inactive: 4ddc2294-d979-4d5d-9c22-35411a30c4c9 (duration: 904 seconds)
2025-03-01 17:00:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time>?
2025-03-01 17:00:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-03-01 17:00:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-03-01 17:00:45 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Active users count: 5 (threshold: 15 minutes)
2025-03-01 17:00:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-03-01 17:00:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-03-01 17:00:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-03-01 17:00:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-03-01 17:00:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-03-01 17:00:45 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=21, previous=0, change=100.0
2025-03-01 17:00:45 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=5, previous=0, change=100.0
2025-03-01 17:00:45 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=226.71428571428572, previous=0.0, change=100.0
2025-03-01 17:00:45 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=38.095238095238095, previous=0.0, change=100.0
2025-03-01 17:00:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-03-01 17:00:45 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=21, previous=0, change=100.0
2025-03-01 17:00:45 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=4, previous=0, change=100.0
2025-03-01 17:00:45 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=226.71428571428572, previous=0.0, change=100.0
2025-03-01 17:00:45 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=38.095238095238095, previous=0.0, change=100.0
2025-03-01 17:00:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-03-01 17:00:45 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/metrics | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getBasicMetrics | Args: []
2025-03-01 17:00:45 [http-nio-8080-exec-3] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-03-01 17:00:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-03-01 17:00:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-03-01 17:00:46 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 28de474a-6d7d-4820-ba1b-1a562d2ffd9d on page metrics
2025-03-01 17:00:46 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 2548ms | Result: <200 OK OK,{todayVisitors=12, totalVisitors=21, appDownloads=0, activeUsers=5},[]>
2025-03-01 17:00:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-03-01 17:00:46 [http-nio-8080-exec-3] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-03-01 17:00:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-03-01 17:00:46 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-03-01 17:00:46 [http-nio-8080-exec-2] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-03-01 17:00:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        CAST(EXTRACT(HOUR FROM first_visit_time) AS INTEGER) as hour,
        CAST(EXTRACT(DOW FROM first_visit_time) AS INTEGER) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time) 
    ORDER BY
        hour,
        day_of_week
2025-03-01 17:00:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-03-01 17:00:46 [http-nio-8080-exec-3] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-03-01 17:00:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-03-01 17:00:46 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 28de474a-6d7d-4820-ba1b-1a562d2ffd9d on page dashboard
2025-03-01 17:00:46 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2807ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-27, visitors=3}, {date=2025-02-28, visitors=6}, {date=2025-03-01, visitors=12}], bounceChange=100.0, totalVisitors=21, activeChange=100.0, avgSessionDuration=226.71428571428572, durationChange=100.0, visitorChange=100.0, activeUsers=5, bounceRate=38.095238095238095},[]>
2025-03-01 17:00:46 [http-nio-8080-exec-3] DEBUG u.pdp.ilmpay.service.VisitorService - Stats calculation requested - access control handled by security annotations
2025-03-01 17:00:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0
2025-03-01 17:00:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-03-01 17:00:46 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 28de474a-6d7d-4820-ba1b-1a562d2ffd9d on page dashboard
2025-03-01 17:00:46 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/dashboard | Time: 2819ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-27, visitors=3}, {date=2025-02-28, visitors=6}, {date=2025-03-01, visitors=12}], bounceChange=100.0, totalVisitors=21, activeChange=100.0, avgSessionDuration=226.71428571428572, durationChange=100.0, visitorChange=100.0, activeUsers=4, bounceRate=38.095238095238095},[]>
2025-03-01 17:00:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.last_active_time>?
2025-03-01 17:00:46 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 28de474a-6d7d-4820-ba1b-1a562d2ffd9d on page activity-heatmap
2025-03-01 17:00:46 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 925ms | Result: <200 OK OK,[{dayOfWeek=5, hour=10, count=2}, {dayOfWeek=6, hour=11, count=4}, {dayOfWeek=5, hour=15, count=2}, {dayOfWeek=6, hour=15, count=2}, {dayOfWeek=4, hour=16, count=1}, {dayOfWeek=6, hour=16, count=6}, {dayOfWeek=4, hour=17, count=1}, {dayOfWeek=4, hour=18, count=1}, {dayOfWeek=5, hour=19, count=2}],[]>
2025-03-01 17:00:47 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Active users count: 5 (threshold: 15 minutes)
2025-03-01 17:00:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-03-01 17:00:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-03-01 17:00:47 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session 28de474a-6d7d-4820-ba1b-1a562d2ffd9d on page metrics
2025-03-01 17:00:47 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/metrics | Time: 2075ms | Result: <200 OK OK,{todayVisitors=12, totalVisitors=21, appDownloads=0, activeUsers=5},[]>
2025-03-01 17:00:53 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-01 17:00:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-01 17:00:54 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-01 17:00:55 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 451451 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-03-01 17:00:55 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-03-01 17:00:55 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-03-01 17:00:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-01 17:00:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 8 JPA repository interfaces.
2025-03-01 17:00:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-03-01 17:00:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-03-01 17:00:56 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-03-01 17:00:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-03-01 17:00:56 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-01 17:00:56 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-03-01 17:00:56 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-01 17:00:56 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1082 ms
2025-03-01 17:00:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-01 17:00:59 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7e2a76be
2025-03-01 17:00:59 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-01 17:01:00 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://viaduct.proxy.rlwy.net:13686/railway (PostgreSQL 16.4)
