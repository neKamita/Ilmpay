2025-02-19 14:54:14 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 1589742 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-19 14:54:14 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-19 14:54:14 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-19 14:54:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-19 14:54:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 9 JPA repository interfaces.
2025-02-19 14:54:15 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 14:54:15 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 14:54:15 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-19 14:54:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-19 14:54:15 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-19 14:54:15 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-19 14:54:15 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-19 14:54:15 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1050 ms
2025-02-19 14:54:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-19 14:54:16 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@f44d033
2025-02-19 14:54:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-19 14:54:16 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5432/ilmpay (PostgreSQL 17.2)
2025-02-19 14:54:16 [main] WARN  o.f.c.i.database.base.Database - Flyway upgrade recommended: PostgreSQL 17.2 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 16.
2025-02-19 14:54:16 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 8
2025-02-19 14:54:16 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-19 14:54:16 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (8) that is newer than the latest available migration (0) !
2025-02-19 14:54:16 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-19 14:54:16 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-19 14:54:16 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-19 14:54:16 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-19 14:54:16 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-19 14:54:16 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-19 14:54:16 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-19 14:54:16 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-19 14:54:17 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-19 14:54:18 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-19 14:54:18 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-19 14:54:18 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@43b36393, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b23d138, org.springframework.security.web.context.SecurityContextHolderFilter@e01664e, org.springframework.security.web.header.HeaderWriterFilter@58ef8069, org.springframework.web.filter.CorsFilter@5668ad01, org.springframework.security.web.authentication.logout.LogoutFilter@542024ac, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@35ebd21a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@63d0920a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@25f92ffd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c4dd92e, org.springframework.security.web.access.ExceptionTranslationFilter@7bd203ce, org.springframework.security.web.access.intercept.AuthorizationFilter@69f3968d]
2025-02-19 14:54:19 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-19 14:54:19 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 4.704 seconds (process running for 5.062)
2025-02-19 14:54:19 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-19 14:54:19 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-19 14:54:19 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-19 14:55:07 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler processing failed: java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'] with root cause
java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'
	at io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.doResolveHandlerMethodException(HtmxExceptionHandlerExceptionResolver.java:31)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-19 14:55:07 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler processing failed: java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'] with root cause
java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'
	at io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.doResolveHandlerMethodException(HtmxExceptionHandlerExceptionResolver.java:31)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-19 14:55:09 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET / | Class: uz.pdp.ilmpay.Controller.HomeController | Method: home | Args: []
2025-02-19 14:55:09 [http-nio-8080-exec-3] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 14:55:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 14:55:09 [http-nio-8080-exec-3] INFO  u.p.i.service.SupportLogoService - ✨ Found 1 active support logos
2025-02-19 14:55:09 [http-nio-8080-exec-3] INFO  u.p.ilmpay.Controller.HomeController - 🤝 Found 1 support logos for homepage
2025-02-19 14:55:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 14:55:09 [http-nio-8080-exec-3] INFO  u.p.ilmpay.Controller.HomeController - 🎁 Found 1 benefits for homepage
2025-02-19 14:55:09 [http-nio-8080-exec-3] INFO  u.p.ilmpay.Controller.HomeController - Benefit: Hello (Order: 1)
2025-02-19 14:55:09 [http-nio-8080-exec-3] INFO  u.p.ilmpay.Controller.HomeController - 🔍 Fetching all active testimonials
2025-02-19 14:55:09 [http-nio-8080-exec-3] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 14:55:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 14:55:09 [http-nio-8080-exec-3] INFO  u.p.i.service.TestimonialService - ✨ Found 1 active testimonials
2025-02-19 14:55:09 [http-nio-8080-exec-3] INFO  u.p.ilmpay.Controller.HomeController - 🎭 Found 1 testimonials for homepage
2025-02-19 14:55:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 14:55:09 [http-nio-8080-exec-3] INFO  u.p.ilmpay.Controller.HomeController - 🤔 Found 1 FAQs for homepage
2025-02-19 14:55:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:55:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:55:09 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET / | Time: 141ms | Result: ModelAndView [view="index"; model={currentPage=home, supportLogos=[SupportLogoDTO(id=1, name=Google, imageUrl=https://ilmpay.s3.eu-north-1.amazonaws.com/support-logos/12bef3af-54b1-4a12-bb01-b67869f7f65c.svg, imageFile=null, websiteUrl=https://www.google.com/, active=true, displayOrder=1)], benefits=[BenefitCardDTO(id=1, title=Hello, description=Hello, displayOrder=1, active=true)], testimonials=[TestimonialDTO(id=1, name=Sardor, comment=the best developer, created this, rating=5, imageFile=null, avatarUrl=null, order=null, isActive=true)], faqs=[FaqDTO(id=1, question=What is IlmPay?, answer=IlmPay is an e-wallet app that allows you to store money, make payments, and perform other financial transactions electronically through your mobile device., displayOrder=0, active=true, createdAt=2025-02-16T18:28:08.706032, updatedAt=null)]}]
2025-02-19 14:55:34 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [25, false, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@43b3ebe1]]
2025-02-19 14:55:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:55:34 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/login | Class: uz.pdp.ilmpay.Controller.AdminController | Method: login | Args: []
2025-02-19 14:55:34 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - 🔑 Admin login page requested
2025-02-19 14:55:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:55:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:55:34 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/login | Time: 22ms | Result: admin/login
2025-02-19 14:55:34 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 35ms | Result: <200 OK OK,[]>
2025-02-19 14:55:37 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler processing failed: java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'] with root cause
java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'
	at io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.doResolveHandlerMethodException(HtmxExceptionHandlerExceptionResolver.java:31)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-19 14:55:41 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@2ca63392]]
2025-02-19 14:55:41 [http-nio-8080-exec-8] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time>=?
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 14:55:41 [http-nio-8080-exec-8] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 14:55:41 [http-nio-8080-exec-8] INFO  u.p.i.service.SupportLogoService - ✨ Found 1 active support logos
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 14:55:41 [http-nio-8080-exec-8] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 14:55:41 [http-nio-8080-exec-8] INFO  u.p.i.service.TestimonialService - ✨ Found 1 active testimonials
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 14:55:41 [http-nio-8080-exec-8] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:55:41 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 35ms | Result: admin/dashboard
2025-02-19 14:55:41 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 14:55:41 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 14:55:41 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 14:55:41 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 14:55:41 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 14:55:41 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T14:55:41.777449502, endDate: 2025-02-19T14:55:41.777449502
2025-02-19 14:55:41 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T14:55:41.777449562, endDate: 2025-02-19T14:55:41.777449562
2025-02-19 14:55:41 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T14:55:41.777509915, endDate: 2025-02-19T14:55:41.777509915
2025-02-19 14:55:41 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 14:55:41 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T14:55:41.777709529, endDate: 2025-02-19T14:55:41.777709529
2025-02-19 14:55:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM visit_time) as hour,
        EXTRACT(DOW FROM visit_time) as day_of_week,
        COUNT(DISTINCT ip_address) as count 
    FROM
        visitors 
    WHERE
        visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM visit_time),
        EXTRACT(DOW FROM visit_time)
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM visit_time) as hour,
        EXTRACT(DOW FROM visit_time) as day_of_week,
        COUNT(DISTINCT ip_address) as count 
    FROM
        visitors 
    WHERE
        visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM visit_time),
        EXTRACT(DOW FROM visit_time)
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:55:41 [http-nio-8080-exec-5] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 14:55:41 [http-nio-8080-exec-10] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 14:55:41 [http-nio-8080-exec-6] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 14:55:41 [http-nio-8080-exec-5] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 14:55:41 [http-nio-8080-exec-10] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 14:55:41 [http-nio-8080-exec-8] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 14:55:41 [http-nio-8080-exec-6] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 14:55:41 [http-nio-8080-exec-8] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:55:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:55:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:55:41 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 57ms | Result: <200 OK OK,[{dayOfWeek=1, hour=0, count=1}, {dayOfWeek=2, hour=0, count=1}, {dayOfWeek=1, hour=1, count=1}, {dayOfWeek=2, hour=1, count=1}, {dayOfWeek=1, hour=2, count=1}, {dayOfWeek=2, hour=2, count=1}, {dayOfWeek=1, hour=3, count=1}, {dayOfWeek=2, hour=3, count=1}, {dayOfWeek=1, hour=4, count=1}, {dayOfWeek=2, hour=4, count=1}, {dayOfWeek=1, hour=5, count=1}, {dayOfWeek=2, hour=5, count=1}, {dayOfWeek=1, hour=6, count=1}, {dayOfWeek=2, hour=6, count=1}, {dayOfWeek=1, hour=7, count=1}, {dayOfWeek=2, hour=7, count=1}, {dayOfWeek=1, hour=8, count=1}, {dayOfWeek=2, hour=8, count=1}, {dayOfWeek=1, hour=9, count=1}, {dayOfWeek=2, hour=9, count=1}, {dayOfWeek=1, hour=10, count=1}, {dayOfWeek=2, hour=10, count=1}, {dayOfWeek=1, hour=11, count=1}, {dayOfWeek=2, hour=11, count=1}, {dayOfWeek=1, hour=12, count=1}, {dayOfWeek=2, hour=12, count=1}, {dayOfWeek=1, hour=13, count=1}, {dayOfWeek=2, hour=13, count=1}, {dayOfWeek=1, hour=14, count=1}, {dayOfWeek=2, hour=14, count=1}, {dayOfWeek=3, hour=14, count=1}, {dayOfWeek=1, hour=15, count=1}, {dayOfWeek=2, hour=15, count=1}, {dayOfWeek=1, hour=16, count=1}, {dayOfWeek=2, hour=16, count=1}, {dayOfWeek=0, hour=17, count=1}, {dayOfWeek=0, hour=18, count=1}, {dayOfWeek=2, hour=19, count=1}, {dayOfWeek=1, hour=20, count=1}, {dayOfWeek=2, hour=20, count=1}, {dayOfWeek=1, hour=21, count=1}, {dayOfWeek=2, hour=21, count=1}, {dayOfWeek=0, hour=22, count=1}, {dayOfWeek=1, hour=22, count=1}, {dayOfWeek=2, hour=22, count=1}, {dayOfWeek=0, hour=23, count=1}, {dayOfWeek=1, hour=23, count=1}],[]>
2025-02-19 14:55:41 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 57ms | Result: <200 OK OK,[{dayOfWeek=1, hour=0, count=1}, {dayOfWeek=2, hour=0, count=1}, {dayOfWeek=1, hour=1, count=1}, {dayOfWeek=2, hour=1, count=1}, {dayOfWeek=1, hour=2, count=1}, {dayOfWeek=2, hour=2, count=1}, {dayOfWeek=1, hour=3, count=1}, {dayOfWeek=2, hour=3, count=1}, {dayOfWeek=1, hour=4, count=1}, {dayOfWeek=2, hour=4, count=1}, {dayOfWeek=1, hour=5, count=1}, {dayOfWeek=2, hour=5, count=1}, {dayOfWeek=1, hour=6, count=1}, {dayOfWeek=2, hour=6, count=1}, {dayOfWeek=1, hour=7, count=1}, {dayOfWeek=2, hour=7, count=1}, {dayOfWeek=1, hour=8, count=1}, {dayOfWeek=2, hour=8, count=1}, {dayOfWeek=1, hour=9, count=1}, {dayOfWeek=2, hour=9, count=1}, {dayOfWeek=1, hour=10, count=1}, {dayOfWeek=2, hour=10, count=1}, {dayOfWeek=1, hour=11, count=1}, {dayOfWeek=2, hour=11, count=1}, {dayOfWeek=1, hour=12, count=1}, {dayOfWeek=2, hour=12, count=1}, {dayOfWeek=1, hour=13, count=1}, {dayOfWeek=2, hour=13, count=1}, {dayOfWeek=1, hour=14, count=1}, {dayOfWeek=2, hour=14, count=1}, {dayOfWeek=3, hour=14, count=1}, {dayOfWeek=1, hour=15, count=1}, {dayOfWeek=2, hour=15, count=1}, {dayOfWeek=1, hour=16, count=1}, {dayOfWeek=2, hour=16, count=1}, {dayOfWeek=0, hour=17, count=1}, {dayOfWeek=0, hour=18, count=1}, {dayOfWeek=2, hour=19, count=1}, {dayOfWeek=1, hour=20, count=1}, {dayOfWeek=2, hour=20, count=1}, {dayOfWeek=1, hour=21, count=1}, {dayOfWeek=2, hour=21, count=1}, {dayOfWeek=0, hour=22, count=1}, {dayOfWeek=1, hour=22, count=1}, {dayOfWeek=2, hour=22, count=1}, {dayOfWeek=0, hour=23, count=1}, {dayOfWeek=1, hour=23, count=1}],[]>
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:55:41 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=1, change=0.0
2025-02-19 14:55:41 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:55:41 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=1, change=0.0
2025-02-19 14:55:41 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:55:41 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=1, change=0.0
2025-02-19 14:55:41 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:55:41 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=1, change=0.0
2025-02-19 14:55:41 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:55:41 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=49.399568034557234, previous=114.17279411764706, change=-56.73262757881318
2025-02-19 14:55:41 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=72.93119730185498, previous=0.0, change=100.0
2025-02-19 14:55:41 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=49.399568034557234, previous=114.17279411764706, change=-56.73262757881318
2025-02-19 14:55:41 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=16.458684654300168, previous=0.0, change=100.0
2025-02-19 14:55:41 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=60.69114470842332, previous=7.904411764705882, change=667.8135516600532
2025-02-19 14:55:41 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=72.93119730185498, previous=0.0, change=100.0
2025-02-19 14:55:41 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=60.69114470842332, previous=7.904411764705882, change=667.8135516600532
2025-02-19 14:55:41 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=16.458684654300168, previous=0.0, change=100.0
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:55:41 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 94ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-11, visitors=1}, {date=2025-02-16, visitors=1}, {date=2025-02-17, visitors=1}, {date=2025-02-18, visitors=1}, {date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=72.93119730185498, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=16.458684654300168},[]>
2025-02-19 14:55:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:55:41 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 95ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-18, visitors=1}, {date=2025-02-19, visitors=1}], bounceChange=667.8135516600532, totalVisitors=1, activeChange=0.0, avgSessionDuration=49.399568034557234, durationChange=-56.73262757881318, visitorChange=0.0, activeUsers=1, bounceRate=60.69114470842332},[]>
2025-02-19 14:55:41 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 96ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-18, visitors=1}, {date=2025-02-19, visitors=1}], bounceChange=667.8135516600532, totalVisitors=1, activeChange=0.0, avgSessionDuration=49.399568034557234, durationChange=-56.73262757881318, visitorChange=0.0, activeUsers=1, bounceRate=60.69114470842332},[]>
2025-02-19 14:55:41 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 97ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-11, visitors=1}, {date=2025-02-16, visitors=1}, {date=2025-02-17, visitors=1}, {date=2025-02-18, visitors=1}, {date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=72.93119730185498, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=16.458684654300168},[]>
2025-02-19 14:55:46 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [7]
2025-02-19 14:55:46 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 7, startDate: 2025-02-12T14:55:46.745177518, endDate: 2025-02-19T14:55:46.745177518
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:55:46 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=1, change=0.0
2025-02-19 14:55:46 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=1, change=0.0
2025-02-19 14:55:46 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=72.88203572632288, previous=0.0, change=100.0
2025-02-19 14:55:46 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=16.447590158409167, previous=0.0, change=100.0
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:55:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:55:46 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 39ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-16, visitors=1}, {date=2025-02-17, visitors=1}, {date=2025-02-18, visitors=1}, {date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=0.0, avgSessionDuration=72.88203572632288, durationChange=100.0, visitorChange=0.0, activeUsers=1, bounceRate=16.447590158409167},[]>
2025-02-19 14:55:54 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-19 14:55:54 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-19 14:55:54 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-19 14:55:56 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 1599690 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-19 14:55:56 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-19 14:55:56 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-19 14:55:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-19 14:55:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 9 JPA repository interfaces.
2025-02-19 14:55:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 14:55:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 14:55:57 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-19 14:55:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-19 14:55:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-19 14:55:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-19 14:55:57 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-19 14:55:57 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1153 ms
2025-02-19 14:55:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-19 14:55:57 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1fc5c0b2
2025-02-19 14:55:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-19 14:55:57 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5432/ilmpay (PostgreSQL 17.2)
2025-02-19 14:55:57 [main] WARN  o.f.c.i.database.base.Database - Flyway upgrade recommended: PostgreSQL 17.2 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 16.
2025-02-19 14:55:57 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 8
2025-02-19 14:55:57 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-19 14:55:57 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (8) that is newer than the latest available migration (0) !
2025-02-19 14:55:57 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-19 14:55:57 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-19 14:55:57 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-19 14:55:57 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-19 14:55:57 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-19 14:55:58 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-19 14:55:58 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_sessions 
       drop constraint if exists FK8klxsgb8dcjjklmqebqp1twd5
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists benefit_cards cascade
2025-02-19 14:55:58 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-02-19 14:55:58 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - drop cascades to 2 other objects
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faq cascade
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faqs cascade
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists support_logos cascade
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists testimonials cascade
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_sessions cascade
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists visitors cascade
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    create table benefit_cards (
        active boolean not null,
        display_order integer check ((display_order<=4) and (display_order>=1)),
        created_at timestamp(6),
        id bigserial not null,
        description TEXT,
        icon_url varchar(255),
        title varchar(255),
        primary key (id)
    )
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    create table faq (
        id bigserial not null,
        answer TEXT,
        category varchar(255),
        question varchar(255),
        primary key (id)
    )
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    create table faqs (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        updated_at timestamp(6),
        answer TEXT not null,
        question varchar(255) not null,
        primary key (id)
    )
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    create table support_logos (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        image_url varchar(255),
        name varchar(255),
        website_url varchar(255),
        primary key (id)
    )
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    create table testimonials (
        display_order integer,
        is_active boolean,
        rating integer not null,
        created_at timestamp(6),
        id bigserial not null,
        comment varchar(1000) not null,
        avatar_url varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    create table user_sessions (
        end_time timestamp(6),
        id bigserial not null,
        start_time timestamp(6) not null,
        user_id bigint not null,
        ip_address varchar(255),
        user_agent varchar(255),
        primary key (id)
    )
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    create table users (
        is_active boolean,
        login_count integer,
        created_at timestamp(6),
        id bigserial not null,
        last_activity timestamp(6),
        last_login timestamp(6),
        email varchar(255) not null unique,
        full_name varchar(255),
        password varchar(255) not null,
        phone_number varchar(255),
        role varchar(255) check (role in ('USER','ADMIN')),
        source varchar(255),
        primary key (id)
    )
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    create table visitors (
        bounced boolean not null,
        is_active boolean not null,
        is_downloaded boolean not null,
        id bigserial not null,
        session_duration bigint,
        visit_time timestamp(6),
        ip_address varchar(255),
        page_visited varchar(255),
        user_agent varchar(255),
        primary key (id)
    )
2025-02-19 14:55:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_sessions 
       add constraint FK8klxsgb8dcjjklmqebqp1twd5 
       foreign key (user_id) 
       references users
2025-02-19 14:55:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-19 14:55:58 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-19 14:56:00 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-19 14:56:00 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-19 14:56:00 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@48b3a9ed, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6586480a, org.springframework.security.web.context.SecurityContextHolderFilter@6c48fd13, org.springframework.security.web.header.HeaderWriterFilter@34392048, org.springframework.web.filter.CorsFilter@4962f58e, org.springframework.security.web.authentication.logout.LogoutFilter@7a140446, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@9322cfe, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4c838b32, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@608c6eb0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30ecf828, org.springframework.security.web.access.ExceptionTranslationFilter@72dd302, org.springframework.security.web.access.intercept.AuthorizationFilter@74c82cca]
2025-02-19 14:56:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-19 14:56:00 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 4.815 seconds (process running for 5.202)
2025-02-19 14:56:01 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-19 14:56:01 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-19 14:56:01 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-02-19 14:56:40 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [58, true, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@40db4cc1]]
2025-02-19 14:56:40 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/login | Class: uz.pdp.ilmpay.Controller.AdminController | Method: login | Args: []
2025-02-19 14:56:40 [http-nio-8080-exec-3] INFO  u.p.i.Controller.AdminController - 🔑 Admin login page requested
2025-02-19 14:56:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:40 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 63ms | Result: <200 OK OK,[]>
2025-02-19 14:56:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:40 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/login | Time: 80ms | Result: admin/login
2025-02-19 14:56:40 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler processing failed: java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'] with root cause
java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'
	at io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.doResolveHandlerMethodException(HtmxExceptionHandlerExceptionResolver.java:31)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-19 14:56:42 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.savedrequest.SavedRequestAwareWrapper@4dda97bf]]
2025-02-19 14:56:42 [http-nio-8080-exec-6] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time>=?
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 14:56:42 [http-nio-8080-exec-6] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 14:56:42 [http-nio-8080-exec-6] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 14:56:42 [http-nio-8080-exec-6] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 14:56:42 [http-nio-8080-exec-6] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 14:56:42 [http-nio-8080-exec-6] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:42 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 50ms | Result: admin/dashboard
2025-02-19 14:56:42 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 14:56:42 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 14:56:42 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 14:56:42 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T14:56:42.634563083, endDate: 2025-02-19T14:56:42.634563083
2025-02-19 14:56:42 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T14:56:42.634556390, endDate: 2025-02-19T14:56:42.634556390
2025-02-19 14:56:42 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 14:56:42 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 14:56:42 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 14:56:42 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T14:56:42.645107843, endDate: 2025-02-19T14:56:42.645107843
2025-02-19 14:56:42 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T14:56:42.645106501, endDate: 2025-02-19T14:56:42.645106501
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM visit_time) as hour,
        EXTRACT(DOW FROM visit_time) as day_of_week,
        COUNT(DISTINCT ip_address) as count 
    FROM
        visitors 
    WHERE
        visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM visit_time),
        EXTRACT(DOW FROM visit_time)
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM visit_time) as hour,
        EXTRACT(DOW FROM visit_time) as day_of_week,
        COUNT(DISTINCT ip_address) as count 
    FROM
        visitors 
    WHERE
        visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM visit_time),
        EXTRACT(DOW FROM visit_time)
2025-02-19 14:56:42 [http-nio-8080-exec-6] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 14:56:42 [http-nio-8080-exec-3] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 14:56:42 [http-nio-8080-exec-8] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 14:56:42 [http-nio-8080-exec-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 14:56:42 [http-nio-8080-exec-6] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 14:56:42 [http-nio-8080-exec-3] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 14:56:42 [http-nio-8080-exec-8] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 14:56:42 [http-nio-8080-exec-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 14:56:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:42 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 46ms | Result: <200 OK OK,[{dayOfWeek=3, hour=14, count=1}],[]>
2025-02-19 14:56:42 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 57ms | Result: <200 OK OK,[{dayOfWeek=3, hour=14, count=1}],[]>
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:42 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:42 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:42 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:42 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:42 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:42 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:42 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:42 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:42 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 14:56:42 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 14:56:42 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 14:56:42 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 14:56:42 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 14:56:42 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 14:56:42 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 14:56:42 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:42 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 75ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 14:56:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:42 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 86ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 14:56:42 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 87ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 14:56:42 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 77ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 14:56:44 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [1, true, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6ec2a9db]]
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@241a45bf]]
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time>=?
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 14:56:44 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 10ms | Result: <200 OK OK,[]>
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 38ms | Result: admin/dashboard
2025-02-19 14:56:44 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 14:56:44 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 14:56:44 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 14:56:44 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T14:56:44.514058742, endDate: 2025-02-19T14:56:44.514058742
2025-02-19 14:56:44 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 14:56:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T14:56:44.514058662, endDate: 2025-02-19T14:56:44.514058662
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T14:56:44.514058662, endDate: 2025-02-19T14:56:44.514058662
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM visit_time) as hour,
        EXTRACT(DOW FROM visit_time) as day_of_week,
        COUNT(DISTINCT ip_address) as count 
    FROM
        visitors 
    WHERE
        visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM visit_time),
        EXTRACT(DOW FROM visit_time)
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM visit_time) as hour,
        EXTRACT(DOW FROM visit_time) as day_of_week,
        COUNT(DISTINCT ip_address) as count 
    FROM
        visitors 
    WHERE
        visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM visit_time),
        EXTRACT(DOW FROM visit_time)
2025-02-19 14:56:44 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 14:56:44 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T14:56:44.514916808, endDate: 2025-02-19T14:56:44.514916808
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.1111111111111111, previous=0.0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.1111111111111111, previous=0.0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.1111111111111111, previous=0.0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=11.11111111111111, previous=0.0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=11.11111111111111, previous=0.0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=11.11111111111111, previous=0.0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.1111111111111111, previous=0.0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=11.11111111111111, previous=0.0, change=100.0
2025-02-19 14:56:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 20ms | Result: <200 OK OK,[{dayOfWeek=3, hour=14, count=1}],[]>
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 21ms | Result: <200 OK OK,[{dayOfWeek=3, hour=14, count=1}],[]>
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:44 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 26ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.1111111111111111, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=11.11111111111111},[]>
2025-02-19 14:56:44 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 26ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.1111111111111111, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=11.11111111111111},[]>
2025-02-19 14:56:44 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 25ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.1111111111111111, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=11.11111111111111},[]>
2025-02-19 14:56:44 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 27ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.1111111111111111, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=11.11111111111111},[]>
2025-02-19 14:56:45 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [1, true, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@1b5bf35c]]
2025-02-19 14:56:45 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6dde8d66]]
2025-02-19 14:56:45 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 14:56:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time>=?
2025-02-19 14:56:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 14:56:45 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 9ms | Result: <200 OK OK,[]>
2025-02-19 14:56:45 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 14:56:45 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 14:56:45 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 14:56:45 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 14:56:45 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:45 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 57ms | Result: admin/dashboard
2025-02-19 14:56:46 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 14:56:46 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 14:56:46 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 14:56:46 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 14:56:46 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T14:56:46.204030071, endDate: 2025-02-19T14:56:46.204030071
2025-02-19 14:56:46 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 14:56:46 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T14:56:46.204045691, endDate: 2025-02-19T14:56:46.204045691
2025-02-19 14:56:46 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T14:56:46.204102216, endDate: 2025-02-19T14:56:46.204102216
2025-02-19 14:56:46 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 14:56:46 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T14:56:46.204415954, endDate: 2025-02-19T14:56:46.204415954
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM visit_time) as hour,
        EXTRACT(DOW FROM visit_time) as day_of_week,
        COUNT(DISTINCT ip_address) as count 
    FROM
        visitors 
    WHERE
        visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM visit_time),
        EXTRACT(DOW FROM visit_time)
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM visit_time) as hour,
        EXTRACT(DOW FROM visit_time) as day_of_week,
        COUNT(DISTINCT ip_address) as count 
    FROM
        visitors 
    WHERE
        visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM visit_time),
        EXTRACT(DOW FROM visit_time)
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.125, previous=0.0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.125, previous=0.0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=12.5, previous=0.0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.125, previous=0.0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.125, previous=0.0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=12.5, previous=0.0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=12.5, previous=0.0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=12.5, previous=0.0, change=100.0
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 18ms | Result: <200 OK OK,[{dayOfWeek=3, hour=14, count=1}],[]>
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 19ms | Result: <200 OK OK,[{dayOfWeek=3, hour=14, count=1}],[]>
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:46 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 24ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.125, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=12.5},[]>
2025-02-19 14:56:46 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 26ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.125, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=12.5},[]>
2025-02-19 14:56:46 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 26ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.125, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=12.5},[]>
2025-02-19 14:56:46 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 26ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.125, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=12.5},[]>
2025-02-19 14:56:47 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [1, true, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@7d027122]]
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6b4fa33]]
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time>=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 14:56:47 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 9ms | Result: <200 OK OK,[]>
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 55ms | Result: admin/dashboard
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 14:56:47 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 14:56:47 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 14:56:47 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 14:56:47 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T14:56:47.676177389, endDate: 2025-02-19T14:56:47.676177389
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T14:56:47.676177299, endDate: 2025-02-19T14:56:47.676177299
2025-02-19 14:56:47 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 14:56:47 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T14:56:47.676203278, endDate: 2025-02-19T14:56:47.676203278
2025-02-19 14:56:47 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 14:56:47 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T14:56:47.676605972, endDate: 2025-02-19T14:56:47.676605972
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM visit_time) as hour,
        EXTRACT(DOW FROM visit_time) as day_of_week,
        COUNT(DISTINCT ip_address) as count 
    FROM
        visitors 
    WHERE
        visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM visit_time),
        EXTRACT(DOW FROM visit_time)
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM visit_time) as hour,
        EXTRACT(DOW FROM visit_time) as day_of_week,
        COUNT(DISTINCT ip_address) as count 
    FROM
        visitors 
    WHERE
        visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM visit_time),
        EXTRACT(DOW FROM visit_time)
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:47 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.13043478260869565, previous=0.0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.13043478260869565, previous=0.0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.13043478260869565, previous=0.0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=13.043478260869565, previous=0.0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.13043478260869565, previous=0.0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=13.043478260869565, previous=0.0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=13.043478260869565, previous=0.0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=13.043478260869565, previous=0.0, change=100.0
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:47 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 17ms | Result: <200 OK OK,[{dayOfWeek=3, hour=14, count=1}],[]>
2025-02-19 14:56:47 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 18ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.13043478260869565, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=13.043478260869565},[]>
2025-02-19 14:56:47 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 18ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.13043478260869565, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=13.043478260869565},[]>
2025-02-19 14:56:47 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 18ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.13043478260869565, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=13.043478260869565},[]>
2025-02-19 14:56:47 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 18ms | Result: <200 OK OK,[{dayOfWeek=3, hour=14, count=1}],[]>
2025-02-19 14:56:47 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 18ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.13043478260869565, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=13.043478260869565},[]>
2025-02-19 14:56:48 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [1, true, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@2afe0694]]
2025-02-19 14:56:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:48 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@2cb2afa0]]
2025-02-19 14:56:48 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 14:56:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0
2025-02-19 14:56:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time>=?
2025-02-19 14:56:48 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 7ms | Result: <200 OK OK,[]>
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 14:56:48 [http-nio-8080-exec-5] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 14:56:48 [http-nio-8080-exec-5] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 14:56:48 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 14:56:48 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 14:56:48 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:48 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 55ms | Result: admin/dashboard
2025-02-19 14:56:49 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler processing failed: java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'] with root cause
java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'
	at io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.doResolveHandlerMethodException(HtmxExceptionHandlerExceptionResolver.java:31)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-19 14:56:49 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 14:56:49 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 14:56:49 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T14:56:49.225352014, endDate: 2025-02-19T14:56:49.225352014
2025-02-19 14:56:49 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 14:56:49 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T14:56:49.225552991, endDate: 2025-02-19T14:56:49.225552991
2025-02-19 14:56:49 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 14:56:49 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM visit_time) as hour,
        EXTRACT(DOW FROM visit_time) as day_of_week,
        COUNT(DISTINCT ip_address) as count 
    FROM
        visitors 
    WHERE
        visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM visit_time),
        EXTRACT(DOW FROM visit_time)
2025-02-19 14:56:49 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T14:56:49.225772642, endDate: 2025-02-19T14:56:49.225772642
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM visit_time) as hour,
        EXTRACT(DOW FROM visit_time) as day_of_week,
        COUNT(DISTINCT ip_address) as count 
    FROM
        visitors 
    WHERE
        visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM visit_time),
        EXTRACT(DOW FROM visit_time)
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:49 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 14:56:49 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T14:56:49.226723082, endDate: 2025-02-19T14:56:49.226723082
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.13333333333333333, previous=0.0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.13333333333333333, previous=0.0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=13.333333333333334, previous=0.0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=13.333333333333334, previous=0.0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.13333333333333333, previous=0.0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=13.333333333333334, previous=0.0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:49 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.13333333333333333, previous=0.0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=13.333333333333334, previous=0.0, change=100.0
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:49 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 22ms | Result: <200 OK OK,[{dayOfWeek=3, hour=14, count=1}],[]>
2025-02-19 14:56:49 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 23ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.13333333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=13.333333333333334},[]>
2025-02-19 14:56:49 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 23ms | Result: <200 OK OK,[{dayOfWeek=3, hour=14, count=1}],[]>
2025-02-19 14:56:49 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 23ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.13333333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=13.333333333333334},[]>
2025-02-19 14:56:49 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 23ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.13333333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=13.333333333333334},[]>
2025-02-19 14:56:49 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 23ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.13333333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=13.333333333333334},[]>
2025-02-19 14:56:50 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [1, true, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@2d7979cd]]
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@16e42361]]
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time>=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 14:56:50 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 6ms | Result: <200 OK OK,[]>
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 58ms | Result: admin/dashboard
2025-02-19 14:56:50 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 14:56:50 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 14:56:50 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 14:56:50 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 14:56:50 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T14:56:50.940180640, endDate: 2025-02-19T14:56:50.940180640
2025-02-19 14:56:50 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T14:56:50.940180981, endDate: 2025-02-19T14:56:50.940180981
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM visit_time) as hour,
        EXTRACT(DOW FROM visit_time) as day_of_week,
        COUNT(DISTINCT ip_address) as count 
    FROM
        visitors 
    WHERE
        visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM visit_time),
        EXTRACT(DOW FROM visit_time)
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM visit_time) as hour,
        EXTRACT(DOW FROM visit_time) as day_of_week,
        COUNT(DISTINCT ip_address) as count 
    FROM
        visitors 
    WHERE
        visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM visit_time),
        EXTRACT(DOW FROM visit_time)
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:50 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 14:56:50 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T14:56:50.941937028, endDate: 2025-02-19T14:56:50.941937028
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T14:56:50.941937048, endDate: 2025-02-19T14:56:50.941937048
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.visit_time) as date,
        COUNT(DISTINCT v.ip_address) as count 
    FROM
        visitors v 
    WHERE
        v.visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.visit_time) 
    ORDER BY
        date
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        page_visited=?,
        session_duration=?,
        user_agent=?,
        visit_time=? 
    where
        id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.ip_address) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.visit_time between ? and ?
2025-02-19 14:56:50 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.13513513513513514, previous=0.0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.13513513513513514, previous=0.0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.13513513513513514, previous=0.0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.13513513513513514, previous=0.0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=13.513513513513514, previous=0.0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=13.513513513513514, previous=0.0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=13.513513513513514, previous=0.0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=13.513513513513514, previous=0.0, change=100.0
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.ip_address=? 
        and v1_0.visit_time>? 
    order by
        v1_0.visit_time desc
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.page_visited,
        v1_0.session_duration,
        v1_0.user_agent,
        v1_0.visit_time 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 14:56:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, ip_address, is_active, is_downloaded, page_visited, session_duration, user_agent, visit_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 14:56:50 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 21ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.13513513513513514, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=13.513513513513514},[]>
2025-02-19 14:56:50 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 25ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.13513513513513514, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=13.513513513513514},[]>
2025-02-19 14:56:50 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 25ms | Result: <200 OK OK,[{dayOfWeek=3, hour=14, count=1}],[]>
2025-02-19 14:56:50 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 25ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.13513513513513514, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=13.513513513513514},[]>
2025-02-19 14:56:50 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 25ms | Result: <200 OK OK,[{dayOfWeek=3, hour=14, count=1}],[]>
2025-02-19 14:56:50 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 23ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.13513513513513514, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=13.513513513513514},[]>
2025-02-19 15:00:56 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-19 15:00:56 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-19 15:00:56 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-19 15:08:23 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 1673748 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-19 15:08:23 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-19 15:08:23 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-19 15:08:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-19 15:08:23 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'sessionRepository' defined in uz.pdp.ilmpay.repository.SessionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot register bean definition [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in uz.pdp.ilmpay.repository.SessionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration] for bean 'sessionRepository' since there is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration; factoryMethodName=sessionRepository; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/session/jdbc/config/annotation/web/http/JdbcHttpSessionConfiguration.class]] bound.
2025-02-19 15:08:23 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-02-19 15:08:23 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'sessionRepository', defined in uz.pdp.ilmpay.repository.SessionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration, could not be registered. A bean with that name has already been defined in class path resource [org/springframework/session/jdbc/config/annotation/web/http/JdbcHttpSessionConfiguration.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2025-02-19 15:10:51 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 1688503 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-19 15:10:51 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-19 15:10:51 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-19 15:10:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-19 15:10:52 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'sessionRepository' defined in uz.pdp.ilmpay.repository.SessionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot register bean definition [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in uz.pdp.ilmpay.repository.SessionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration] for bean 'sessionRepository' since there is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration; factoryMethodName=sessionRepository; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/session/jdbc/config/annotation/web/http/JdbcHttpSessionConfiguration.class]] bound.
2025-02-19 15:10:52 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-02-19 15:10:52 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'sessionRepository', defined in uz.pdp.ilmpay.repository.SessionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration, could not be registered. A bean with that name has already been defined in class path resource [org/springframework/session/jdbc/config/annotation/web/http/JdbcHttpSessionConfiguration.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2025-02-19 15:11:52 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 1695215 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-19 15:11:52 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-19 15:11:52 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-19 15:11:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-19 15:11:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 8 JPA repository interfaces.
2025-02-19 15:11:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 15:11:53 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 15:11:53 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-19 15:11:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-19 15:11:54 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-19 15:11:54 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-19 15:11:54 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-19 15:11:54 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1335 ms
2025-02-19 15:11:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-19 15:11:54 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1d9bd1d6
2025-02-19 15:11:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-19 15:11:54 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5432/ilmpay (PostgreSQL 17.2)
2025-02-19 15:11:54 [main] WARN  o.f.c.i.database.base.Database - Flyway upgrade recommended: PostgreSQL 17.2 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 16.
2025-02-19 15:11:54 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 8
2025-02-19 15:11:54 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-19 15:11:54 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (8) that is newer than the latest available migration (4) !
2025-02-19 15:11:54 [main] INFO  o.f.core.internal.command.DbMigrate - Migrating schema "public" to version "2 - add session tracking" [out of order]
2025-02-19 15:11:54 [main] ERROR o.f.core.internal.command.DbMigrate - Migration of schema "public" to version "2 - add session tracking" [out of order] failed! Changes successfully rolled back.
2025-02-19 15:11:54 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Migration V2__add_session_tracking.sql failed
---------------------------------------------
SQL State  : 42701
Error Code : 0
Message    : ERROR: column "first_visit_time" of relation "visitors" already exists
Location   : db/migration/V2__add_session_tracking.sql (/home/lantanium/Documents/Ilmpay/target/classes/db/migration/V2__add_session_tracking.sql)
Line       : 20
Statement  : -- Update constraint for visit_time to first_visit_time in relevant foreign keys or constraints
ALTER TABLE visitors RENAME COLUMN visit_time TO first_visit_time

2025-02-19 15:11:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-19 15:11:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-19 15:11:54 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-02-19 15:11:54 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-02-19 15:11:54 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Migration V2__add_session_tracking.sql failed
---------------------------------------------
SQL State  : 42701
Error Code : 0
Message    : ERROR: column "first_visit_time" of relation "visitors" already exists
Location   : db/migration/V2__add_session_tracking.sql (/home/lantanium/Documents/Ilmpay/target/classes/db/migration/V2__add_session_tracking.sql)
Line       : 20
Statement  : -- Update constraint for visit_time to first_visit_time in relevant foreign keys or constraints
ALTER TABLE visitors RENAME COLUMN visit_time TO first_visit_time

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at uz.pdp.ilmpay.IlmpayApplication.main(IlmpayApplication.java:11)
Caused by: org.flywaydb.core.internal.command.DbMigrate$FlywayMigrateException: Migration V2__add_session_tracking.sql failed
---------------------------------------------
SQL State  : 42701
Error Code : 0
Message    : ERROR: column "first_visit_time" of relation "visitors" already exists
Location   : db/migration/V2__add_session_tracking.sql (/home/lantanium/Documents/Ilmpay/target/classes/db/migration/V2__add_session_tracking.sql)
Line       : 20
Statement  : -- Update constraint for visit_time to first_visit_time in relevant foreign keys or constraints
ALTER TABLE visitors RENAME COLUMN visit_time TO first_visit_time

	at org.flywaydb.core.internal.command.DbMigrate.doMigrateGroup(DbMigrate.java:382)
	at org.flywaydb.core.internal.command.DbMigrate.lambda$applyMigrations$1(DbMigrate.java:272)
	at org.flywaydb.core.internal.jdbc.TransactionalExecutionTemplate.execute(TransactionalExecutionTemplate.java:55)
	at org.flywaydb.core.internal.command.DbMigrate.applyMigrations(DbMigrate.java:271)
	at org.flywaydb.core.internal.command.DbMigrate.migrateGroup(DbMigrate.java:244)
	at org.flywaydb.core.internal.command.DbMigrate.lambda$migrateAll$0(DbMigrate.java:139)
	at org.flywaydb.database.postgresql.PostgreSQLAdvisoryLockTemplate.execute(PostgreSQLAdvisoryLockTemplate.java:73)
	at org.flywaydb.database.postgresql.PostgreSQLAdvisoryLockTemplate.lambda$execute$0(PostgreSQLAdvisoryLockTemplate.java:56)
	at org.flywaydb.core.internal.jdbc.TransactionalExecutionTemplate.execute(TransactionalExecutionTemplate.java:55)
	at org.flywaydb.database.postgresql.PostgreSQLAdvisoryLockTemplate.execute(PostgreSQLAdvisoryLockTemplate.java:56)
	at org.flywaydb.database.postgresql.PostgreSQLConnection.lock(PostgreSQLConnection.java:96)
	at org.flywaydb.core.internal.schemahistory.JdbcTableSchemaHistory.lock(JdbcTableSchemaHistory.java:144)
	at org.flywaydb.core.internal.command.DbMigrate.migrateAll(DbMigrate.java:139)
	at org.flywaydb.core.internal.command.DbMigrate.migrate(DbMigrate.java:97)
	at org.flywaydb.core.Flyway.lambda$migrate$0(Flyway.java:202)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:200)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:147)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 18 common frames omitted
Caused by: org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: Migration V2__add_session_tracking.sql failed
---------------------------------------------
SQL State  : 42701
Error Code : 0
Message    : ERROR: column "first_visit_time" of relation "visitors" already exists
Location   : db/migration/V2__add_session_tracking.sql (/home/lantanium/Documents/Ilmpay/target/classes/db/migration/V2__add_session_tracking.sql)
Line       : 20
Statement  : -- Update constraint for visit_time to first_visit_time in relevant foreign keys or constraints
ALTER TABLE visitors RENAME COLUMN visit_time TO first_visit_time

	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.handleException(DefaultSqlScriptExecutor.java:252)
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.executeStatement(DefaultSqlScriptExecutor.java:214)
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.execute(DefaultSqlScriptExecutor.java:133)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.executeOnce(SqlMigrationExecutor.java:65)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.lambda$execute$0(SqlMigrationExecutor.java:57)
	at org.flywaydb.core.internal.database.DefaultExecutionStrategy.execute(DefaultExecutionStrategy.java:27)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.execute(SqlMigrationExecutor.java:56)
	at org.flywaydb.core.internal.command.DbMigrate.doMigrateGroup(DbMigrate.java:374)
	... 37 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: column "first_visit_time" of relation "visitors" already exists
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:292)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.flywaydb.core.internal.jdbc.JdbcTemplate.executeStatement(JdbcTemplate.java:210)
	at org.flywaydb.core.internal.sqlscript.ParsedSqlStatement.execute(ParsedSqlStatement.java:89)
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.executeStatement(DefaultSqlScriptExecutor.java:206)
	... 43 common frames omitted
2025-02-19 15:15:01 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 1713650 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-19 15:15:01 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-19 15:15:01 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-19 15:15:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-19 15:15:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 8 JPA repository interfaces.
2025-02-19 15:15:02 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 15:15:02 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 15:15:02 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-19 15:15:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-19 15:15:03 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-19 15:15:03 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-19 15:15:03 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-19 15:15:03 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1181 ms
2025-02-19 15:15:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-19 15:15:03 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@117fb9ba
2025-02-19 15:15:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-19 15:15:03 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5432/ilmpay (PostgreSQL 17.2)
2025-02-19 15:15:03 [main] WARN  o.f.c.i.database.base.Database - Flyway upgrade recommended: PostgreSQL 17.2 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 16.
2025-02-19 15:15:03 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 8
2025-02-19 15:15:03 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-19 15:15:03 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (8) that is newer than the latest available migration (4) !
2025-02-19 15:15:03 [main] INFO  o.f.core.internal.command.DbMigrate - Migrating schema "public" to version "2 - add session tracking" [out of order]
2025-02-19 15:15:03 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (8) that is newer than the latest available migration (4) !
2025-02-19 15:15:03 [main] INFO  o.f.core.internal.command.DbMigrate - Migrating schema "public" to version "3 - add spring session schema" [out of order]
2025-02-19 15:15:03 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (8) that is newer than the latest available migration (4) !
2025-02-19 15:15:03 [main] INFO  o.f.core.internal.command.DbMigrate - Migrating schema "public" to version "4 - remove user sessions" [out of order]
2025-02-19 15:15:03 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (8) that is newer than the latest available migration (4) !
2025-02-19 15:15:03 [main] INFO  o.f.core.internal.command.DbMigrate - Successfully applied 3 migrations to schema "public", now at version v4 (execution time 00:00.041s)
2025-02-19 15:15:03 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-19 15:15:03 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-19 15:15:03 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-19 15:15:04 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-19 15:15:04 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-19 15:15:04 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists benefit_cards cascade
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faq cascade
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faqs cascade
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists support_logos cascade
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists testimonials cascade
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists visitors cascade
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    create table benefit_cards (
        active boolean not null,
        display_order integer check ((display_order<=4) and (display_order>=1)),
        created_at timestamp(6),
        id bigserial not null,
        description TEXT,
        icon_url varchar(255),
        title varchar(255),
        primary key (id)
    )
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    create table faq (
        id bigserial not null,
        answer TEXT,
        category varchar(255),
        question varchar(255),
        primary key (id)
    )
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    create table faqs (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        updated_at timestamp(6),
        answer TEXT not null,
        question varchar(255) not null,
        primary key (id)
    )
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    create table support_logos (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        image_url varchar(255),
        name varchar(255),
        website_url varchar(255),
        primary key (id)
    )
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    create table testimonials (
        display_order integer,
        is_active boolean,
        rating integer not null,
        created_at timestamp(6),
        id bigserial not null,
        comment varchar(1000) not null,
        avatar_url varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    create table users (
        is_active boolean,
        login_count integer,
        created_at timestamp(6),
        id bigserial not null,
        last_activity timestamp(6),
        last_login timestamp(6),
        email varchar(255) not null unique,
        full_name varchar(255),
        password varchar(255) not null,
        phone_number varchar(255),
        role varchar(255) check (role in ('USER','ADMIN')),
        source varchar(255),
        primary key (id)
    )
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    create table visitors (
        bounced boolean not null,
        is_active boolean not null,
        is_downloaded boolean not null,
        page_visit_count integer not null,
        first_visit_time timestamp(6) not null,
        id bigserial not null,
        last_active_time timestamp(6) not null,
        session_duration bigint,
        ip_address varchar(255) not null,
        last_page_visited varchar(255),
        session_id varchar(255) not null,
        user_agent varchar(255),
        primary key (id)
    )
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    create index idx_session_id 
       on visitors (session_id)
2025-02-19 15:15:04 [main] DEBUG org.hibernate.SQL - 
    create index idx_last_active 
       on visitors (last_active_time)
2025-02-19 15:15:04 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-19 15:15:05 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-19 15:15:06 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-19 15:15:06 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-19 15:15:06 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2393ef6e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@14b0a826, org.springframework.security.web.context.SecurityContextHolderFilter@3fdc7786, org.springframework.security.web.header.HeaderWriterFilter@4775d6d0, org.springframework.web.filter.CorsFilter@7fef02d9, org.springframework.security.web.authentication.logout.LogoutFilter@4cd29de4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4b5c0183, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a930517, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5258833e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5ba3e590, org.springframework.security.web.access.ExceptionTranslationFilter@13b9da00, org.springframework.security.web.access.intercept.AuthorizationFilter@60c952ea]
2025-02-19 15:15:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-19 15:15:07 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 5.498 seconds (process running for 5.849)
2025-02-19 15:15:07 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-19 15:15:07 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-19 15:15:07 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-02-19 15:15:11 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [1100, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@66279233]
2025-02-19 15:15:11 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/login | Class: uz.pdp.ilmpay.Controller.AdminController | Method: login | Args: []
2025-02-19 15:15:11 [http-nio-8080-exec-3] INFO  u.p.i.Controller.AdminController - 🔑 Admin login page requested
2025-02-19 15:15:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 15:15:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 15:15:11 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session 5f05cb5b-be64-49ef-a2d0-74cbb5f3e8fe on page session-update
2025-02-19 15:15:11 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session fa84c06a-ff39-40f4-bb6d-889c12e7613b on page login
2025-02-19 15:15:11 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/login | Time: 117ms | Result: admin/login
2025-02-19 15:15:11 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 135ms | Result: <200 OK OK,[]>
2025-02-19 15:15:11 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler processing failed: java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'] with root cause
java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'
	at io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.doResolveHandlerMethodException(HtmxExceptionHandlerExceptionResolver.java:31)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-19 15:15:13 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@dd1a89c]]
2025-02-19 15:15:13 [http-nio-8080-exec-6] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:15:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:15:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:15:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:15:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:15:13 [http-nio-8080-exec-6] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:15:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:15:13 [http-nio-8080-exec-6] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:15:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:15:13 [http-nio-8080-exec-6] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:15:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:15:13 [http-nio-8080-exec-6] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:15:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:15:13 [http-nio-8080-exec-6] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:15:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 15:15:13 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:15:13 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 49ms | Result: admin/dashboard
2025-02-19 15:15:13 [http-nio-8080-exec-7] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 15:15:13 [http-nio-8080-exec-7] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 15:15:13 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:13 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:13 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:13 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:13 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:13 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:13.704454104, endDate: 2025-02-19T15:15:13.704454104
2025-02-19 15:15:13 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:13.704431371, endDate: 2025-02-19T15:15:13.704431371
2025-02-19 15:15:13 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:13.704431531, endDate: 2025-02-19T15:15:13.704431531
2025-02-19 15:15:13 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:13.704431201, endDate: 2025-02-19T15:15:13.704431201
2025-02-19 15:15:13 [http-nio-8080-exec-6] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 15:15:13 [http-nio-8080-exec-6] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 15:15:13 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:13 [http-nio-8080-exec-9] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 15:15:13 [http-nio-8080-exec-4] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 15:15:13 [http-nio-8080-exec-9] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 15:15:13 [http-nio-8080-exec-4] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 15:15:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:15:13 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 72ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=3}],[]>
2025-02-19 15:15:13 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:15:13 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 72ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=3}],[]>
2025-02-19 15:15:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:13 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:13 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:13 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:13 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:13 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:13 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:13 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:15:13 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:15:13 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:13 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:13 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:13 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:13 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:15:13 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:15:13 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:13 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:13 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:13 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 94ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:13 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:13 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 95ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:13 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:13 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 97ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:13 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:13 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 98ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:16 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [2, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@3878f5c5]
2025-02-19 15:15:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@49d3d39d]]
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:15:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:15:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:15:16 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page session-update
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:15:16 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 7ms | Result: <200 OK OK,[]>
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 20ms | Result: admin/dashboard
2025-02-19 15:15:16 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:16 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:16 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:16 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:16 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:16 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:16.418890372, endDate: 2025-02-19T15:15:16.418890372
2025-02-19 15:15:16 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:16.418871767, endDate: 2025-02-19T15:15:16.418871767
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:16.418880083, endDate: 2025-02-19T15:15:16.418880083
2025-02-19 15:15:16 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:16.418871847, endDate: 2025-02-19T15:15:16.418871847
2025-02-19 15:15:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:15:16 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 10ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=3}],[]>
2025-02-19 15:15:16 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:15:16 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 11ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=3}],[]>
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.6666666666666666, previous=0.0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.6666666666666666, previous=0.0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.6666666666666666, previous=0.0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.6666666666666666, previous=0.0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:16 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:16 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 18ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=0.6666666666666666, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:16 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 19ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=0.6666666666666666, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:16 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:16 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 20ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=0.6666666666666666, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:16 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:16 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 22ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=0.6666666666666666, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:17 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [1, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@1b904a5f]
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@3fb5fb5b]]
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:15:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:15:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:15:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:15:17 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page session-update
2025-02-19 15:15:17 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 8ms | Result: <200 OK OK,[]>
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 23ms | Result: admin/dashboard
2025-02-19 15:15:17 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:17 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:17 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:17 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:17.769993945, endDate: 2025-02-19T15:15:17.769993945
2025-02-19 15:15:17 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:17.770040001, endDate: 2025-02-19T15:15:17.770040001
2025-02-19 15:15:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:17 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:17.771545852, endDate: 2025-02-19T15:15:17.771545852
2025-02-19 15:15:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:17 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:17.771924762, endDate: 2025-02-19T15:15:17.771924762
2025-02-19 15:15:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:15:17 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 9ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=3}],[]>
2025-02-19 15:15:17 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=1.3333333333333333, previous=0.0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=1.3333333333333333, previous=0.0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:15:17 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 8ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=3}],[]>
2025-02-19 15:15:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:17 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:17 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=1.3333333333333333, previous=0.0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=1.3333333333333333, previous=0.0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:17 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:17 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 14ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=1.3333333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:17 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:17 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 15ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=1.3333333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:17 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 14ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=1.3333333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:17 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:17 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 17ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=1.3333333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:18 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [1, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@1067646a]
2025-02-19 15:15:18 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@349b81e2]]
2025-02-19 15:15:18 [http-nio-8080-exec-3] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:15:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:15:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:15:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:15:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:15:18 [http-nio-8080-exec-3] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:15:18 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page session-update
2025-02-19 15:15:18 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 9ms | Result: <200 OK OK,[]>
2025-02-19 15:15:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:15:18 [http-nio-8080-exec-3] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:15:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:15:18 [http-nio-8080-exec-3] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:15:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:15:18 [http-nio-8080-exec-3] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:15:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:15:18 [http-nio-8080-exec-3] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:15:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:18 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:15:18 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 21ms | Result: admin/dashboard
2025-02-19 15:15:19 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:19 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:19 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:19 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:19.155863012, endDate: 2025-02-19T15:15:19.155863012
2025-02-19 15:15:19 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:19.155863132, endDate: 2025-02-19T15:15:19.155863132
2025-02-19 15:15:19 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:19 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:19 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:19 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:19.155937932, endDate: 2025-02-19T15:15:19.155937932
2025-02-19 15:15:19 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:19.155970924, endDate: 2025-02-19T15:15:19.155970924
2025-02-19 15:15:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:15:19 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 6ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=3}],[]>
2025-02-19 15:15:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:15:19 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 7ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=3}],[]>
2025-02-19 15:15:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:19 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=2.0, previous=0.0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=2.0, previous=0.0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=2.0, previous=0.0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=2.0, previous=0.0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:19 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:19 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 23ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=2.0, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:19 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:19 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 24ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=2.0, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:19 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:19 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 25ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=2.0, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:19 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:19 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 26ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=2.0, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:20 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [1, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@20e7bed5]
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@13884644]]
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:15:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:15:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:15:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:15:20 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page session-update
2025-02-19 15:15:20 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 10ms | Result: <200 OK OK,[]>
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 28ms | Result: admin/dashboard
2025-02-19 15:15:20 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:20 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:20 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:20.559291220, endDate: 2025-02-19T15:15:20.559291220
2025-02-19 15:15:20 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:20.559310216, endDate: 2025-02-19T15:15:20.559310216
2025-02-19 15:15:20 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:20 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:20 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:20 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:20.559859835, endDate: 2025-02-19T15:15:20.559859835
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:20.559899460, endDate: 2025-02-19T15:15:20.559899460
2025-02-19 15:15:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:15:20 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 5ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=3}],[]>
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:15:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:20 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 6ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=3}],[]>
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=2.3333333333333335, previous=0.0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=2.3333333333333335, previous=0.0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=2.3333333333333335, previous=0.0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=2.3333333333333335, previous=0.0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:20 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:20 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 11ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=2.3333333333333335, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:20 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:20 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 12ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=2.3333333333333335, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:20 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:20 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 13ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=2.3333333333333335, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:20 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 15ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=2.3333333333333335, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:26 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [6, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@2bb0db8b]
2025-02-19 15:15:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:26 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page session-update
2025-02-19 15:15:26 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 4ms | Result: <200 OK OK,[]>
2025-02-19 15:15:26 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@39e96cb]]
2025-02-19 15:15:26 [http-nio-8080-exec-6] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:15:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:15:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:15:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:15:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:15:26 [http-nio-8080-exec-6] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:15:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:15:26 [http-nio-8080-exec-6] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:15:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:15:26 [http-nio-8080-exec-6] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:15:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:15:26 [http-nio-8080-exec-6] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:15:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:15:26 [http-nio-8080-exec-6] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:15:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:26 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:15:26 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 18ms | Result: admin/dashboard
2025-02-19 15:15:27 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:27 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:27.369279895, endDate: 2025-02-19T15:15:27.369279895
2025-02-19 15:15:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:27 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:27 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:27 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:27.371134328, endDate: 2025-02-19T15:15:27.371134328
2025-02-19 15:15:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:27 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:27 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:27.374644143, endDate: 2025-02-19T15:15:27.374644143
2025-02-19 15:15:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:27 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:27.376314092, endDate: 2025-02-19T15:15:27.376314092
2025-02-19 15:15:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:15:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 10ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=3}],[]>
2025-02-19 15:15:27 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=4.333333333333333, previous=0.0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:15:27 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 9ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=3}],[]>
2025-02-19 15:15:27 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=4.333333333333333, previous=0.0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:27 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=4.666666666666667, previous=0.0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:27 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:27 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=3, previous=0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=3, previous=0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=4.666666666666667, previous=0.0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=66.66666666666667, previous=0.0, change=100.0
2025-02-19 15:15:27 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 15ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=4.333333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:27 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:27 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 13ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=4.333333333333333, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:15:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:15:27 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:27 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 13ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=4.666666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:27 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:15:27 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 12ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=3}], bounceChange=100.0, totalVisitors=3, activeChange=100.0, avgSessionDuration=4.666666666666667, durationChange=100.0, visitorChange=100.0, activeUsers=3, bounceRate=66.66666666666667},[]>
2025-02-19 15:15:30 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-19 15:15:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-19 15:15:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-19 15:15:31 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 1716826 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-19 15:15:31 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-19 15:15:31 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-19 15:15:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-19 15:15:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 8 JPA repository interfaces.
2025-02-19 15:15:32 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 15:15:32 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 15:15:32 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-19 15:15:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-19 15:15:32 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-19 15:15:32 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-19 15:15:32 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-19 15:15:32 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1043 ms
2025-02-19 15:15:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-19 15:15:33 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1b8ee69d
2025-02-19 15:15:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-19 15:15:33 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5432/ilmpay (PostgreSQL 17.2)
2025-02-19 15:15:33 [main] WARN  o.f.c.i.database.base.Database - Flyway upgrade recommended: PostgreSQL 17.2 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 16.
2025-02-19 15:15:33 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 8
2025-02-19 15:15:33 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-19 15:15:33 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (8) that is newer than the latest available migration (4) !
2025-02-19 15:15:33 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-19 15:15:33 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-19 15:15:33 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-19 15:15:33 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-19 15:15:33 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-19 15:15:33 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-19 15:15:33 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    drop table if exists benefit_cards cascade
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faq cascade
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faqs cascade
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    drop table if exists support_logos cascade
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    drop table if exists testimonials cascade
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    drop table if exists visitors cascade
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    create table benefit_cards (
        active boolean not null,
        display_order integer check ((display_order<=4) and (display_order>=1)),
        created_at timestamp(6),
        id bigserial not null,
        description TEXT,
        icon_url varchar(255),
        title varchar(255),
        primary key (id)
    )
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    create table faq (
        id bigserial not null,
        answer TEXT,
        category varchar(255),
        question varchar(255),
        primary key (id)
    )
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    create table faqs (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        updated_at timestamp(6),
        answer TEXT not null,
        question varchar(255) not null,
        primary key (id)
    )
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    create table support_logos (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        image_url varchar(255),
        name varchar(255),
        website_url varchar(255),
        primary key (id)
    )
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    create table testimonials (
        display_order integer,
        is_active boolean,
        rating integer not null,
        created_at timestamp(6),
        id bigserial not null,
        comment varchar(1000) not null,
        avatar_url varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    create table users (
        is_active boolean,
        login_count integer,
        created_at timestamp(6),
        id bigserial not null,
        last_activity timestamp(6),
        last_login timestamp(6),
        email varchar(255) not null unique,
        full_name varchar(255),
        password varchar(255) not null,
        phone_number varchar(255),
        role varchar(255) check (role in ('USER','ADMIN')),
        source varchar(255),
        primary key (id)
    )
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    create table visitors (
        bounced boolean not null,
        is_active boolean not null,
        is_downloaded boolean not null,
        page_visit_count integer not null,
        first_visit_time timestamp(6) not null,
        id bigserial not null,
        last_active_time timestamp(6) not null,
        session_duration bigint,
        ip_address varchar(255) not null,
        last_page_visited varchar(255),
        session_id varchar(255) not null,
        user_agent varchar(255),
        primary key (id)
    )
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    create index idx_session_id 
       on visitors (session_id)
2025-02-19 15:15:33 [main] DEBUG org.hibernate.SQL - 
    create index idx_last_active 
       on visitors (last_active_time)
2025-02-19 15:15:33 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-19 15:15:34 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-19 15:15:35 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-19 15:15:35 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-19 15:15:35 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@67d5ad55, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b961cb6, org.springframework.security.web.context.SecurityContextHolderFilter@84f12b6, org.springframework.security.web.header.HeaderWriterFilter@26e5403, org.springframework.web.filter.CorsFilter@27f619e9, org.springframework.security.web.authentication.logout.LogoutFilter@5d182ffa, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3d435f83, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@527c4caa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@16d76df7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@45c721b8, org.springframework.security.web.access.ExceptionTranslationFilter@6f034a25, org.springframework.security.web.access.intercept.AuthorizationFilter@5c72d1b5]
2025-02-19 15:15:36 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-19 15:15:36 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 4.761 seconds (process running for 5.07)
2025-02-19 15:15:36 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-19 15:15:36 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-19 15:15:36 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-19 15:15:39 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@4827180b]]
2025-02-19 15:15:39 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:15:39 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [12, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@2f6a0329]
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:15:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:15:40 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:15:40 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:15:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 15:15:40 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:15:40 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:15:40 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 15:15:40 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session d07cfa45-a743-432a-8b4c-045d48876272 on page session-update
2025-02-19 15:15:40 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:15:40 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 116ms | Result: admin/dashboard
2025-02-19 15:15:40 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 114ms | Result: <200 OK OK,[]>
2025-02-19 15:15:40 [http-nio-8080-exec-5] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 15:15:40 [http-nio-8080-exec-5] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 15:15:40 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:40 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:40 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:40 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:40.621857976, endDate: 2025-02-19T15:15:40.621857976
2025-02-19 15:15:40 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:40.621879036, endDate: 2025-02-19T15:15:40.621879036
2025-02-19 15:15:40 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:40 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:40 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:40.622109387, endDate: 2025-02-19T15:15:40.622109387
2025-02-19 15:15:40 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:40 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:40.622769444, endDate: 2025-02-19T15:15:40.622769444
2025-02-19 15:15:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:40 [http-nio-8080-exec-8] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 15:15:40 [http-nio-8080-exec-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 15:15:40 [http-nio-8080-exec-10] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 15:15:40 [http-nio-8080-exec-8] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 15:15:40 [http-nio-8080-exec-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 15:15:40 [http-nio-8080-exec-10] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 15:15:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-1] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getActivityHeatmap(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:15:40 [http-nio-8080-exec-9] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getActivityHeatmap(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:15:40 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 62ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:15:40 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 62ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:15:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:40 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:15:40 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:15:40 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:15:40 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:15:40 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:15:40 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:15:40 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=100.0, previous=0.0, change=100.0
2025-02-19 15:15:40 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=100.0, previous=0.0, change=100.0
2025-02-19 15:15:40 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:15:40 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:15:40 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:15:40 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=100.0, previous=0.0, change=100.0
2025-02-19 15:15:40 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:15:40 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:15:40 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:15:40 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=100.0, previous=0.0, change=100.0
2025-02-19 15:15:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:40 [http-nio-8080-exec-2] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getVisitorStats(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:15:40 [http-nio-8080-exec-8] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getVisitorStats(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:15:40 [http-nio-8080-exec-4] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getVisitorStats(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:15:40 [http-nio-8080-exec-10] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getVisitorStats(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:15:40 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 88ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=100.0},[]>
2025-02-19 15:15:40 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 88ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=100.0},[]>
2025-02-19 15:15:40 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 87ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=100.0},[]>
2025-02-19 15:15:40 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 88ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=100.0},[]>
2025-02-19 15:15:43 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [3, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@33cace45]
2025-02-19 15:15:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:43 [http-nio-8080-exec-3] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.Controller.AnalyticsController.updateSessionData(AnalyticsController.java:34)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.updateSessionData(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 162 common frames omitted
2025-02-19 15:15:43 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 3ms | Result: <200 OK OK,[]>
2025-02-19 15:15:43 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@165b9ce6]]
2025-02-19 15:15:43 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:15:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:15:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:15:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:15:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:15:43 [http-nio-8080-exec-5] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:15:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:15:43 [http-nio-8080-exec-5] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:15:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:15:43 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:15:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:15:43 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:15:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:15:43 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:15:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:43 [http-nio-8080-exec-5] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AdminController$$SpringCGLIB$$0.dashboard(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:15:43 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 21ms | Result: admin/dashboard
2025-02-19 15:15:44 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:44 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:44 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:44.172507103, endDate: 2025-02-19T15:15:44.172507103
2025-02-19 15:15:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:44 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:15:44 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:15:44 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:15:44.173614177, endDate: 2025-02-19T15:15:44.173614177
2025-02-19 15:15:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:15:44 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:44 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:15:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:44.174471934, endDate: 2025-02-19T15:15:44.174471934
2025-02-19 15:15:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:15:44.174475400, endDate: 2025-02-19T15:15:44.174475400
2025-02-19 15:15:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:15:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-8] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getActivityHeatmap(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:15:44 [http-nio-8080-exec-3] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getActivityHeatmap(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:15:44 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 6ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:15:44 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 5ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:15:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:15:44 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:15:44 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:15:44 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:15:44 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:15:44 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:15:44 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=100.0, previous=0.0, change=100.0
2025-02-19 15:15:44 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=100.0, previous=0.0, change=100.0
2025-02-19 15:15:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:15:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:15:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:15:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:15:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:15:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:15:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=100.0, previous=0.0, change=100.0
2025-02-19 15:15:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:15:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=100.0, previous=0.0, change=100.0
2025-02-19 15:15:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:15:44 [http-nio-8080-exec-10] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getVisitorStats(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:15:44 [http-nio-8080-exec-2] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getVisitorStats(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:15:44 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 15ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=100.0},[]>
2025-02-19 15:15:44 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 16ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=100.0},[]>
2025-02-19 15:15:44 [http-nio-8080-exec-5] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getVisitorStats(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:15:44 [http-nio-8080-exec-9] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getVisitorStats(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:15:44 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 16ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=100.0},[]>
2025-02-19 15:15:44 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 16ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=100.0},[]>
2025-02-19 15:20:44 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:20:44 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:20:44 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:20:44.533942985, endDate: 2025-02-19T15:20:44.533942985
2025-02-19 15:20:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:20:44 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:20:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:20:44.535807327, endDate: 2025-02-19T15:20:44.535807327
2025-02-19 15:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:20:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-10] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getActivityHeatmap(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:20:44 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 5ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:20:44 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:20:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:20:44.540051307, endDate: 2025-02-19T15:20:44.540051307
2025-02-19 15:20:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:20:44 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:20:44 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:20:44 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=100.0, previous=0.0, change=100.0
2025-02-19 15:20:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:20:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:20:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:20:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:20:44 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=100.0, previous=0.0, change=100.0
2025-02-19 15:20:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:20:44 [http-nio-8080-exec-2] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getVisitorStats(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:20:44 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 20ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=100.0},[]>
2025-02-19 15:20:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:20:44 [http-nio-8080-exec-9] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getVisitorStats(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:20:44 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 19ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=100.0},[]>
2025-02-19 15:20:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:20:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:20:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:20:44 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=100.0, previous=0.0, change=100.0
2025-02-19 15:20:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=?
2025-02-19 15:20:44 [http-nio-8080-exec-5] ERROR u.pdp.ilmpay.service.VisitorService - Failed to record visit: Query did not return a unique result: 2 results were returned
org.springframework.dao.IncorrectResultSizeDataAccessException: Query did not return a unique result: 2 results were returned
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:301)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy166.findBySessionId(Unknown Source)
	at uz.pdp.ilmpay.service.VisitorService.recordVisit(VisitorService.java:193)
	at uz.pdp.ilmpay.aspect.VisitorTrackingAspect.trackPageVisit(VisitorTrackingAspect.java:19)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at uz.pdp.ilmpay.aspect.LoggingAspect.logAround(LoggingAspect.java:38)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.ilmpay.Controller.AnalyticsController$$SpringCGLIB$$0.getVisitorStats(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.hibernate.NonUniqueResultException: Query did not return a unique result: 2 results were returned
	at org.hibernate.query.spi.AbstractSelectionQuery.uniqueElement(AbstractSelectionQuery.java:586)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:570)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:415)
	at jdk.proxy2/jdk.proxy2.$Proxy193.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 164 common frames omitted
2025-02-19 15:20:44 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 20ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=100.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=1, bounceRate=100.0},[]>
2025-02-19 15:21:38 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-19 15:21:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-19 15:21:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-19 15:21:41 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 1752718 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-19 15:21:41 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-19 15:21:41 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-19 15:21:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-19 15:21:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 8 JPA repository interfaces.
2025-02-19 15:21:42 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 15:21:42 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 15:21:42 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-19 15:21:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-19 15:21:42 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-19 15:21:42 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-19 15:21:42 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-19 15:21:42 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1162 ms
2025-02-19 15:21:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-19 15:21:42 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4bc21e34
2025-02-19 15:21:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-19 15:21:42 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5432/ilmpay (PostgreSQL 17.2)
2025-02-19 15:21:42 [main] WARN  o.f.c.i.database.base.Database - Flyway upgrade recommended: PostgreSQL 17.2 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 16.
2025-02-19 15:21:42 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 8
2025-02-19 15:21:42 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-19 15:21:42 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (8) that is newer than the latest available migration (5) !
2025-02-19 15:21:42 [main] INFO  o.f.core.internal.command.DbMigrate - Migrating schema "public" to version "5 - add unique constraint to session id" [out of order]
2025-02-19 15:21:42 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (8) that is newer than the latest available migration (5) !
2025-02-19 15:21:42 [main] INFO  o.f.core.internal.command.DbMigrate - Successfully applied 1 migration to schema "public", now at version v5 (execution time 00:00.008s)
2025-02-19 15:21:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-19 15:21:42 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-19 15:21:42 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-19 15:21:42 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-19 15:21:42 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-19 15:21:43 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-19 15:21:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-19 15:21:43 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-19 15:21:45 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-19 15:21:45 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-19 15:21:45 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2775d0d4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7bf62880, org.springframework.security.web.context.SecurityContextHolderFilter@725e942b, org.springframework.security.web.header.HeaderWriterFilter@558ff531, org.springframework.web.filter.CorsFilter@53851bb9, org.springframework.security.web.authentication.logout.LogoutFilter@7fb4c8bc, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6f136d41, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1b1cc90, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3fad151c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c4e6b39, org.springframework.security.web.access.ExceptionTranslationFilter@50ff1882, org.springframework.security.web.access.intercept.AuthorizationFilter@1f520187]
2025-02-19 15:21:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-19 15:21:45 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 5.1 seconds (process running for 5.473)
2025-02-19 15:21:45 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-19 15:21:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-19 15:21:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-19 15:21:47 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 1753620 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-19 15:21:47 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-19 15:21:47 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-19 15:21:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-19 15:21:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 8 JPA repository interfaces.
2025-02-19 15:21:48 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 15:21:48 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 15:21:48 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-19 15:21:48 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-19 15:21:48 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-19 15:21:48 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-19 15:21:48 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-19 15:21:48 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1101 ms
2025-02-19 15:21:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-19 15:21:48 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@506b083
2025-02-19 15:21:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-19 15:21:48 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5432/ilmpay (PostgreSQL 17.2)
2025-02-19 15:21:48 [main] WARN  o.f.c.i.database.base.Database - Flyway upgrade recommended: PostgreSQL 17.2 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 16.
2025-02-19 15:21:48 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 8
2025-02-19 15:21:48 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-19 15:21:48 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (8) that is newer than the latest available migration (5) !
2025-02-19 15:21:48 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-19 15:21:49 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-19 15:21:49 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-19 15:21:49 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-19 15:21:49 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-19 15:21:49 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-19 15:21:49 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists benefit_cards cascade
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faq cascade
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faqs cascade
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists support_logos cascade
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists testimonials cascade
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    drop table if exists visitors cascade
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    create table benefit_cards (
        active boolean not null,
        display_order integer check ((display_order<=4) and (display_order>=1)),
        created_at timestamp(6),
        id bigserial not null,
        description TEXT,
        icon_url varchar(255),
        title varchar(255),
        primary key (id)
    )
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    create table faq (
        id bigserial not null,
        answer TEXT,
        category varchar(255),
        question varchar(255),
        primary key (id)
    )
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    create table faqs (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        updated_at timestamp(6),
        answer TEXT not null,
        question varchar(255) not null,
        primary key (id)
    )
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    create table support_logos (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        image_url varchar(255),
        name varchar(255),
        website_url varchar(255),
        primary key (id)
    )
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    create table testimonials (
        display_order integer,
        is_active boolean,
        rating integer not null,
        created_at timestamp(6),
        id bigserial not null,
        comment varchar(1000) not null,
        avatar_url varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    create table users (
        is_active boolean,
        login_count integer,
        created_at timestamp(6),
        id bigserial not null,
        last_activity timestamp(6),
        last_login timestamp(6),
        email varchar(255) not null unique,
        full_name varchar(255),
        password varchar(255) not null,
        phone_number varchar(255),
        role varchar(255) check (role in ('USER','ADMIN')),
        source varchar(255),
        primary key (id)
    )
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    create table visitors (
        bounced boolean not null,
        is_active boolean not null,
        is_downloaded boolean not null,
        page_visit_count integer not null,
        first_visit_time timestamp(6) not null,
        id bigserial not null,
        last_active_time timestamp(6) not null,
        session_duration bigint,
        ip_address varchar(255) not null,
        last_page_visited varchar(255),
        session_id varchar(255) not null,
        user_agent varchar(255),
        primary key (id)
    )
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    create index idx_session_id 
       on visitors (session_id)
2025-02-19 15:21:49 [main] DEBUG org.hibernate.SQL - 
    create index idx_last_active 
       on visitors (last_active_time)
2025-02-19 15:21:49 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-19 15:21:50 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-19 15:21:51 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-19 15:21:51 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-19 15:21:51 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3fc7b289, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@52af8366, org.springframework.security.web.context.SecurityContextHolderFilter@71303d2c, org.springframework.security.web.header.HeaderWriterFilter@7a234d98, org.springframework.web.filter.CorsFilter@4478bb7e, org.springframework.security.web.authentication.logout.LogoutFilter@748ef9e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@423ab841, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@147a07cd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@67d30d56, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58bb8b59, org.springframework.security.web.access.ExceptionTranslationFilter@7ee7a75e, org.springframework.security.web.access.intercept.AuthorizationFilter@1ae0f811]
2025-02-19 15:21:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-19 15:21:52 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 4.922 seconds (process running for 5.313)
2025-02-19 15:21:52 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-19 15:21:52 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-19 15:21:52 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-02-19 15:21:55 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-02-19 15:21:55 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-02-19 15:21:55 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-02-19 15:21:56 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 1754889 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-19 15:21:56 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-19 15:21:56 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-19 15:21:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-19 15:21:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 8 JPA repository interfaces.
2025-02-19 15:21:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 15:21:57 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 15:21:57 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-19 15:21:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-19 15:21:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-19 15:21:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-19 15:21:57 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-19 15:21:57 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1109 ms
2025-02-19 15:21:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-19 15:21:58 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@237aa0c7
2025-02-19 15:21:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-02-19 15:21:58 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5432/ilmpay (PostgreSQL 17.2)
2025-02-19 15:21:58 [main] WARN  o.f.c.i.database.base.Database - Flyway upgrade recommended: PostgreSQL 17.2 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 16.
2025-02-19 15:21:58 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 8
2025-02-19 15:21:58 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-02-19 15:21:58 [main] WARN  o.f.core.internal.command.DbMigrate - Schema "public" has a version (8) that is newer than the latest available migration (5) !
2025-02-19 15:21:58 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-02-19 15:21:58 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-19 15:21:58 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-02-19 15:21:58 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-02-19 15:21:58 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-19 15:21:58 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-19 15:21:59 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists benefit_cards cascade
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faq cascade
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists faqs cascade
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists support_logos cascade
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists testimonials cascade
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists visitors cascade
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    create table benefit_cards (
        active boolean not null,
        display_order integer check ((display_order<=4) and (display_order>=1)),
        created_at timestamp(6),
        id bigserial not null,
        description TEXT,
        icon_url varchar(255),
        title varchar(255),
        primary key (id)
    )
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    create table faq (
        id bigserial not null,
        answer TEXT,
        category varchar(255),
        question varchar(255),
        primary key (id)
    )
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    create table faqs (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        updated_at timestamp(6),
        answer TEXT not null,
        question varchar(255) not null,
        primary key (id)
    )
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    create table support_logos (
        active boolean not null,
        display_order integer,
        created_at timestamp(6),
        id bigserial not null,
        image_url varchar(255),
        name varchar(255),
        website_url varchar(255),
        primary key (id)
    )
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    create table testimonials (
        display_order integer,
        is_active boolean,
        rating integer not null,
        created_at timestamp(6),
        id bigserial not null,
        comment varchar(1000) not null,
        avatar_url varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    create table users (
        is_active boolean,
        login_count integer,
        created_at timestamp(6),
        id bigserial not null,
        last_activity timestamp(6),
        last_login timestamp(6),
        email varchar(255) not null unique,
        full_name varchar(255),
        password varchar(255) not null,
        phone_number varchar(255),
        role varchar(255) check (role in ('USER','ADMIN')),
        source varchar(255),
        primary key (id)
    )
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    create table visitors (
        bounced boolean not null,
        is_active boolean not null,
        is_downloaded boolean not null,
        page_visit_count integer not null,
        first_visit_time timestamp(6) not null,
        id bigserial not null,
        last_active_time timestamp(6) not null,
        session_duration bigint,
        ip_address varchar(255) not null,
        last_page_visited varchar(255),
        session_id varchar(255) not null,
        user_agent varchar(255),
        primary key (id)
    )
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    create index idx_session_id 
       on visitors (session_id)
2025-02-19 15:21:59 [main] DEBUG org.hibernate.SQL - 
    create index idx_last_active 
       on visitors (last_active_time)
2025-02-19 15:21:59 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-19 15:21:59 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-02-19 15:22:00 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
2025-02-19 15:22:01 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-02-19 15:22:01 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1f259685, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@25123ce4, org.springframework.security.web.context.SecurityContextHolderFilter@230ca3c3, org.springframework.security.web.header.HeaderWriterFilter@4a5dbec, org.springframework.web.filter.CorsFilter@7a234d98, org.springframework.security.web.authentication.logout.LogoutFilter@45c721b8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6b18bdf7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6cc57f26, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@dbe577f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1215aae8, org.springframework.security.web.access.ExceptionTranslationFilter@2239cf41, org.springframework.security.web.access.intercept.AuthorizationFilter@2f2fda15]
2025-02-19 15:22:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-02-19 15:22:01 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Started IlmpayApplication in 4.977 seconds (process running for 5.308)
2025-02-19 15:22:01 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-19 15:22:01 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-02-19 15:22:01 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-02-19 15:22:03 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@1571c4a6]]
2025-02-19 15:22:03 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [379, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@b1b03b0]
2025-02-19 15:22:03 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:22:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:22:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:22:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:22:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:22:03 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:22:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:22:03 [http-nio-8080-exec-2] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:22:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        visitors
        (bounced, first_visit_time, ip_address, is_active, is_downloaded, last_active_time, last_page_visited, page_visit_count, session_duration, session_id, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-02-19 15:22:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:22:03 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:22:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:22:03 [http-nio-8080-exec-2] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:22:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:22:03 [http-nio-8080-exec-2] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:22:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:03 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Recorded new visit from IP: 127.0.0.1 with session d07cfa45-a743-432a-8b4c-045d48876272 on page session-update
2025-02-19 15:22:03 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 99ms | Result: <200 OK OK,[]>
2025-02-19 15:22:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:03 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:22:03 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 119ms | Result: admin/dashboard
2025-02-19 15:22:04 [http-nio-8080-exec-5] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 15:22:04 [http-nio-8080-exec-5] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 15:22:04 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler processing failed: java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'] with root cause
java.lang.NoSuchMethodError: 'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod, java.lang.Exception, org.springframework.web.context.request.ServletWebRequest)'
	at io.github.wimdeblauwe.htmx.spring.boot.mvc.HtmxExceptionHandlerExceptionResolver.doResolveHandlerMethodException(HtmxExceptionHandlerExceptionResolver.java:31)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:175)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-02-19 15:22:04 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:04 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:04 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:04.631233951, endDate: 2025-02-19T15:22:04.631233951
2025-02-19 15:22:04 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:04 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:04.634847520, endDate: 2025-02-19T15:22:04.634847520
2025-02-19 15:22:04 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:04 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:04 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:04 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:04.657057399, endDate: 2025-02-19T15:22:04.657057399
2025-02-19 15:22:04 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:04.657057429, endDate: 2025-02-19T15:22:04.657057429
2025-02-19 15:22:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:04 [http-nio-8080-exec-3] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 15:22:04 [http-nio-8080-exec-9] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 15:22:04 [http-nio-8080-exec-3] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 15:22:04 [http-nio-8080-exec-4] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 01000
2025-02-19 15:22:04 [http-nio-8080-exec-9] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 15:22:04 [http-nio-8080-exec-4] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - database "ilmpay" has a collation version mismatch
2025-02-19 15:22:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:04 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:04 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 67ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:04 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 42ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:04 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:04 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:04 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:04 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:04 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-19 15:22:04 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-19 15:22:04 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-19 15:22:04 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=0, previous=0, change=0.0
2025-02-19 15:22:04 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:04 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:04 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:04 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:04 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:04 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:04 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:04 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:04 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:04 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 101ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-19 15:22:04 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:04 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 80ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-19 15:22:04 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:04 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 108ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-19 15:22:04 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:04 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 83ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=0.0, avgSessionDuration=0.0, durationChange=0.0, visitorChange=100.0, activeUsers=0, bounceRate=0.0},[]>
2025-02-19 15:22:06 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [1, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@674f4a5b]
2025-02-19 15:22:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:06 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page session-update
2025-02-19 15:22:06 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 7ms | Result: <200 OK OK,[]>
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@305a0a30]]
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 26ms | Result: admin/dashboard
2025-02-19 15:22:06 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:06 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:06 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:06.638093165, endDate: 2025-02-19T15:22:06.638093165
2025-02-19 15:22:06 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:06 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:06.638470982, endDate: 2025-02-19T15:22:06.638470982
2025-02-19 15:22:06 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:06.639924144, endDate: 2025-02-19T15:22:06.639924144
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:06 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:06 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:06.641395539, endDate: 2025-02-19T15:22:06.641395539
2025-02-19 15:22:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:06 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 10ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:06 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:06 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 11ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:06 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:06 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=2.0, previous=0.0, change=100.0
2025-02-19 15:22:06 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:06 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:06 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:06 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=2.0, previous=0.0, change=100.0
2025-02-19 15:22:06 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=2.0, previous=0.0, change=100.0
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:06 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:06 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:06 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=2.0, previous=0.0, change=100.0
2025-02-19 15:22:06 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:06 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:06 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 19ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=2.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:06 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:06 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 19ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=2.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:06 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 19ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=2.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:06 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:06 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 20ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=2.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:08 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [1, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@732b6109]
2025-02-19 15:22:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:08 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page session-update
2025-02-19 15:22:08 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 11ms | Result: <200 OK OK,[]>
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@2cdac8f6]]
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 29ms | Result: admin/dashboard
2025-02-19 15:22:08 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:08 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:08 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:08.780232833, endDate: 2025-02-19T15:22:08.780232833
2025-02-19 15:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:08 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:08 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:08.782054756, endDate: 2025-02-19T15:22:08.782054756
2025-02-19 15:22:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:08.785203934, endDate: 2025-02-19T15:22:08.785203934
2025-02-19 15:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:08 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:08.786352035, endDate: 2025-02-19T15:22:08.786352035
2025-02-19 15:22:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:08 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:08 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 7ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:08 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 6ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:08 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:08 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:08 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:08 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=4.0, previous=0.0, change=100.0
2025-02-19 15:22:08 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=4.0, previous=0.0, change=100.0
2025-02-19 15:22:08 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:08 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=4.0, previous=0.0, change=100.0
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:08 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:08 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 16ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=4.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:08 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:08 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 16ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=4.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:08 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:08 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:08 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=4.0, previous=0.0, change=100.0
2025-02-19 15:22:08 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:08 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 16ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=4.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:08 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:08 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 17ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=4.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:10 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [1, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@12add4d8]
2025-02-19 15:22:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:10 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page session-update
2025-02-19 15:22:10 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 8ms | Result: <200 OK OK,[]>
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@1557605a]]
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 25ms | Result: admin/dashboard
2025-02-19 15:22:10 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:10 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:10 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:10.824784288, endDate: 2025-02-19T15:22:10.824784288
2025-02-19 15:22:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:10 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:10 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:10.825866335, endDate: 2025-02-19T15:22:10.825866335
2025-02-19 15:22:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:10 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:10.828105438, endDate: 2025-02-19T15:22:10.828105438
2025-02-19 15:22:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:10 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:10.829885713, endDate: 2025-02-19T15:22:10.829885713
2025-02-19 15:22:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:10 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:10 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=6.0, previous=0.0, change=100.0
2025-02-19 15:22:10 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 8ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:10 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:10 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=6.0, previous=0.0, change=100.0
2025-02-19 15:22:10 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:10 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:10 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 7ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=6.0, previous=0.0, change=100.0
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:10 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:10 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:10 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:10 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=6.0, previous=0.0, change=100.0
2025-02-19 15:22:10 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:10 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 12ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=6.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:10 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:10 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 12ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=6.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:10 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 12ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=6.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:10 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:10 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 12ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=6.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:12 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [1, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@3ea9a5ce]
2025-02-19 15:22:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:12 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page session-update
2025-02-19 15:22:12 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 7ms | Result: <200 OK OK,[]>
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@27e9c4a2]]
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 25ms | Result: admin/dashboard
2025-02-19 15:22:12 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:12 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:12.872813535, endDate: 2025-02-19T15:22:12.872813535
2025-02-19 15:22:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:12 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:12 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:12 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:12.873969049, endDate: 2025-02-19T15:22:12.873969049
2025-02-19 15:22:12 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:12 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:12.877984249, endDate: 2025-02-19T15:22:12.877984249
2025-02-19 15:22:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:12 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:12.878022100, endDate: 2025-02-19T15:22:12.878022100
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:12 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 13ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:12 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 14ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:12 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:12 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=8.0, previous=0.0, change=100.0
2025-02-19 15:22:12 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:12 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:12 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:12 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=8.0, previous=0.0, change=100.0
2025-02-19 15:22:12 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:12 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:12 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:12 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=9.0, previous=0.0, change=100.0
2025-02-19 15:22:12 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=9.0, previous=0.0, change=100.0
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:12 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:12 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 23ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=8.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:12 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:12 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 25ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=8.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:12 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:12 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 22ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=9.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:12 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 24ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=9.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:14 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [1, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@62fae2c9]
2025-02-19 15:22:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:14 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page session-update
2025-02-19 15:22:14 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 8ms | Result: <200 OK OK,[]>
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@58a8d3d]]
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 18ms | Result: admin/dashboard
2025-02-19 15:22:14 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:14 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:14 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:14 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:14 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:14.767083370, endDate: 2025-02-19T15:22:14.767083370
2025-02-19 15:22:14 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:14.767085033, endDate: 2025-02-19T15:22:14.767085033
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:14.767590890, endDate: 2025-02-19T15:22:14.767590890
2025-02-19 15:22:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:14 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:14 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:14.768246328, endDate: 2025-02-19T15:22:14.768246328
2025-02-19 15:22:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:14 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 6ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:14 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 7ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:14 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:14 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:14 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:14 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=10.0, previous=0.0, change=100.0
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=10.0, previous=0.0, change=100.0
2025-02-19 15:22:14 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:14 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:14 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=10.0, previous=0.0, change=100.0
2025-02-19 15:22:14 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:14 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:14 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:14 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=10.0, previous=0.0, change=100.0
2025-02-19 15:22:14 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:14 [http-nio-8080-exec-8] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 11ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=10.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:14 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:14 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 13ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=10.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:14 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:14 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 15ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=10.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:14 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:14 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 15ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=10.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:18 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [3, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@36e0e899]
2025-02-19 15:22:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:18 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page session-update
2025-02-19 15:22:18 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 7ms | Result: <200 OK OK,[]>
2025-02-19 15:22:18 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@38d0d033]]
2025-02-19 15:22:18 [http-nio-8080-exec-10] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:22:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:22:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:22:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:22:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:22:18 [http-nio-8080-exec-10] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:22:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:22:18 [http-nio-8080-exec-10] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:22:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:22:18 [http-nio-8080-exec-10] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:22:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:22:18 [http-nio-8080-exec-10] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:22:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:22:18 [http-nio-8080-exec-10] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:22:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:18 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:22:18 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 17ms | Result: admin/dashboard
2025-02-19 15:22:19 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:19 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:19 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:19.099963605, endDate: 2025-02-19T15:22:19.099963605
2025-02-19 15:22:19 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:19 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:19.100267664, endDate: 2025-02-19T15:22:19.100267664
2025-02-19 15:22:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:19 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:19 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:19 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:19.101400586, endDate: 2025-02-19T15:22:19.101400586
2025-02-19 15:22:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:19 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:19.102430105, endDate: 2025-02-19T15:22:19.102430105
2025-02-19 15:22:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:19 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:19 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=14.0, previous=0.0, change=100.0
2025-02-19 15:22:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:19 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:19 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=14.0, previous=0.0, change=100.0
2025-02-19 15:22:19 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:19 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:19 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:19 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=14.0, previous=0.0, change=100.0
2025-02-19 15:22:19 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:19 [http-nio-8080-exec-5] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:19 [http-nio-8080-exec-5] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 8ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:19 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:19 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:19 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=14.0, previous=0.0, change=100.0
2025-02-19 15:22:19 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:19 [http-nio-8080-exec-2] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:19 [http-nio-8080-exec-2] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 6ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:19 [http-nio-8080-exec-1] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:19 [http-nio-8080-exec-1] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 8ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=14.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:19 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:19 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 11ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=14.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:19 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:19 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 11ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=14.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:19 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:19 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 11ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=14.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:21 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> POST /api/analytics/session-update | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: updateSessionData | Args: [2, true, org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@78ef2067]
2025-02-19 15:22:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:21 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page session-update
2025-02-19 15:22:21 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> POST /api/analytics/session-update | Time: 4ms | Result: <200 OK OK,[]>
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /admin/dashboard | Class: uz.pdp.ilmpay.Controller.AdminController | Method: dashboard | Args: [{}, SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@1ece893c]]
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  u.p.i.Controller.AdminController - 🎮 Loading admin dashboard
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time>=?
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_downloaded
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(v1_0.id) 
    from
        visitors v1_0 
    where
        v1_0.is_active
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  u.p.i.service.SupportLogoService - 🔍 Fetching all active support logos
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.active,
        sl1_0.created_at,
        sl1_0.display_order,
        sl1_0.image_url,
        sl1_0.name,
        sl1_0.website_url 
    from
        support_logos sl1_0 
    where
        sl1_0.active=true 
    order by
        sl1_0.display_order
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  u.p.i.service.SupportLogoService - ✨ Found 0 active support logos
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        bc1_0.id,
        bc1_0.active,
        bc1_0.created_at,
        bc1_0.description,
        bc1_0.display_order,
        bc1_0.icon_url,
        bc1_0.title 
    from
        benefit_cards bc1_0 
    where
        bc1_0.active 
    order by
        bc1_0.display_order
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  u.p.i.service.TestimonialService - 🔍 Fetching all active testimonials
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.avatar_url,
        t1_0.comment,
        t1_0.created_at,
        t1_0.is_active,
        t1_0.name,
        t1_0.display_order,
        t1_0.rating 
    from
        testimonials t1_0 
    where
        t1_0.is_active 
    order by
        t1_0.display_order
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  u.p.i.service.TestimonialService - ✨ Found 0 active testimonials
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        f1_0.id,
        f1_0.active,
        f1_0.answer,
        f1_0.created_at,
        f1_0.display_order,
        f1_0.question,
        f1_0.updated_at 
    from
        faqs f1_0 
    where
        f1_0.active 
    order by
        f1_0.display_order
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  u.p.i.Controller.AdminController - ✨ Dashboard loaded successfully
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page dashboard
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /admin/dashboard | Time: 11ms | Result: admin/dashboard
2025-02-19 15:22:21 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:21 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:21.747170182, endDate: 2025-02-19T15:22:21.747170182
2025-02-19 15:22:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:21 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:21 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [30]
2025-02-19 15:22:21 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 30, startDate: 2025-01-20T15:22:21.747817194, endDate: 2025-02-19T15:22:21.747817194
2025-02-19 15:22:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:21 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/activity-heatmap | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getActivityHeatmap | Args: [7]
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    SELECT
        EXTRACT(HOUR FROM first_visit_time) as hour,
        EXTRACT(DOW FROM first_visit_time) as day_of_week,
        COUNT(DISTINCT session_id) as count 
    FROM
        visitors 
    WHERE
        first_visit_time BETWEEN ? AND ? 
    GROUP BY
        EXTRACT(HOUR FROM first_visit_time),
        EXTRACT(DOW FROM first_visit_time)
2025-02-19 15:22:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:21.749393245, endDate: 2025-02-19T15:22:21.749393245
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - 🚀 Request -> GET /api/analytics/visitor-stats | Class: uz.pdp.ilmpay.Controller.AnalyticsController | Method: getVisitorStats | Args: [1]
2025-02-19 15:22:21 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - getVisitorStats - days: 1, startDate: 2025-02-18T15:22:21.749845372, endDate: 2025-02-19T15:22:21.749845372
2025-02-19 15:22:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    -- Daily visitor statistics query - startDate: :startDate, endDate: :endDate SELECT
        DATE(v.first_visit_time) as date,
        COUNT(DISTINCT v.session_id) as count 
    FROM
        visitors v 
    WHERE
        v.first_visit_time BETWEEN ? AND ? 
    GROUP BY
        DATE(v.first_visit_time) 
    ORDER BY
        date
2025-02-19 15:22:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(distinct v1_0.session_id) 
    from
        visitors v1_0 
    where
        v1_0.is_active=true 
        and v1_0.last_active_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:21 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:21 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:21 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:21 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=17.0, previous=0.0, change=100.0
2025-02-19 15:22:21 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=17.0, previous=0.0, change=100.0
2025-02-19 15:22:21 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:21 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(v1_0.session_duration)=0 
                then 0.0 
            else avg(coalesce(v1_0.session_duration, 0)) 
        end, 0.0) 
    from
        visitors v1_0 
    where
        v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=17.0, previous=0.0, change=100.0
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        coalesce(case 
            when count(*)=0 
                then 0.0 
            else ((count(case 
                when v1_0.bounced=true 
                    then 1 
                end)*100.0)/count(*)) 
            end, 0.0) 
        from
            visitors v1_0 
        where
            v1_0.first_visit_time between ? and ?
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:21 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Visitors: current=1, previous=0, change=100.0
2025-02-19 15:22:21 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Active Users: current=1, previous=0, change=100.0
2025-02-19 15:22:21 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Avg Duration: current=17.0, previous=0.0, change=100.0
2025-02-19 15:22:21 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Comparison Stats - Bounce Rate: current=0.0, previous=0.0, change=0.0
2025-02-19 15:22:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.session_id=? 
        and v1_0.last_active_time>? 
    order by
        v1_0.last_active_time desc
2025-02-19 15:22:21 [http-nio-8080-exec-10] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:21 [http-nio-8080-exec-10] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 7ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.bounced,
        v1_0.first_visit_time,
        v1_0.ip_address,
        v1_0.is_active,
        v1_0.is_downloaded,
        v1_0.last_active_time,
        v1_0.last_page_visited,
        v1_0.page_visit_count,
        v1_0.session_duration,
        v1_0.session_id,
        v1_0.user_agent 
    from
        visitors v1_0 
    where
        v1_0.id=?
2025-02-19 15:22:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:21 [http-nio-8080-exec-6] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getActivityHeatmap
2025-02-19 15:22:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        visitors 
    set
        bounced=?,
        first_visit_time=?,
        ip_address=?,
        is_active=?,
        is_downloaded=?,
        last_active_time=?,
        last_page_visited=?,
        page_visit_count=?,
        session_duration=?,
        session_id=?,
        user_agent=? 
    where
        id=?
2025-02-19 15:22:21 [http-nio-8080-exec-6] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/activity-heatmap | Time: 6ms | Result: <200 OK OK,[{dayOfWeek=3, hour=15, count=1}],[]>
2025-02-19 15:22:21 [http-nio-8080-exec-3] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:21 [http-nio-8080-exec-3] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 9ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=17.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:21 [http-nio-8080-exec-4] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:21 [http-nio-8080-exec-4] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 11ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=17.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:21 [http-nio-8080-exec-9] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 11ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=17.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 15:22:21 [http-nio-8080-exec-7] INFO  u.pdp.ilmpay.service.VisitorService - Updated visit for session d07cfa45-a743-432a-8b4c-045d48876272 on page getVisitorStats
2025-02-19 15:22:21 [http-nio-8080-exec-7] INFO  uz.pdp.ilmpay.aspect.LoggingAspect - ✅ Response -> GET /api/analytics/visitor-stats | Time: 12ms | Result: <200 OK OK,{dailyVisitors=[{date=2025-02-19, visitors=1}], bounceChange=0.0, totalVisitors=1, activeChange=100.0, avgSessionDuration=17.0, durationChange=100.0, visitorChange=100.0, activeUsers=1, bounceRate=0.0},[]>
2025-02-19 17:50:59 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - Starting IlmpayApplication using Java 23.0.2 with PID 7549 (/home/lantanium/Documents/Ilmpay/target/classes started by lantanium in /home/lantanium/Documents/Ilmpay)
2025-02-19 17:50:59 [main] DEBUG uz.pdp.ilmpay.IlmpayApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2025-02-19 17:50:59 [main] INFO  uz.pdp.ilmpay.IlmpayApplication - No active profile set, falling back to 1 default profile: "default"
2025-02-19 17:51:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-19 17:51:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 8 JPA repository interfaces.
2025-02-19 17:51:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.ilmpay.Config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 17:51:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [annotationActionEndpointMapping] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-02-19 17:51:00 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2025-02-19 17:51:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-02-19 17:51:00 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-02-19 17:51:00 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2025-02-19 17:51:00 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-02-19 17:51:00 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1083 ms
2025-02-19 17:51:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-19 17:51:02 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: The connection attempt failed.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.api.configuration.ClassicConfiguration.getDatabaseType(ClassicConfiguration.java:1094)
	at org.flywaydb.core.internal.resource.ResourceNameValidator.isSpecialResourceFile(ResourceNameValidator.java:75)
	at org.flywaydb.core.internal.resource.ResourceNameValidator.validateSQLMigrationNaming(ResourceNameValidator.java:49)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:131)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:147)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at uz.pdp.ilmpay.IlmpayApplication.main(IlmpayApplication.java:11)
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:318)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)
	at java.base/java.net.Socket$SocketInputStream.implRead(Socket.java:1116)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:1103)
	at org.postgresql.core.VisibleBufferedInputStream.readMore(VisibleBufferedInputStream.java:161)
	at org.postgresql.core.VisibleBufferedInputStream.ensureBytes(VisibleBufferedInputStream.java:128)
	at org.postgresql.core.VisibleBufferedInputStream.ensureBytes(VisibleBufferedInputStream.java:113)
	at org.postgresql.core.VisibleBufferedInputStream.read(VisibleBufferedInputStream.java:73)
	at org.postgresql.core.PGStream.receiveChar(PGStream.java:465)
	at org.postgresql.core.v3.ConnectionFactoryImpl.enableSSL(ConnectionFactoryImpl.java:589)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:191)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 37 common frames omitted
2025-02-19 17:51:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-19 17:51:03 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: The connection attempt failed.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.api.configuration.ClassicConfiguration.getDatabaseType(ClassicConfiguration.java:1094)
	at org.flywaydb.core.internal.resource.ResourceNameValidator.isSpecialResourceFile(ResourceNameValidator.java:75)
	at org.flywaydb.core.internal.resource.ResourceNameValidator.validateSQLMigrationNaming(ResourceNameValidator.java:49)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:131)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:147)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at uz.pdp.ilmpay.IlmpayApplication.main(IlmpayApplication.java:11)
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:318)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)
	at java.base/java.net.Socket$SocketInputStream.implRead(Socket.java:1116)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:1103)
	at org.postgresql.core.VisibleBufferedInputStream.readMore(VisibleBufferedInputStream.java:161)
	at org.postgresql.core.VisibleBufferedInputStream.ensureBytes(VisibleBufferedInputStream.java:128)
	at org.postgresql.core.VisibleBufferedInputStream.ensureBytes(VisibleBufferedInputStream.java:113)
	at org.postgresql.core.VisibleBufferedInputStream.read(VisibleBufferedInputStream.java:73)
	at org.postgresql.core.PGStream.receiveChar(PGStream.java:465)
	at org.postgresql.core.v3.ConnectionFactoryImpl.enableSSL(ConnectionFactoryImpl.java:589)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:191)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 37 common frames omitted
2025-02-19 17:51:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-19 17:51:04 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: The connection attempt failed.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.api.configuration.ClassicConfiguration.getDatabaseType(ClassicConfiguration.java:1094)
	at org.flywaydb.core.internal.resource.ResourceNameValidator.isSpecialResourceFile(ResourceNameValidator.java:75)
	at org.flywaydb.core.internal.resource.ResourceNameValidator.validateSQLMigrationNaming(ResourceNameValidator.java:49)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:131)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:147)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at uz.pdp.ilmpay.IlmpayApplication.main(IlmpayApplication.java:11)
Caused by: java.io.EOFException: null
	at org.postgresql.core.PGStream.receiveChar(PGStream.java:467)
	at org.postgresql.core.v3.ConnectionFactoryImpl.enableSSL(ConnectionFactoryImpl.java:589)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:191)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 37 common frames omitted
2025-02-19 17:51:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-19 17:51:06 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: The connection attempt failed.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.api.configuration.ClassicConfiguration.getDatabaseType(ClassicConfiguration.java:1094)
	at org.flywaydb.core.internal.resource.ResourceNameValidator.isSpecialResourceFile(ResourceNameValidator.java:75)
	at org.flywaydb.core.internal.resource.ResourceNameValidator.validateSQLMigrationNaming(ResourceNameValidator.java:49)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:131)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:147)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at uz.pdp.ilmpay.IlmpayApplication.main(IlmpayApplication.java:11)
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:318)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)
	at java.base/java.net.Socket$SocketInputStream.implRead(Socket.java:1116)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:1103)
	at org.postgresql.core.VisibleBufferedInputStream.readMore(VisibleBufferedInputStream.java:161)
	at org.postgresql.core.VisibleBufferedInputStream.ensureBytes(VisibleBufferedInputStream.java:128)
	at org.postgresql.core.VisibleBufferedInputStream.ensureBytes(VisibleBufferedInputStream.java:113)
	at org.postgresql.core.VisibleBufferedInputStream.read(VisibleBufferedInputStream.java:73)
	at org.postgresql.core.PGStream.receiveChar(PGStream.java:465)
	at org.postgresql.core.v3.ConnectionFactoryImpl.enableSSL(ConnectionFactoryImpl.java:589)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:191)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 37 common frames omitted
2025-02-19 17:51:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-02-19 17:51:07 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
org.postgresql.util.PSQLException: The connection attempt failed.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.internal.jdbc.JdbcUtils.openConnection(JdbcUtils.java:48)
	at org.flywaydb.core.internal.jdbc.JdbcConnectionFactory.<init>(JdbcConnectionFactory.java:72)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:133)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:147)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at uz.pdp.ilmpay.IlmpayApplication.main(IlmpayApplication.java:11)
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:318)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)
	at java.base/java.net.Socket$SocketInputStream.implRead(Socket.java:1116)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:1103)
	at org.postgresql.core.VisibleBufferedInputStream.readMore(VisibleBufferedInputStream.java:161)
	at org.postgresql.core.VisibleBufferedInputStream.ensureBytes(VisibleBufferedInputStream.java:128)
	at org.postgresql.core.VisibleBufferedInputStream.ensureBytes(VisibleBufferedInputStream.java:113)
	at org.postgresql.core.VisibleBufferedInputStream.read(VisibleBufferedInputStream.java:73)
	at org.postgresql.core.PGStream.receiveChar(PGStream.java:465)
	at org.postgresql.core.v3.ConnectionFactoryImpl.enableSSL(ConnectionFactoryImpl.java:589)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:191)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 36 common frames omitted
2025-02-19 17:51:07 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Unable to obtain connection from database: The connection attempt failed.
-------------------------------------------------------------------------
SQL State  : 08001
Error Code : 0
Message    : The connection attempt failed.

2025-02-19 17:51:07 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-02-19 17:51:07 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-02-19 17:51:07 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Unable to obtain connection from database: The connection attempt failed.
-------------------------------------------------------------------------
SQL State  : 08001
Error Code : 0
Message    : The connection attempt failed.

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at uz.pdp.ilmpay.IlmpayApplication.main(IlmpayApplication.java:11)
Caused by: org.flywaydb.core.internal.exception.FlywaySqlException: Unable to obtain connection from database: The connection attempt failed.
-------------------------------------------------------------------------
SQL State  : 08001
Error Code : 0
Message    : The connection attempt failed.

	at org.flywaydb.core.internal.jdbc.JdbcUtils.openConnection(JdbcUtils.java:60)
	at org.flywaydb.core.internal.jdbc.JdbcConnectionFactory.<init>(JdbcConnectionFactory.java:72)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:133)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:147)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 18 common frames omitted
Caused by: org.postgresql.util.PSQLException: The connection attempt failed.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:354)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.flywaydb.core.internal.jdbc.JdbcUtils.openConnection(JdbcUtils.java:48)
	... 24 common frames omitted
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:318)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)
	at java.base/java.net.Socket$SocketInputStream.implRead(Socket.java:1116)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:1103)
	at org.postgresql.core.VisibleBufferedInputStream.readMore(VisibleBufferedInputStream.java:161)
	at org.postgresql.core.VisibleBufferedInputStream.ensureBytes(VisibleBufferedInputStream.java:128)
	at org.postgresql.core.VisibleBufferedInputStream.ensureBytes(VisibleBufferedInputStream.java:113)
	at org.postgresql.core.VisibleBufferedInputStream.read(VisibleBufferedInputStream.java:73)
	at org.postgresql.core.PGStream.receiveChar(PGStream.java:465)
	at org.postgresql.core.v3.ConnectionFactoryImpl.enableSSL(ConnectionFactoryImpl.java:589)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:191)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 36 common frames omitted
